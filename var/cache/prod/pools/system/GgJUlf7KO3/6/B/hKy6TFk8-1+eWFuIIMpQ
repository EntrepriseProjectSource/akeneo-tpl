<?php //Akeneo__Tool__Component__FileStorage__Model__FileInfo__CLASSMETADATA__

return [PHP_INT_MAX, static function () { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
        clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'Akeneo\\Tool\\Component\\FileStorage\\Model\\FileInfo',
            ],
            'namespace' => [
                'Akeneo\\Tool\\Component\\FileStorage\\Model',
            ],
            'rootEntityName' => [
                'Akeneo\\Tool\\Component\\FileStorage\\Model\\FileInfo',
            ],
            'customRepositoryClassName' => [
                'Akeneo\\Tool\\Bundle\\FileStorageBundle\\Doctrine\\ORM\\Repository\\FileInfoRepository',
            ],
            'identifier' => [
                [
                    'id',
                ],
            ],
            'generatorType' => [
                4,
            ],
            'fieldMappings' => [
                [
                    'id' => [
                        'fieldName' => 'id',
                        'type' => 'integer',
                        'id' => true,
                        'columnName' => 'id',
                    ],
                    'key' => [
                        'fieldName' => 'key',
                        'type' => 'string',
                        'columnName' => 'file_key',
                        'length' => 255,
                        'unique' => true,
                    ],
                    'originalFilename' => [
                        'fieldName' => 'originalFilename',
                        'type' => 'string',
                        'columnName' => 'original_filename',
                    ],
                    'mimeType' => [
                        'fieldName' => 'mimeType',
                        'type' => 'string',
                        'columnName' => 'mime_type',
                        'length' => 255,
                    ],
                    'size' => [
                        'fieldName' => 'size',
                        'type' => 'integer',
                        'nullable' => true,
                        'columnName' => 'size',
                    ],
                    'extension' => [
                        'fieldName' => 'extension',
                        'type' => 'string',
                        'length' => 10,
                        'columnName' => 'extension',
                    ],
                    'hash' => [
                        'fieldName' => 'hash',
                        'type' => 'string',
                        'length' => 100,
                        'nullable' => true,
                        'columnName' => 'hash',
                    ],
                    'storage' => [
                        'fieldName' => 'storage',
                        'type' => 'string',
                        'length' => 255,
                        'nullable' => true,
                        'columnName' => 'storage',
                    ],
                ],
            ],
            'fieldNames' => [
                [
                    'id' => 'id',
                    'file_key' => 'key',
                    'original_filename' => 'originalFilename',
                    'mime_type' => 'mimeType',
                    'size' => 'size',
                    'extension' => 'extension',
                    'hash' => 'hash',
                    'storage' => 'storage',
                ],
            ],
            'columnNames' => [
                [
                    'id' => 'id',
                    'key' => 'file_key',
                    'originalFilename' => 'original_filename',
                    'mimeType' => 'mime_type',
                    'size' => 'size',
                    'extension' => 'extension',
                    'hash' => 'hash',
                    'storage' => 'storage',
                ],
            ],
            'table' => [
                [
                    'name' => 'akeneo_file_storage_file_info',
                ],
            ],
            'idGenerator' => [
                $o[1],
            ],
        ],
    ],
    $o[0],
    []
); }];
