<?php

namespace ContainerRWxfJwK;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/*
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getPimCatalog_EventSubscriber_ProductModel_OnSave_ComputeDescendantCompletenessAndIndexProductAndAncestorsSubscriberService extends KernelProdContainer
{
    /*
     * Gets the private 'pim_catalog.event_subscriber.product_model.on_save.compute_descendant_completeness_and_index_product_and_ancestors_subscriber' shared service.
     *
     * @return \Akeneo\Pim\Enrichment\Bundle\EventSubscriber\ProductModel\OnSave\ComputeProductAndAncestorsSubscriber
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Enrichment/Bundle/EventSubscriber/ProductModel/OnSave/ComputeProductAndAncestorsSubscriber.php';

        $a = ($container->services['pim_catalog.completeness.product.compute_and_persist'] ?? $container->load('getPimCatalog_Completeness_Product_ComputeAndPersistService'));

        if (isset($container->privates['pim_catalog.event_subscriber.product_model.on_save.compute_descendant_completeness_and_index_product_and_ancestors_subscriber'])) {
            return $container->privates['pim_catalog.event_subscriber.product_model.on_save.compute_descendant_completeness_and_index_product_and_ancestors_subscriber'];
        }
        $b = ($container->services['pim_catalog.elasticsearch.indexer.product_model_descendants_and_ancestors'] ?? $container->load('getPimCatalog_Elasticsearch_Indexer_ProductModelDescendantsAndAncestorsService'));

        if (isset($container->privates['pim_catalog.event_subscriber.product_model.on_save.compute_descendant_completeness_and_index_product_and_ancestors_subscriber'])) {
            return $container->privates['pim_catalog.event_subscriber.product_model.on_save.compute_descendant_completeness_and_index_product_and_ancestors_subscriber'];
        }
        $c = ($container->services['akeneo.pim.enrichment.product.query.get_descendant_variant_product_uuids'] ?? $container->load('getAkeneo_Pim_Enrichment_Product_Query_GetDescendantVariantProductUuidsService'));

        if (isset($container->privates['pim_catalog.event_subscriber.product_model.on_save.compute_descendant_completeness_and_index_product_and_ancestors_subscriber'])) {
            return $container->privates['pim_catalog.event_subscriber.product_model.on_save.compute_descendant_completeness_and_index_product_and_ancestors_subscriber'];
        }

        return $container->privates['pim_catalog.event_subscriber.product_model.on_save.compute_descendant_completeness_and_index_product_and_ancestors_subscriber'] = new \Akeneo\Pim\Enrichment\Bundle\EventSubscriber\ProductModel\OnSave\ComputeProductAndAncestorsSubscriber($a, $b, $c);
    }
}
