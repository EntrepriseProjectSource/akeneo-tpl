<?php

namespace ContainerRWxfJwK;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/*
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getAkeneoBatchQueue_Launcher_QueueJobLauncherService extends KernelProdContainer
{
    /*
     * Gets the private 'akeneo_batch_queue.launcher.queue_job_launcher' shared service.
     *
     * @return \Akeneo\Tool\Bundle\BatchQueueBundle\Launcher\QueueJobLauncher
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Tool/Bundle/BatchBundle/Launcher/JobLauncherInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Tool/Bundle/BatchQueueBundle/Launcher/QueueJobLauncher.php';

        $a = ($container->privates['akeneo_batch.job_repository'] ?? $container->load('getAkeneoBatch_JobRepositoryService'));

        if (isset($container->privates['akeneo_batch_queue.launcher.queue_job_launcher'])) {
            return $container->privates['akeneo_batch_queue.launcher.queue_job_launcher'];
        }
        $b = ($container->services['akeneo_batch.job.job_registry'] ?? $container->load('getAkeneoBatch_Job_JobRegistryService'));

        if (isset($container->privates['akeneo_batch_queue.launcher.queue_job_launcher'])) {
            return $container->privates['akeneo_batch_queue.launcher.queue_job_launcher'];
        }
        $c = ($container->privates['akeneo_batch.job.job_parameters_validator'] ?? $container->load('getAkeneoBatch_Job_JobParametersValidatorService'));

        if (isset($container->privates['akeneo_batch_queue.launcher.queue_job_launcher'])) {
            return $container->privates['akeneo_batch_queue.launcher.queue_job_launcher'];
        }
        $d = ($container->privates['akeneo_batch_queue.queue.job_execution_queue'] ?? $container->load('getAkeneoBatchQueue_Queue_JobExecutionQueueService'));

        if (isset($container->privates['akeneo_batch_queue.launcher.queue_job_launcher'])) {
            return $container->privates['akeneo_batch_queue.launcher.queue_job_launcher'];
        }
        $e = ($container->services['event_dispatcher'] ?? $container->getEventDispatcherService());

        if (isset($container->privates['akeneo_batch_queue.launcher.queue_job_launcher'])) {
            return $container->privates['akeneo_batch_queue.launcher.queue_job_launcher'];
        }

        return $container->privates['akeneo_batch_queue.launcher.queue_job_launcher'] = new \Akeneo\Tool\Bundle\BatchQueueBundle\Launcher\QueueJobLauncher($a, ($container->privates['akeneo_batch.job_parameters_factory'] ?? $container->load('getAkeneoBatch_JobParametersFactoryService')), $b, $c, $d, ($container->privates['akeneo_batch_queue.factory.job_execution_message'] ?? $container->load('getAkeneoBatchQueue_Factory_JobExecutionMessageService')), $e, ($container->privates['akeneo_batch.logger.batch_log_handler'] ?? $container->load('getAkeneoBatch_Logger_BatchLogHandlerService')), 'prod');
    }
}
