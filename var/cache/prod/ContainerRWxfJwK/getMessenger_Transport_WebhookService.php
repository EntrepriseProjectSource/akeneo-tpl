<?php

namespace ContainerRWxfJwK;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/*
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getMessenger_Transport_WebhookService extends KernelProdContainer
{
    /*
     * Gets the private 'messenger.transport.webhook' shared service.
     *
     * @return \Symfony\Component\Messenger\Transport\TransportInterface
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/messenger/Transport/Receiver/ReceiverInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/messenger/Transport/Sender/SenderInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/messenger/Transport/TransportInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/messenger/Transport/Serialization/SerializerInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Tool/Bundle/MessengerBundle/Serialization/JsonSerializer.php';

        $a = ($container->privates['messenger.transport_factory'] ?? $container->load('getMessenger_TransportFactoryService'));

        if (isset($container->privates['messenger.transport.webhook'])) {
            return $container->privates['messenger.transport.webhook'];
        }

        return $container->privates['messenger.transport.webhook'] = $a->createTransport('doctrine://default', ['table_name' => 'messenger_messages', 'queue_name' => 'default', 'redeliver_timeout' => 3600, 'auto_setup' => false, 'transport_name' => 'webhook'], new \Akeneo\Tool\Bundle\MessengerBundle\Serialization\JsonSerializer(new RewindableGenerator(function () use ($container) {
            yield 0 => ($container->privates['Akeneo\\Platform\\Component\\EventQueue\\BulkEventNormalizer'] ?? $container->load('getBulkEventNormalizerService'));
            yield 1 => ($container->privates['Akeneo\\Platform\\Component\\EventQueue\\EventNormalizer'] ?? ($container->privates['Akeneo\\Platform\\Component\\EventQueue\\EventNormalizer'] = new \Akeneo\Platform\Component\EventQueue\EventNormalizer()));
        }, 2)));
    }
}
