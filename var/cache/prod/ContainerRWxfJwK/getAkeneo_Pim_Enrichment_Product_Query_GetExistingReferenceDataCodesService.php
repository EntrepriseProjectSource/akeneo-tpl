<?php

namespace ContainerRWxfJwK;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/*
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getAkeneo_Pim_Enrichment_Product_Query_GetExistingReferenceDataCodesService extends KernelProdContainer
{
    /*
     * Gets the private 'akeneo.pim.enrichment.product.query.get_existing_reference_data_codes' shared service.
     *
     * @return \Akeneo\Pim\Enrichment\Bundle\Storage\Sql\Product\GetExistingReferenceDataCodes
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Enrichment/Component/Product/Query/GetExistingReferenceDataCodes.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Enrichment/Bundle/Storage/Sql/Product/GetExistingReferenceDataCodes.php';

        $a = ($container->services['doctrine.orm.default_entity_manager'] ?? $container->getDoctrine_Orm_DefaultEntityManagerService());

        if (isset($container->privates['akeneo.pim.enrichment.product.query.get_existing_reference_data_codes'])) {
            return $container->privates['akeneo.pim.enrichment.product.query.get_existing_reference_data_codes'];
        }

        return $container->privates['akeneo.pim.enrichment.product.query.get_existing_reference_data_codes'] = new \Akeneo\Pim\Enrichment\Bundle\Storage\Sql\Product\GetExistingReferenceDataCodes($a, ($container->privates['pim_reference_data.repository_resolver'] ?? $container->load('getPimReferenceData_RepositoryResolverService')));
    }
}
