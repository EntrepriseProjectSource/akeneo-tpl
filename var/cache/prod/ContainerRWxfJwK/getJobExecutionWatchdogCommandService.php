<?php

namespace ContainerRWxfJwK;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/*
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getJobExecutionWatchdogCommandService extends KernelProdContainer
{
    /*
     * Gets the private 'Akeneo\Tool\Bundle\BatchQueueBundle\Command\JobExecutionWatchdogCommand' shared service.
     *
     * @return \Akeneo\Tool\Bundle\BatchQueueBundle\Command\JobExecutionWatchdogCommand
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/console/Command/Command.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Tool/Bundle/BatchQueueBundle/Command/JobExecutionWatchdogCommand.php';

        $container->privates['Akeneo\\Tool\\Bundle\\BatchQueueBundle\\Command\\JobExecutionWatchdogCommand'] = $instance = new \Akeneo\Tool\Bundle\BatchQueueBundle\Command\JobExecutionWatchdogCommand(($container->privates['akeneo_batch_queue.manager.job_execution_manager'] ?? $container->load('getAkeneoBatchQueue_Manager_JobExecutionManagerService')), ($container->privates['monolog.logger'] ?? $container->load('getMonolog_LoggerService')), \dirname(__DIR__, 4), ($container->privates['Akeneo\\Tool\\Bundle\\BatchBundle\\JobExecution\\CreateJobExecutionHandlerInterface'] ?? $container->load('getCreateJobExecutionHandlerInterfaceService')), ($container->privates['pim_framework.lock.factory'] ?? $container->load('getPimFramework_Lock_FactoryService')));

        $instance->setName('akeneo:batch:watchdog');
        $instance->setDescription('[Internal] Launched by the job queue consumer');

        return $instance;
    }
}
