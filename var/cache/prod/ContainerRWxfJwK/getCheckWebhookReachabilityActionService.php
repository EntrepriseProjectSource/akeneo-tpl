<?php

namespace ContainerRWxfJwK;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/*
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getCheckWebhookReachabilityActionService extends KernelProdContainer
{
    /*
     * Gets the public 'Akeneo\Connectivity\Connection\Infrastructure\Webhook\Controller\Internal\CheckWebhookReachabilityAction' shared service.
     *
     * @return \Akeneo\Connectivity\Connection\Infrastructure\Webhook\Controller\Internal\CheckWebhookReachabilityAction
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Connectivity/Connection/back/Infrastructure/Webhook/Controller/Internal/CheckWebhookReachabilityAction.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Connectivity/Connection/back/Application/Webhook/Command/CheckWebhookReachabilityHandler.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Connectivity/Connection/back/Application/Webhook/Service/UrlReachabilityCheckerInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Connectivity/Connection/back/Infrastructure/Webhook/Service/WebhookReachabilityChecker.php';

        return $container->services['Akeneo\\Connectivity\\Connection\\Infrastructure\\Webhook\\Controller\\Internal\\CheckWebhookReachabilityAction'] = new \Akeneo\Connectivity\Connection\Infrastructure\Webhook\Controller\Internal\CheckWebhookReachabilityAction(new \Akeneo\Connectivity\Connection\Application\Webhook\Command\CheckWebhookReachabilityHandler(new \Akeneo\Connectivity\Connection\Infrastructure\Webhook\Service\WebhookReachabilityChecker(($container->privates['akeneo_connectivity.connection.webhook.guzzle_client'] ?? $container->load('getAkeneoConnectivity_Connection_Webhook_GuzzleClientService')), ($container->services['.container.private.validator'] ?? $container->load('get_Container_Private_ValidatorService')))));
    }
}
