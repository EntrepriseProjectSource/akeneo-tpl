<?php

namespace ContainerRWxfJwK;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/*
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getDeleteProductMappingSchemaHandlerService extends KernelProdContainer
{
    /*
     * Gets the private 'Akeneo\Catalogs\Application\Handler\DeleteProductMappingSchemaHandler' shared autowired service.
     *
     * @return \Akeneo\Catalogs\Application\Handler\DeleteProductMappingSchemaHandler
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/components/catalogs/back/src/Application/Handler/DeleteProductMappingSchemaHandler.php';

        $a = ($container->privates['Akeneo\\Catalogs\\Infrastructure\\Persistence\\Catalog\\GetCatalogQuery'] ?? $container->load('getGetCatalogQueryService'));

        if (isset($container->privates['Akeneo\\Catalogs\\Application\\Handler\\DeleteProductMappingSchemaHandler'])) {
            return $container->privates['Akeneo\\Catalogs\\Application\\Handler\\DeleteProductMappingSchemaHandler'];
        }
        $b = ($container->privates['Akeneo\\Catalogs\\Infrastructure\\Persistence\\Catalog\\UpsertCatalogQuery'] ?? $container->load('getUpsertCatalogQueryService'));

        if (isset($container->privates['Akeneo\\Catalogs\\Application\\Handler\\DeleteProductMappingSchemaHandler'])) {
            return $container->privates['Akeneo\\Catalogs\\Application\\Handler\\DeleteProductMappingSchemaHandler'];
        }

        return $container->privates['Akeneo\\Catalogs\\Application\\Handler\\DeleteProductMappingSchemaHandler'] = new \Akeneo\Catalogs\Application\Handler\DeleteProductMappingSchemaHandler($a, $b, ($container->privates['Akeneo\\Catalogs\\Infrastructure\\Storage\\CatalogsMappingStorage'] ?? $container->load('getCatalogsMappingStorageService')));
    }
}
