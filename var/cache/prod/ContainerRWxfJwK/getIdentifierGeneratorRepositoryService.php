<?php

namespace ContainerRWxfJwK;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/*
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getIdentifierGeneratorRepositoryService extends KernelProdContainer
{
    /*
     * Gets the private 'Akeneo\Pim\Automation\IdentifierGenerator\Domain\Repository\IdentifierGeneratorRepository' shared service.
     *
     * @return \Akeneo\Pim\Automation\IdentifierGenerator\Infrastructure\Repository\SqlIdentifierGeneratorRepository
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/components/identifier-generator/back/src/Domain/Repository/IdentifierGeneratorRepository.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/components/identifier-generator/back/src/Infrastructure/Repository/SqlIdentifierGeneratorRepository.php';

        $a = ($container->services['doctrine.dbal.default_connection'] ?? $container->getDoctrine_Dbal_DefaultConnectionService());

        if (isset($container->privates['Akeneo\\Pim\\Automation\\IdentifierGenerator\\Domain\\Repository\\IdentifierGeneratorRepository'])) {
            return $container->privates['Akeneo\\Pim\\Automation\\IdentifierGenerator\\Domain\\Repository\\IdentifierGeneratorRepository'];
        }

        return $container->privates['Akeneo\\Pim\\Automation\\IdentifierGenerator\\Domain\\Repository\\IdentifierGeneratorRepository'] = new \Akeneo\Pim\Automation\IdentifierGenerator\Infrastructure\Repository\SqlIdentifierGeneratorRepository($a);
    }
}
