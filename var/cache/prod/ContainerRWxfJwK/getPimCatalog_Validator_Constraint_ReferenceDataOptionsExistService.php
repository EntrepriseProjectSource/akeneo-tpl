<?php

namespace ContainerRWxfJwK;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/*
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getPimCatalog_Validator_Constraint_ReferenceDataOptionsExistService extends KernelProdContainer
{
    /*
     * Gets the private 'pim_catalog.validator.constraint.reference_data_options_exist' shared service.
     *
     * @return \Akeneo\Pim\Enrichment\Component\Product\Validator\Constraints\ReferenceDataOptionsExistValidator
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/validator/ConstraintValidatorInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/validator/ConstraintValidator.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Enrichment/Component/Product/Validator/Constraints/ReferenceDataOptionsExistValidator.php';

        $a = ($container->privates['akeneo.pim.enrichment.product.query.get_existing_reference_data_codes'] ?? $container->load('getAkeneo_Pim_Enrichment_Product_Query_GetExistingReferenceDataCodesService'));

        if (isset($container->privates['pim_catalog.validator.constraint.reference_data_options_exist'])) {
            return $container->privates['pim_catalog.validator.constraint.reference_data_options_exist'];
        }

        return $container->privates['pim_catalog.validator.constraint.reference_data_options_exist'] = new \Akeneo\Pim\Enrichment\Component\Product\Validator\Constraints\ReferenceDataOptionsExistValidator($a, ($container->privates['pim_catalog.repository.cached_attribute'] ?? $container->load('getPimCatalog_Repository_CachedAttributeService')));
    }
}
