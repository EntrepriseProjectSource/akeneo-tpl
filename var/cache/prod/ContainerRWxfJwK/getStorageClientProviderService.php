<?php

namespace ContainerRWxfJwK;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/*
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getStorageClientProviderService extends KernelProdContainer
{
    /*
     * Gets the private 'Akeneo\Platform\Bundle\ImportExportBundle\Infrastructure\StorageClient\StorageClientProvider' shared service.
     *
     * @return \Akeneo\Platform\Bundle\ImportExportBundle\Infrastructure\StorageClient\StorageClientProvider
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Platform/Bundle/ImportExportBundle/Infrastructure/StorageClient/StorageClientProvider.php';

        return $container->privates['Akeneo\\Platform\\Bundle\\ImportExportBundle\\Infrastructure\\StorageClient\\StorageClientProvider'] = new \Akeneo\Platform\Bundle\ImportExportBundle\Infrastructure\StorageClient\StorageClientProvider(($container->privates['akeneo_file_storage.file_storage.filesystem_provider'] ?? $container->load('getAkeneoFileStorage_FileStorage_FilesystemProviderService')), new RewindableGenerator(function () use ($container) {
            yield 0 => ($container->privates['Akeneo\\Platform\\Bundle\\ImportExportBundle\\Infrastructure\\StorageClient\\Local\\LocalStorageClientProvider'] ?? ($container->privates['Akeneo\\Platform\\Bundle\\ImportExportBundle\\Infrastructure\\StorageClient\\Local\\LocalStorageClientProvider'] = new \Akeneo\Platform\Bundle\ImportExportBundle\Infrastructure\StorageClient\Local\LocalStorageClientProvider()));
            yield 1 => ($container->privates['Akeneo\\Platform\\Bundle\\ImportExportBundle\\Infrastructure\\StorageClient\\ManualUpload\\ManualUploadStorageClientProvider'] ?? $container->load('getManualUploadStorageClientProviderService'));
        }, 2));
    }
}
