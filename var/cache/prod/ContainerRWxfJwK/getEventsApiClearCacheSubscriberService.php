<?php

namespace ContainerRWxfJwK;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/*
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getEventsApiClearCacheSubscriberService extends KernelProdContainer
{
    /*
     * Gets the private 'Akeneo\Connectivity\Connection\Infrastructure\Webhook\EventSubscribers\EventsApiClearCacheSubscriber' shared service.
     *
     * @return \Akeneo\Connectivity\Connection\Infrastructure\Webhook\EventSubscribers\EventsApiClearCacheSubscriber
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Connectivity/Connection/back/Infrastructure/Webhook/EventSubscribers/EventsApiClearCacheSubscriber.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Connectivity/Connection/back/Application/Webhook/Service/CacheClearerInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Connectivity/Connection/back/Infrastructure/Webhook/Service/CacheClearer.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Tool/Component/StorageUtils/Cache/CachedQueriesClearerInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Tool/Component/StorageUtils/Cache/CachedQueriesClearer.php';

        return $container->privates['Akeneo\\Connectivity\\Connection\\Infrastructure\\Webhook\\EventSubscribers\\EventsApiClearCacheSubscriber'] = new \Akeneo\Connectivity\Connection\Infrastructure\Webhook\EventSubscribers\EventsApiClearCacheSubscriber(new \Akeneo\Connectivity\Connection\Infrastructure\Webhook\Service\CacheClearer(($container->privates['pim_connector.doctrine.cache_clearer'] ?? $container->load('getPimConnector_Doctrine_CacheClearerService')), new \Akeneo\Tool\Component\StorageUtils\Cache\CachedQueriesClearer(new RewindableGenerator(function () use ($container) {
            yield 0 => ($container->privates['pim_channel.query.cache.channel_exists_with_locale'] ?? $container->load('getPimChannel_Query_Cache_ChannelExistsWithLocaleService'));
            yield 1 => ($container->privates['pimee_security.query.get_all_viewable_locales_for_user'] ?? $container->load('getPimeeSecurity_Query_GetAllViewableLocalesForUserService'));
            yield 2 => ($container->privates['Akeneo\\Channel\\Infrastructure\\Query\\Cache\\CachedFindChannels'] ?? $container->load('getCachedFindChannelsService'));
            yield 3 => ($container->privates['Akeneo\\Channel\\Infrastructure\\Query\\Cache\\CachedFindLocales'] ?? $container->load('getCachedFindLocalesService'));
            yield 4 => ($container->privates['Akeneo\\Channel\\Infrastructure\\Query\\Cache\\CachedFindAllViewableLocalesForUser'] ?? $container->load('getCachedFindAllViewableLocalesForUserService'));
            yield 5 => ($container->privates['Akeneo\\Channel\\Infrastructure\\Query\\Cache\\CachedFindAllEditableLocalesForUser'] ?? $container->load('getCachedFindAllEditableLocalesForUserService'));
            yield 6 => ($container->privates['pim_catalog.query.find_activated_currencies'] ?? $container->load('getPimCatalog_Query_FindActivatedCurrenciesService'));
            yield 7 => ($container->privates['akeneo.pim.enrichment.product.query.find_quantified_association_codes'] ?? $container->load('getAkeneo_Pim_Enrichment_Product_Query_FindQuantifiedAssociationCodesService'));
            yield 8 => ($container->privates['Akeneo\\Pim\\Enrichment\\Product\\API\\Query\\GetProductUuids'] ?? $container->load('getGetProductUuidsService'));
            yield 9 => ($container->privates['akeneo.pim.structure.query.get_attributes'] ?? $container->load('getAkeneo_Pim_Structure_Query_GetAttributesService'));
        }, 10))));
    }
}
