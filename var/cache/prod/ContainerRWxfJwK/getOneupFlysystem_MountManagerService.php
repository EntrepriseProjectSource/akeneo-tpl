<?php

namespace ContainerRWxfJwK;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/*
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getOneupFlysystem_MountManagerService extends KernelProdContainer
{
    /*
     * Gets the public 'oneup_flysystem.mount_manager' shared service.
     *
     * @return \League\Flysystem\MountManager
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/vendor/league/flysystem/src/FilesystemReader.php';
        include_once \dirname(__DIR__, 4).'/vendor/league/flysystem/src/FilesystemWriter.php';
        include_once \dirname(__DIR__, 4).'/vendor/league/flysystem/src/FilesystemOperator.php';
        include_once \dirname(__DIR__, 4).'/vendor/league/flysystem/src/MountManager.php';

        return $container->services['oneup_flysystem.mount_manager'] = new \League\Flysystem\MountManager(['catalogStorage' => ($container->services['oneup_flysystem.catalog_storage_filesystem'] ?? $container->load('getOneupFlysystem_CatalogStorageFilesystemService')), 'archivist' => ($container->services['oneup_flysystem.archivist_filesystem'] ?? $container->load('getOneupFlysystem_ArchivistFilesystemService')), 'jobsStorage' => ($container->services['oneup_flysystem.jobs_storage_filesystem'] ?? $container->load('getOneupFlysystem_JobsStorageFilesystemService')), 'categoryStorage' => ($container->services['oneup_flysystem.category_storage_filesystem'] ?? $container->load('getOneupFlysystem_CategoryStorageFilesystemService')), 'localFilesystem' => ($container->services['oneup_flysystem.local_storage_filesystem'] ?? $container->load('getOneupFlysystem_LocalStorageFilesystemService')), 'catalogsMapping' => ($container->services['oneup_flysystem.catalogs_mapping_filesystem'] ?? $container->load('getOneupFlysystem_CatalogsMappingFilesystemService'))]);
    }
}
