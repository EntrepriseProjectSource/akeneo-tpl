<?php

namespace ContainerRWxfJwK;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/*
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getPimCatalog_Localization_Presenter_RegistryService extends KernelProdContainer
{
    /*
     * Gets the private 'pim_catalog.localization.presenter.registry' shared service.
     *
     * @return \Akeneo\Pim\Enrichment\Component\Product\Localization\Presenter\PresenterRegistry
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Enrichment/Component/Product/Localization/Presenter/PresenterRegistryInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Enrichment/Component/Product/Localization/Presenter/PresenterRegistry.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Tool/Component/Localization/Presenter/PresenterInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Tool/Component/Localization/Presenter/NumberPresenter.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Enrichment/Component/Product/Localization/Presenter/PricesPresenter.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Tool/Component/Localization/Factory/NumberFactory.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Enrichment/Component/Product/Localization/Presenter/MetricPresenter.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Tool/Component/Localization/Presenter/BooleanPresenter.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Tool/Component/Localization/Presenter/DatePresenter.php';

        $a = ($container->privates['pim_catalog.repository.cached_attribute'] ?? $container->load('getPimCatalog_Repository_CachedAttributeService'));

        $container->privates['pim_catalog.localization.presenter.registry'] = $instance = new \Akeneo\Pim\Enrichment\Component\Product\Localization\Presenter\PresenterRegistry($a);

        $b = ($container->privates['pim_catalog.localization.factory.number'] ?? ($container->privates['pim_catalog.localization.factory.number'] = new \Akeneo\Tool\Component\Localization\Factory\NumberFactory([])));

        $instance->register(new \Akeneo\Pim\Enrichment\Component\Product\Localization\Presenter\PricesPresenter(new \Akeneo\Tool\Component\Localization\Factory\NumberFactory($container->parameters['pim_catalog.localization.factory.currency.formats']), [0 => 'pim_catalog_price_collection']), 'product_value');
        $instance->register(new \Akeneo\Pim\Enrichment\Component\Product\Localization\Presenter\MetricPresenter($b, [0 => 'pim_catalog_metric'], ($container->privates['akeneo_measure.persistence.measurement_family_repository'] ?? $container->load('getAkeneoMeasure_Persistence_MeasurementFamilyRepositoryService')), $a, ($container->privates['monolog.logger'] ?? $container->load('getMonolog_LoggerService'))), 'product_value');
        $instance->register(($container->privates['pim_catalog.localization.presenter.number'] ?? $container->load('getPimCatalog_Localization_Presenter_NumberService')), 'product_value');
        $instance->register(($container->privates['pim_catalog.localization.presenter.date'] ?? $container->load('getPimCatalog_Localization_Presenter_DateService')), 'product_value');
        $instance->register(new \Akeneo\Tool\Component\Localization\Presenter\BooleanPresenter([0 => 'pim_catalog_boolean']), 'product_value');
        $instance->register(($container->privates['pim_catalog.localization.presenter.datetime'] ?? $container->load('getPimCatalog_Localization_Presenter_DatetimeService')), 'product_field');
        $instance->register(new \Akeneo\Tool\Component\Localization\Presenter\BooleanPresenter([0 => 'enabled']), 'product_field');
        $instance->register(new \Akeneo\Tool\Component\Localization\Presenter\NumberPresenter($b, [0 => 'number_min', 1 => 'number_max']), 'attribute_option');
        $instance->register(new \Akeneo\Tool\Component\Localization\Presenter\DatePresenter(($container->privates['pim_catalog.localization.factory.date'] ?? $container->load('getPimCatalog_Localization_Factory_DateService')), [0 => 'date_min', 1 => 'date_max']), 'attribute_option');

        return $instance;
    }
}
