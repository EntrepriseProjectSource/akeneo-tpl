<?php

namespace ContainerRWxfJwK;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/*
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getIsConnectionsNumberLimitReachedValidatorService extends KernelProdContainer
{
    /*
     * Gets the private 'Akeneo\Connectivity\Connection\Application\Settings\Validation\Connection\IsConnectionsNumberLimitReachedValidator' shared service.
     *
     * @return \Akeneo\Connectivity\Connection\Application\Settings\Validation\Connection\IsConnectionsNumberLimitReachedValidator
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/validator/ConstraintValidatorInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/validator/ConstraintValidator.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Connectivity/Connection/back/Application/Settings/Validation/Connection/IsConnectionsNumberLimitReachedValidator.php';

        $a = ($container->privates['Akeneo\\Connectivity\\Connection\\Infrastructure\\Settings\\Persistence\\IsConnectionsNumberLimitReachedQuery'] ?? $container->load('getIsConnectionsNumberLimitReachedQueryService'));

        if (isset($container->privates['Akeneo\\Connectivity\\Connection\\Application\\Settings\\Validation\\Connection\\IsConnectionsNumberLimitReachedValidator'])) {
            return $container->privates['Akeneo\\Connectivity\\Connection\\Application\\Settings\\Validation\\Connection\\IsConnectionsNumberLimitReachedValidator'];
        }

        return $container->privates['Akeneo\\Connectivity\\Connection\\Application\\Settings\\Validation\\Connection\\IsConnectionsNumberLimitReachedValidator'] = new \Akeneo\Connectivity\Connection\Application\Settings\Validation\Connection\IsConnectionsNumberLimitReachedValidator($a);
    }
}
