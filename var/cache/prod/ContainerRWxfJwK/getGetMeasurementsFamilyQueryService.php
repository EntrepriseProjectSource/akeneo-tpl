<?php

namespace ContainerRWxfJwK;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/*
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getGetMeasurementsFamilyQueryService extends KernelProdContainer
{
    /*
     * Gets the private 'Akeneo\Catalogs\Infrastructure\Persistence\Measurement\GetMeasurementsFamilyQuery' shared autowired service.
     *
     * @return \Akeneo\Catalogs\Infrastructure\Persistence\Measurement\GetMeasurementsFamilyQuery
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/components/catalogs/back/src/Application/Persistence/Measurement/GetMeasurementsFamilyQueryInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/components/catalogs/back/src/Infrastructure/Persistence/Measurement/GetMeasurementsFamilyQuery.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Tool/Bundle/MeasureBundle/ServiceApi/FindMeasurementFamilies.php';

        $a = ($container->privates['akeneo_measure.persistence.measurement_family_repository'] ?? $container->load('getAkeneoMeasure_Persistence_MeasurementFamilyRepositoryService'));

        if (isset($container->privates['Akeneo\\Catalogs\\Infrastructure\\Persistence\\Measurement\\GetMeasurementsFamilyQuery'])) {
            return $container->privates['Akeneo\\Catalogs\\Infrastructure\\Persistence\\Measurement\\GetMeasurementsFamilyQuery'];
        }

        return $container->privates['Akeneo\\Catalogs\\Infrastructure\\Persistence\\Measurement\\GetMeasurementsFamilyQuery'] = new \Akeneo\Catalogs\Infrastructure\Persistence\Measurement\GetMeasurementsFamilyQuery(new \Akeneo\Tool\Bundle\MeasureBundle\ServiceApi\FindMeasurementFamilies($a));
    }
}
