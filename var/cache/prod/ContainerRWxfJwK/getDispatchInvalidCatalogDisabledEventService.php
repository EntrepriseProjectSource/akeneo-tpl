<?php

namespace ContainerRWxfJwK;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/*
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getDispatchInvalidCatalogDisabledEventService extends KernelProdContainer
{
    /*
     * Gets the private 'Akeneo\Catalogs\Infrastructure\Service\DispatchInvalidCatalogDisabledEvent' shared autowired service.
     *
     * @return \Akeneo\Catalogs\Infrastructure\Service\DispatchInvalidCatalogDisabledEvent
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/components/catalogs/back/src/Application/Service/DispatchInvalidCatalogDisabledEventInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/components/catalogs/back/src/Infrastructure/Service/DispatchInvalidCatalogDisabledEvent.php';

        $a = ($container->services['event_dispatcher'] ?? $container->getEventDispatcherService());

        if (isset($container->privates['Akeneo\\Catalogs\\Infrastructure\\Service\\DispatchInvalidCatalogDisabledEvent'])) {
            return $container->privates['Akeneo\\Catalogs\\Infrastructure\\Service\\DispatchInvalidCatalogDisabledEvent'];
        }

        return $container->privates['Akeneo\\Catalogs\\Infrastructure\\Service\\DispatchInvalidCatalogDisabledEvent'] = new \Akeneo\Catalogs\Infrastructure\Service\DispatchInvalidCatalogDisabledEvent($a);
    }
}
