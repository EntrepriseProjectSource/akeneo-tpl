<?php

namespace ContainerRWxfJwK;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/*
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getDeleteTestAppAction2Service extends KernelProdContainer
{
    /*
     * Gets the public 'Akeneo\Connectivity\Connection\Infrastructure\Marketplace\TestApps\Controller\Internal\DeleteTestAppAction' shared service.
     *
     * @return \Akeneo\Connectivity\Connection\Infrastructure\Marketplace\TestApps\Controller\Internal\DeleteTestAppAction
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Connectivity/Connection/back/Infrastructure/Marketplace/TestApps/Controller/Internal/DeleteTestAppAction.php';

        return $container->services['Akeneo\\Connectivity\\Connection\\Infrastructure\\Marketplace\\TestApps\\Controller\\Internal\\DeleteTestAppAction'] = new \Akeneo\Connectivity\Connection\Infrastructure\Marketplace\TestApps\Controller\Internal\DeleteTestAppAction(($container->services['akeneo_connectivity.connection.app_developer_mode.feature'] ?? ($container->services['akeneo_connectivity.connection.app_developer_mode.feature'] = new \Akeneo\Platform\Bundle\FeatureFlagBundle\Configuration\EnvVarFeatureFlag($container->getEnv('bool:FLAG_APP_DEVELOPER_MODE_ENABLED')))), ($container->privates['oro_security.security_facade'] ?? $container->getOroSecurity_SecurityFacadeService()), ($container->privates['Akeneo\\Connectivity\\Connection\\Application\\Marketplace\\TestApps\\Command\\DeleteTestAppHandler'] ?? $container->load('getDeleteTestAppHandlerService')), ($container->privates['Akeneo\\Connectivity\\Connection\\Infrastructure\\Marketplace\\TestApps\\Persistence\\GetTestAppQuery'] ?? $container->load('getGetTestAppQueryService')), ($container->privates['Akeneo\\Connectivity\\Connection\\Application\\Apps\\Command\\DeleteAppHandler'] ?? $container->load('getDeleteAppHandlerService')));
    }
}
