<?php

namespace ContainerRWxfJwK;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/*
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getImagePreviewControllerService extends KernelProdContainer
{
    /*
     * Gets the public 'Akeneo\Category\Infrastructure\Controller\InternalApi\ImagePreviewController' shared service.
     *
     * @return \Akeneo\Category\Infrastructure\Controller\InternalApi\ImagePreviewController
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Category/back/Infrastructure/Controller/InternalApi/ImagePreviewController.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Category/back/Infrastructure/FileSystem/PreviewGenerator/PreviewGeneratorInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Category/back/Infrastructure/FileSystem/PreviewGenerator/PreviewGeneratorRegistry.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Category/back/Infrastructure/FileSystem/PreviewGenerator/AbstractPreviewGenerator.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Category/back/Infrastructure/FileSystem/PreviewGenerator/BinaryImageGenerator.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Category/back/Infrastructure/FileSystem/PreviewGenerator/DefaultImageProviderInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Category/back/Infrastructure/FileSystem/PreviewGenerator/DefaultImageProvider.php';

        $a = new \Akeneo\Category\Infrastructure\FileSystem\PreviewGenerator\PreviewGeneratorRegistry();

        $b = ($container->services['liip_imagine.cache.manager'] ?? $container->load('getLiipImagine_Cache_ManagerService'));
        $c = ($container->services['liip_imagine.filter.manager'] ?? $container->load('getLiipImagine_Filter_ManagerService'));

        $a->register(new \Akeneo\Category\Infrastructure\FileSystem\PreviewGenerator\BinaryImageGenerator(($container->services['liip_imagine.data.manager'] ?? $container->load('getLiipImagine_Data_ManagerService')), $b, $c, new \Akeneo\Category\Infrastructure\FileSystem\PreviewGenerator\DefaultImageProvider($c, $b, $container->parameters['pim_category.provider.default_image.images']), ($container->privates['monolog.logger'] ?? $container->load('getMonolog_LoggerService')), $container->parameters['supported_image_mime_types']));

        return $container->services['Akeneo\\Category\\Infrastructure\\Controller\\InternalApi\\ImagePreviewController'] = new \Akeneo\Category\Infrastructure\Controller\InternalApi\ImagePreviewController(($container->privates['Akeneo\\Category\\Application\\Query\\GetAttribute'] ?? $container->load('getGetAttributeService')), $a, ($container->privates['Akeneo\\Category\\Infrastructure\\FileSystem\\Loader\\ImageLoader'] ?? $container->load('getImageLoaderService')));
    }
}
