<?php

namespace ContainerRWxfJwK;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/*
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getRefreshCommandService extends KernelProdContainer
{
    /*
     * Gets the private 'Akeneo\Tool\Bundle\VersioningBundle\Command\RefreshCommand' shared service.
     *
     * @return \Akeneo\Tool\Bundle\VersioningBundle\Command\RefreshCommand
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/console/Command/Command.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Tool/Bundle/VersioningBundle/Command/RefreshCommand.php';

        $container->privates['Akeneo\\Tool\\Bundle\\VersioningBundle\\Command\\RefreshCommand'] = $instance = new \Akeneo\Tool\Bundle\VersioningBundle\Command\RefreshCommand(($container->privates['Akeneo\\Tool\\Bundle\\BatchBundle\\JobExecution\\ExecuteJobExecutionHandlerInterface'] ?? $container->load('getExecuteJobExecutionHandlerInterfaceService')), ($container->privates['Akeneo\\Tool\\Bundle\\BatchBundle\\JobExecution\\CreateJobExecutionHandlerInterface'] ?? $container->load('getCreateJobExecutionHandlerInterfaceService')));

        $instance->setName('pim:versioning:refresh');
        $instance->setDescription('Version any updated entities');

        return $instance;
    }
}
