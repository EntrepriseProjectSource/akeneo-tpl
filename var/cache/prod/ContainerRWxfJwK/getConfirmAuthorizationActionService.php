<?php

namespace ContainerRWxfJwK;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/*
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getConfirmAuthorizationActionService extends KernelProdContainer
{
    /*
     * Gets the public 'Akeneo\Connectivity\Connection\Infrastructure\Apps\Controller\Internal\ConfirmAuthorizationAction' shared service.
     *
     * @return \Akeneo\Connectivity\Connection\Infrastructure\Apps\Controller\Internal\ConfirmAuthorizationAction
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Connectivity/Connection/back/Infrastructure/Apps/Controller/Internal/ConfirmAuthorizationAction.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Connectivity/Connection/back/Application/Apps/Command/CreateConnectedAppWithAuthorizationHandler.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/serializer/Normalizer/NormalizerInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Connectivity/Connection/back/Infrastructure/Apps/Normalizer/ViolationListNormalizer.php';

        $a = ($container->privates['Akeneo\\Connectivity\\Connection\\Infrastructure\\Apps\\Session\\AppAuthorizationSession'] ?? $container->load('getAppAuthorizationSessionService'));
        $b = ($container->privates['Akeneo\\Connectivity\\Connection\\Infrastructure\\Marketplace\\Persistence\\GetAppQuery'] ?? $container->load('getGetAppQueryService'));

        return $container->services['Akeneo\\Connectivity\\Connection\\Infrastructure\\Apps\\Controller\\Internal\\ConfirmAuthorizationAction'] = new \Akeneo\Connectivity\Connection\Infrastructure\Apps\Controller\Internal\ConfirmAuthorizationAction(new \Akeneo\Connectivity\Connection\Application\Apps\Command\CreateConnectedAppWithAuthorizationHandler(($container->services['.container.private.validator'] ?? $container->load('get_Container_Private_ValidatorService')), $a, $b, ($container->privates['Akeneo\\Connectivity\\Connection\\Infrastructure\\Apps\\User\\CreateUser'] ?? $container->load('getCreateUserService')), ($container->privates['Akeneo\\Connectivity\\Connection\\Infrastructure\\Apps\\User\\CreateUserGroup'] ?? $container->load('getCreateUserGroupService')), ($container->privates['Akeneo\\Connectivity\\Connection\\Application\\Apps\\Service\\CreateConnection'] ?? $container->load('getCreateConnectionService')), ($container->services['Akeneo\\Connectivity\\Connection\\Infrastructure\\Apps\\AppRoleWithScopesFactory'] ?? $container->load('getAppRoleWithScopesFactoryService')), ($container->privates['Akeneo\\Connectivity\\Connection\\Infrastructure\\Apps\\OAuth\\ClientProvider'] ?? $container->load('getClientProviderService')), ($container->privates['Akeneo\\Connectivity\\Connection\\Application\\Apps\\Service\\CreateConnectedApp'] ?? $container->load('getCreateConnectedAppService')), ($container->services['event_dispatcher'] ?? $container->getEventDispatcherService())), ($container->services['akeneo_connectivity.connection.marketplace_activate.feature'] ?? ($container->services['akeneo_connectivity.connection.marketplace_activate.feature'] = new \Akeneo\Platform\Bundle\FeatureFlagBundle\Configuration\EnvVarFeatureFlag($container->getEnv('bool:FLAG_MARKETPLACE_ACTIVATE_ENABLED')))), ($container->privates['Akeneo\\Connectivity\\Connection\\Infrastructure\\Apps\\Persistence\\GetAppConfirmationQuery'] ?? $container->load('getGetAppConfirmationQueryService')), ($container->privates['Akeneo\\Connectivity\\Connection\\Infrastructure\\Apps\\Normalizer\\ViolationListNormalizer'] ?? ($container->privates['Akeneo\\Connectivity\\Connection\\Infrastructure\\Apps\\Normalizer\\ViolationListNormalizer'] = new \Akeneo\Connectivity\Connection\Infrastructure\Apps\Normalizer\ViolationListNormalizer())), ($container->privates['oro_security.security_facade'] ?? $container->getOroSecurity_SecurityFacadeService()), ($container->privates['monolog.logger'] ?? $container->load('getMonolog_LoggerService')), ($container->privates['Akeneo\\Connectivity\\Connection\\Infrastructure\\Apps\\OAuth\\RedirectUriWithAuthorizationCodeGenerator'] ?? $container->load('getRedirectUriWithAuthorizationCodeGeneratorService')), $a, ($container->privates['Akeneo\\Connectivity\\Connection\\Infrastructure\\Apps\\Security\\ConnectedPimUserProvider'] ?? $container->load('getConnectedPimUserProviderService')), ($container->privates['Akeneo\\Connectivity\\Connection\\Application\\Apps\\Command\\ConsentAppAuthenticationHandler'] ?? $container->load('getConsentAppAuthenticationHandlerService')), $b, ($container->privates['Akeneo\\Connectivity\\Connection\\Infrastructure\\Apps\\Persistence\\FindOneConnectedAppByIdQuery'] ?? $container->load('getFindOneConnectedAppByIdQueryService')), ($container->privates['Akeneo\\Connectivity\\Connection\\Application\\Apps\\Command\\UpdateConnectedAppScopesWithAuthorizationHandler'] ?? $container->load('getUpdateConnectedAppScopesWithAuthorizationHandlerService')));
    }
}
