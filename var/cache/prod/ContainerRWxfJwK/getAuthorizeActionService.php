<?php

namespace ContainerRWxfJwK;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/*
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getAuthorizeActionService extends KernelProdContainer
{
    /*
     * Gets the public 'Akeneo\Connectivity\Connection\Infrastructure\Apps\Controller\Public\AuthorizeAction' shared service.
     *
     * @return \Akeneo\Connectivity\Connection\Infrastructure\Apps\Controller\Public\AuthorizeAction
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Connectivity/Connection/back/Infrastructure/Apps/Controller/Public/AuthorizeAction.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Connectivity/Connection/back/Application/Apps/Command/RequestAppAuthorizationHandler.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Connectivity/Connection/back/Application/Apps/Command/RequestAppAuthenticationHandler.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Connectivity/Connection/back/Domain/ClockInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Connectivity/Connection/back/Infrastructure/Service/Clock/SystemClock.php';

        $a = ($container->services['.container.private.validator'] ?? $container->load('get_Container_Private_ValidatorService'));
        $b = ($container->privates['Akeneo\\Connectivity\\Connection\\Infrastructure\\Apps\\Session\\AppAuthorizationSession'] ?? $container->load('getAppAuthorizationSessionService'));
        $c = ($container->privates['Akeneo\\Connectivity\\Connection\\Infrastructure\\Marketplace\\Persistence\\GetAppQuery'] ?? $container->load('getGetAppQueryService'));

        return $container->services['Akeneo\\Connectivity\\Connection\\Infrastructure\\Apps\\Controller\\Public\\AuthorizeAction'] = new \Akeneo\Connectivity\Connection\Infrastructure\Apps\Controller\Public\AuthorizeAction(new \Akeneo\Connectivity\Connection\Application\Apps\Command\RequestAppAuthorizationHandler($a, $b, ($container->privates['Akeneo\\Connectivity\\Connection\\Infrastructure\\Apps\\Security\\ScopeMapperRegistry'] ?? $container->load('getScopeMapperRegistryService')), $c), ($container->services['router'] ?? $container->getRouterService()), ($container->services['akeneo_connectivity.connection.marketplace_activate.feature'] ?? ($container->services['akeneo_connectivity.connection.marketplace_activate.feature'] = new \Akeneo\Platform\Bundle\FeatureFlagBundle\Configuration\EnvVarFeatureFlag($container->getEnv('bool:FLAG_MARKETPLACE_ACTIVATE_ENABLED')))), $b, ($container->privates['Akeneo\\Connectivity\\Connection\\Infrastructure\\Apps\\Persistence\\GetAppConfirmationQuery'] ?? $container->load('getGetAppConfirmationQueryService')), ($container->privates['Akeneo\\Connectivity\\Connection\\Infrastructure\\Apps\\OAuth\\RedirectUriWithAuthorizationCodeGenerator'] ?? $container->load('getRedirectUriWithAuthorizationCodeGeneratorService')), ($container->privates['Akeneo\\Connectivity\\Connection\\Infrastructure\\Apps\\Security\\ConnectedPimUserProvider'] ?? $container->load('getConnectedPimUserProviderService')), new \Akeneo\Connectivity\Connection\Application\Apps\Command\RequestAppAuthenticationHandler(($container->privates['Akeneo\\Connectivity\\Connection\\Infrastructure\\Apps\\Persistence\\GetUserConsentedAuthenticationScopesQuery'] ?? $container->load('getGetUserConsentedAuthenticationScopesQueryService')), ($container->privates['Akeneo\\Connectivity\\Connection\\Infrastructure\\Apps\\Persistence\\CreateUserConsentQuery'] ?? $container->load('getCreateUserConsentQueryService')), ($container->privates['Akeneo\\Connectivity\\Connection\\Infrastructure\\Service\\Clock\\SystemClock'] ?? ($container->privates['Akeneo\\Connectivity\\Connection\\Infrastructure\\Service\\Clock\\SystemClock'] = new \Akeneo\Connectivity\Connection\Infrastructure\Service\Clock\SystemClock())), $a), ($container->privates['oro_security.security_facade'] ?? $container->getOroSecurity_SecurityFacadeService()), $c, ($container->privates['Akeneo\\Connectivity\\Connection\\Infrastructure\\Apps\\Persistence\\GetConnectedAppScopesQuery'] ?? $container->load('getGetConnectedAppScopesQueryService')), ($container->privates['Akeneo\\Connectivity\\Connection\\Infrastructure\\Apps\\ScopeListComparator'] ?? $container->load('getScopeListComparatorService')), ($container->privates['Akeneo\\Connectivity\\Connection\\Application\\Apps\\Command\\UpdateConnectedAppScopesWithAuthorizationHandler'] ?? $container->load('getUpdateConnectedAppScopesWithAuthorizationHandlerService')), ($container->privates['Akeneo\\Connectivity\\Connection\\Infrastructure\\Apps\\OAuth\\ClientProvider'] ?? $container->load('getClientProviderService')));
    }
}
