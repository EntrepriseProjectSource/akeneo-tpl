<?php

namespace ContainerRWxfJwK;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/*
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getFosOauthServer_ServerService extends KernelProdContainer
{
    /*
     * Gets the private 'fos_oauth_server.server' shared service.
     *
     * @return \Akeneo\Tool\Bundle\ApiBundle\Security\OAuth2
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/vendor/friendsofsymfony/oauth2-php/lib/IOAuth2.php';
        include_once \dirname(__DIR__, 4).'/vendor/friendsofsymfony/oauth2-php/lib/OAuth2.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Tool/Bundle/ApiBundle/Security/OAuth2.php';

        $a = ($container->services['event_dispatcher'] ?? $container->getEventDispatcherService());

        if (isset($container->privates['fos_oauth_server.server'])) {
            return $container->privates['fos_oauth_server.server'];
        }

        return $container->privates['fos_oauth_server.server'] = new \Akeneo\Tool\Bundle\ApiBundle\Security\OAuth2(($container->privates['fos_oauth_server.storage.default'] ?? $container->load('getFosOauthServer_Storage_DefaultService')), $a, []);
    }
}
