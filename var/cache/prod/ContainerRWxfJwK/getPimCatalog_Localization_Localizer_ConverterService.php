<?php

namespace ContainerRWxfJwK;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/*
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getPimCatalog_Localization_Localizer_ConverterService extends KernelProdContainer
{
    /*
     * Gets the private 'pim_catalog.localization.localizer.converter' shared service.
     *
     * @return \Akeneo\Pim\Enrichment\Component\Product\Localization\Localizer\AttributeConverter
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Enrichment/Component/Product/Localization/Localizer/AttributeConverterInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Enrichment/Component/Product/Localization/Localizer/AttributeConverter.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Enrichment/Component/Product/Localization/Localizer/LocalizerRegistryInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Enrichment/Component/Product/Localization/Localizer/LocalizerRegistry.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Tool/Component/Localization/Localizer/LocalizerInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Tool/Component/Localization/Localizer/NumberLocalizer.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Enrichment/Component/Product/Localization/Localizer/PriceLocalizer.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Tool/Component/Localization/Localizer/DateLocalizer.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Tool/Component/Localization/Factory/NumberFactory.php';

        $a = ($container->privates['pim_catalog.localization.localizer.number'] ?? $container->load('getPimCatalog_Localization_Localizer_NumberService'));

        if (isset($container->privates['pim_catalog.localization.localizer.converter'])) {
            return $container->privates['pim_catalog.localization.localizer.converter'];
        }
        $b = ($container->services['.container.private.validator'] ?? $container->load('get_Container_Private_ValidatorService'));

        if (isset($container->privates['pim_catalog.localization.localizer.converter'])) {
            return $container->privates['pim_catalog.localization.localizer.converter'];
        }
        $c = ($container->privates['pim_catalog.localization.localizer.metric'] ?? $container->load('getPimCatalog_Localization_Localizer_MetricService'));

        if (isset($container->privates['pim_catalog.localization.localizer.converter'])) {
            return $container->privates['pim_catalog.localization.localizer.converter'];
        }
        $d = new \Akeneo\Pim\Enrichment\Component\Product\Localization\Localizer\LocalizerRegistry();
        $d->register($a);
        $d->register(new \Akeneo\Pim\Enrichment\Component\Product\Localization\Localizer\PriceLocalizer($b, ($container->privates['pim_catalog.localization.factory.number'] ?? ($container->privates['pim_catalog.localization.factory.number'] = new \Akeneo\Tool\Component\Localization\Factory\NumberFactory([]))), [0 => 'pim_catalog_price_collection']));
        $d->register($c);
        $d->register(new \Akeneo\Tool\Component\Localization\Localizer\DateLocalizer($b, ($container->privates['pim_catalog.localization.factory.date'] ?? $container->load('getPimCatalog_Localization_Factory_DateService')), [0 => 'pim_catalog_date']));

        return $container->privates['pim_catalog.localization.localizer.converter'] = new \Akeneo\Pim\Enrichment\Component\Product\Localization\Localizer\AttributeConverter($d, ($container->privates['pim_catalog.repository.attribute'] ?? $container->load('getPimCatalog_Repository_AttributeService')));
    }
}
