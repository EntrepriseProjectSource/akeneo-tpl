<?php

namespace ContainerRWxfJwK;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/*
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getCreateConnectionHandlerService extends KernelProdContainer
{
    /*
     * Gets the public 'Akeneo\Connectivity\Connection\Application\Settings\Command\CreateConnectionHandler' shared service.
     *
     * @return \Akeneo\Connectivity\Connection\Application\Settings\Command\CreateConnectionHandler
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Connectivity/Connection/back/Application/Settings/Command/CreateConnectionHandler.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Connectivity/Connection/back/Application/Settings/Service/CreateClientInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Connectivity/Connection/back/Infrastructure/Settings/Client/Fos/CreateClient.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Connectivity/Connection/back/Application/Settings/Service/CreateUserInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Connectivity/Connection/back/Infrastructure/Service/User/CreateUser.php';

        $a = ($container->services['.container.private.validator'] ?? $container->load('get_Container_Private_ValidatorService'));

        return $container->services['Akeneo\\Connectivity\\Connection\\Application\\Settings\\Command\\CreateConnectionHandler'] = new \Akeneo\Connectivity\Connection\Application\Settings\Command\CreateConnectionHandler($a, ($container->privates['Akeneo\\Connectivity\\Connection\\Infrastructure\\Settings\\Persistence\\DbalConnectionRepository'] ?? $container->load('getDbalConnectionRepositoryService')), new \Akeneo\Connectivity\Connection\Infrastructure\Settings\Client\Fos\CreateClient(($container->privates['fos_oauth_server.client_manager.default'] ?? $container->load('getFosOauthServer_ClientManager_DefaultService'))), new \Akeneo\Connectivity\Connection\Infrastructure\Service\User\CreateUser(($container->privates['pim_user.factory.user'] ?? $container->load('getPimUser_Factory_UserService')), ($container->privates['pim_user.updater.user'] ?? $container->load('getPimUser_Updater_UserService')), $a, ($container->privates['pim_user.saver.user'] ?? $container->load('getPimUser_Saver_UserService'))), ($container->privates['Akeneo\\Connectivity\\Connection\\Application\\Settings\\Query\\FindAConnectionHandler'] ?? $container->load('getFindAConnectionHandlerService')));
    }
}
