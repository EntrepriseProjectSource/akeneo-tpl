<?php

namespace ContainerRWxfJwK;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/*
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getBusinessEventHandlerService extends KernelProdContainer
{
    /*
     * Gets the private 'Akeneo\Connectivity\Connection\Infrastructure\Webhook\MessageHandler\BusinessEventHandler' shared service.
     *
     * @return \Akeneo\Connectivity\Connection\Infrastructure\Webhook\MessageHandler\BusinessEventHandler
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/messenger/Handler/MessageHandlerInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/messenger/Handler/MessageSubscriberInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Connectivity/Connection/back/Infrastructure/Webhook/MessageHandler/BusinessEventHandler.php';

        return $container->privates['Akeneo\\Connectivity\\Connection\\Infrastructure\\Webhook\\MessageHandler\\BusinessEventHandler'] = new \Akeneo\Connectivity\Connection\Infrastructure\Webhook\MessageHandler\BusinessEventHandler(\dirname(__DIR__, 4), ($container->privates['monolog.logger'] ?? $container->load('getMonolog_LoggerService')), ($container->privates['Akeneo\\Platform\\Component\\EventQueue\\BulkEventNormalizer'] ?? $container->load('getBulkEventNormalizerService')));
    }
}
