<?php

namespace ContainerRWxfJwK;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/*
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getPimCatalog_Query_Filter_ProductRegistryService extends KernelProdContainer
{
    /*
     * Gets the private 'pim_catalog.query.filter.product_registry' shared service.
     *
     * @return \Akeneo\Pim\Enrichment\Component\Product\Query\Filter\FilterRegistry
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Enrichment/Component/Product/Query/Filter/FilterRegistryInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Enrichment/Component/Product/Query/Filter/FilterRegistry.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Enrichment/Component/Product/Query/Filter/FilterInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Enrichment/Component/Product/Query/Filter/FieldFilterInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Enrichment/Bundle/Elasticsearch/Filter/Field/AbstractFieldFilter.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Enrichment/Bundle/Elasticsearch/Filter/Field/IdFilter.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Enrichment/Bundle/Elasticsearch/Filter/Field/Product/CompletenessFilter.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Enrichment/Bundle/Elasticsearch/Filter/Field/LabelOrIdentifierFilter.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Enrichment/Bundle/Elasticsearch/Filter/Field/UuidFilter.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Enrichment/Bundle/Elasticsearch/Filter/Field/StatusFilter.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Enrichment/Bundle/Elasticsearch/Filter/Field/EntityTypeFilter.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Enrichment/Component/Product/Query/Filter/AttributeFilterInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Enrichment/Bundle/ProductQueryBuilder/Filter/DummyFilter.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Automation/DataQualityInsights/back/Infrastructure/Elasticsearch/Filter/KeyIndicatorFilter.php';

        $container->privates['pim_catalog.query.filter.product_registry'] = $instance = new \Akeneo\Pim\Enrichment\Component\Product\Query\Filter\FilterRegistry(($container->privates['pim_catalog.repository.attribute'] ?? $container->load('getPimCatalog_Repository_AttributeService')));

        $instance->register(($container->privates['pim_catalog.query.elasticsearch.filter.identifier_field'] ?? $container->load('getPimCatalog_Query_Elasticsearch_Filter_IdentifierFieldService')));
        $instance->register(($container->privates['pim_catalog.query.elasticsearch.filter.label_or_identifier'] ?? ($container->privates['pim_catalog.query.elasticsearch.filter.label_or_identifier'] = new \Akeneo\Pim\Enrichment\Bundle\Elasticsearch\Filter\Field\LabelOrIdentifierFilter([0 => 'label_or_identifier'], [0 => 'CONTAINS']))));
        $instance->register(new \Akeneo\Pim\Enrichment\Bundle\Elasticsearch\Filter\Field\IdFilter([0 => 'id'], [0 => 'IN', 1 => 'NOT IN', 2 => '=', 3 => '!='], 'product_', ($container->services['doctrine.dbal.default_connection'] ?? $container->getDoctrine_Dbal_DefaultConnectionService())));
        $instance->register(($container->privates['Akeneo\\Pim\\Enrichment\\Bundle\\Elasticsearch\\Filter\\Field\\UuidFilter'] ?? ($container->privates['Akeneo\\Pim\\Enrichment\\Bundle\\Elasticsearch\\Filter\\Field\\UuidFilter'] = new \Akeneo\Pim\Enrichment\Bundle\Elasticsearch\Filter\Field\UuidFilter('product_'))));
        $instance->register(($container->privates['pim_catalog.query.elasticsearch.filter.family'] ?? $container->load('getPimCatalog_Query_Elasticsearch_Filter_FamilyService')));
        $instance->register(($container->privates['pim_catalog.query.elasticsearch.filter.family_variant'] ?? $container->load('getPimCatalog_Query_Elasticsearch_Filter_FamilyVariantService')));
        $instance->register(($container->privates['pim_catalog.query.elasticsearch.filter.group'] ?? $container->load('getPimCatalog_Query_Elasticsearch_Filter_GroupService')));
        $instance->register(($container->privates['pim_catalog.query.elasticsearch.filter.category'] ?? $container->load('getPimCatalog_Query_Elasticsearch_Filter_CategoryService')));
        $instance->register(($container->privates['pim_catalog.query.elasticsearch.filter.status'] ?? ($container->privates['pim_catalog.query.elasticsearch.filter.status'] = new \Akeneo\Pim\Enrichment\Bundle\Elasticsearch\Filter\Field\StatusFilter([0 => 'enabled'], [0 => '=', 1 => '!=']))));
        $instance->register(($container->privates['pim_catalog.query.elasticsearch.filter.boolean'] ?? $container->load('getPimCatalog_Query_Elasticsearch_Filter_BooleanService')));
        $instance->register(($container->privates['pim_catalog.doctrine.elasticsearch.filter.datetime'] ?? $container->load('getPimCatalog_Doctrine_Elasticsearch_Filter_DatetimeService')));
        $instance->register(new \Akeneo\Pim\Enrichment\Bundle\Elasticsearch\Filter\Field\Product\CompletenessFilter(($container->privates['pim_catalog.repository.cached_channel'] ?? $container->load('getPimCatalog_Repository_CachedChannelService')), [0 => 'completeness'], [0 => 'NOT EQUALS ON AT LEAST ONE LOCALE', 1 => 'EQUALS ON AT LEAST ONE LOCALE', 2 => 'GREATER THAN ON AT LEAST ONE LOCALE', 3 => 'GREATER OR EQUALS THAN ON AT LEAST ONE LOCALE', 4 => 'LOWER OR EQUALS THAN ON AT LEAST ONE LOCALE', 5 => 'LOWER THAN ON AT LEAST ONE LOCALE', 6 => 'GREATER THAN ON ALL LOCALES', 7 => 'GREATER OR EQUALS THAN ON ALL LOCALES', 8 => 'LOWER OR EQUALS THAN ON ALL LOCALES', 9 => 'LOWER THAN ON ALL LOCALES', 10 => '!=', 11 => '=', 12 => '>', 13 => '>=', 14 => '<=', 15 => '<', 16 => 'EMPTY']));
        $instance->register(($container->privates['pim_catalog.query.elasticsearch.filter.parent'] ?? $container->load('getPimCatalog_Query_Elasticsearch_Filter_ParentService')));
        $instance->register(($container->privates['pim_catalog.query.elasticsearch.filter.document_type'] ?? ($container->privates['pim_catalog.query.elasticsearch.filter.document_type'] = new \Akeneo\Pim\Enrichment\Bundle\Elasticsearch\Filter\Field\EntityTypeFilter([0 => 'entity_type'], [0 => '=']))));
        $instance->register(($container->privates['pim_catalog.query.elasticsearch.filter.ancestor_code'] ?? $container->load('getPimCatalog_Query_Elasticsearch_Filter_AncestorCodeService')));
        $instance->register(($container->privates['pim_catalog.query.elasticsearch.filter.identifier_attribute'] ?? $container->load('getPimCatalog_Query_Elasticsearch_Filter_IdentifierAttributeService')));
        $instance->register(($container->privates['pim_catalog.query.elasticsearch.filter.number'] ?? $container->load('getPimCatalog_Query_Elasticsearch_Filter_NumberService')));
        $instance->register(($container->privates['pim_catalog.doctrine.query.filter.date'] ?? $container->load('getPimCatalog_Doctrine_Query_Filter_DateService')));
        $instance->register(($container->privates['pim_catalog.query.elasticsearch.filter.text'] ?? $container->load('getPimCatalog_Query_Elasticsearch_Filter_TextService')));
        $instance->register(($container->privates['pim_catalog.query.elasticsearch.filter.text_area'] ?? $container->load('getPimCatalog_Query_Elasticsearch_Filter_TextAreaService')));
        $instance->register(($container->privates['pim_catalog.query.elasticsearch.filter.option'] ?? $container->load('getPimCatalog_Query_Elasticsearch_Filter_OptionService')));
        $instance->register(($container->privates['pim_catalog.query.elasticsearch.filter.price'] ?? $container->load('getPimCatalog_Query_Elasticsearch_Filter_PriceService')));
        $instance->register(($container->privates['pim_catalog.query.elasticsearch.filter.metric'] ?? $container->load('getPimCatalog_Query_Elasticsearch_Filter_MetricService')));
        $instance->register(($container->privates['pim_catalog.query.elasticsearch.filter.media'] ?? $container->load('getPimCatalog_Query_Elasticsearch_Filter_MediaService')));
        $instance->register(($container->privates['pim.reference_data.query.filter.reference_data'] ?? $container->load('getPim_ReferenceData_Query_Filter_ReferenceDataService')));
        $instance->register(($container->privates['pim_enrich.product_query_builder.filter.dummy'] ?? ($container->privates['pim_enrich.product_query_builder.filter.dummy'] = new \Akeneo\Pim\Enrichment\Bundle\ProductQueryBuilder\Filter\DummyFilter([], [0 => 'enabled', 1 => 'completeness'], [0 => 'ALL']))));
        $instance->register(($container->privates['Akeneo\\Pim\\Automation\\DataQualityInsights\\Infrastructure\\Elasticsearch\\Filter\\QualityScoreMultiLocalesFilter'] ?? $container->load('getQualityScoreMultiLocalesFilterService')));
        $instance->register(($container->privates['Akeneo\\Pim\\Automation\\DataQualityInsights\\Infrastructure\\Elasticsearch\\Filter\\QualityScoreFilter'] ?? $container->load('getQualityScoreFilterService')));
        $instance->register(($container->privates['akeneo.pim.automation.data_quality_insights.product_grid.elasticsearch.enrichment_quality_filter'] ?? ($container->privates['akeneo.pim.automation.data_quality_insights.product_grid.elasticsearch.enrichment_quality_filter'] = new \Akeneo\Pim\Automation\DataQualityInsights\Infrastructure\Elasticsearch\Filter\KeyIndicatorFilter('data_quality_insights_enrichment_quality', 'good_enrichment'))));
        $instance->register(($container->privates['akeneo.pim.automation.data_quality_insights.product_grid.elasticsearch.image_quality_filter'] ?? ($container->privates['akeneo.pim.automation.data_quality_insights.product_grid.elasticsearch.image_quality_filter'] = new \Akeneo\Pim\Automation\DataQualityInsights\Infrastructure\Elasticsearch\Filter\KeyIndicatorFilter('data_quality_insights_images_quality', 'has_image'))));

        return $instance;
    }
}
