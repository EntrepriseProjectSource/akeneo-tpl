<?php

namespace ContainerRWxfJwK;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/*
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getUpdateWebhookActionService extends KernelProdContainer
{
    /*
     * Gets the public 'Akeneo\Connectivity\Connection\Infrastructure\Webhook\Controller\Internal\UpdateWebhookAction' shared service.
     *
     * @return \Akeneo\Connectivity\Connection\Infrastructure\Webhook\Controller\Internal\UpdateWebhookAction
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Connectivity/Connection/back/Infrastructure/Webhook/Controller/Internal/UpdateWebhookAction.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Connectivity/Connection/back/Application/Webhook/Command/UpdateWebhookHandler.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Connectivity/Connection/back/Domain/Webhook/Persistence/Query/UpdateConnectionWebhookQueryInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Connectivity/Connection/back/Infrastructure/Webhook/Persistence/UpdateConnectionWebhookQuery.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Connectivity/Connection/back/Domain/Webhook/Persistence/Query/SelectWebhookSecretQueryInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Connectivity/Connection/back/Infrastructure/Webhook/Persistence/DbalSelectWebhookSecretQuery.php';

        $a = ($container->services['doctrine.dbal.default_connection'] ?? $container->getDoctrine_Dbal_DefaultConnectionService());

        return $container->services['Akeneo\\Connectivity\\Connection\\Infrastructure\\Webhook\\Controller\\Internal\\UpdateWebhookAction'] = new \Akeneo\Connectivity\Connection\Infrastructure\Webhook\Controller\Internal\UpdateWebhookAction(new \Akeneo\Connectivity\Connection\Application\Webhook\Command\UpdateWebhookHandler(new \Akeneo\Connectivity\Connection\Infrastructure\Webhook\Persistence\UpdateConnectionWebhookQuery($a), ($container->services['.container.private.validator'] ?? $container->load('get_Container_Private_ValidatorService')), new \Akeneo\Connectivity\Connection\Infrastructure\Webhook\Persistence\DbalSelectWebhookSecretQuery($a), ($container->privates['Akeneo\\Connectivity\\Connection\\Application\\Webhook\\Command\\GenerateWebhookSecretHandler'] ?? $container->load('getGenerateWebhookSecretHandlerService'))), ($container->privates['oro_security.security_facade'] ?? $container->getOroSecurity_SecurityFacadeService()));
    }
}
