<?php

namespace ContainerRWxfJwK;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/*
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getPimEnrich_Extension_RegisterIdentifierFiltersService extends KernelProdContainer
{
    /*
     * Gets the private 'pim_enrich.extension.register_identifier_filters' shared service.
     *
     * @return \Akeneo\Pim\Enrichment\Bundle\Extension\RegisterIdentifierFilters
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Enrichment/Bundle/Extension/RegisterIdentifierFilters.php';

        $a = ($container->privates['akeneo.pim.structure.query.get_attributes'] ?? $container->load('getAkeneo_Pim_Structure_Query_GetAttributesService'));

        if (isset($container->privates['pim_enrich.extension.register_identifier_filters'])) {
            return $container->privates['pim_enrich.extension.register_identifier_filters'];
        }
        $b = ($container->privates['akeneo.pim.structure.query.get_attribute_translations'] ?? $container->load('getAkeneo_Pim_Structure_Query_GetAttributeTranslationsService'));

        if (isset($container->privates['pim_enrich.extension.register_identifier_filters'])) {
            return $container->privates['pim_enrich.extension.register_identifier_filters'];
        }
        $c = ($container->services['pim_user.context.user'] ?? $container->getPimUser_Context_UserService());

        if (isset($container->privates['pim_enrich.extension.register_identifier_filters'])) {
            return $container->privates['pim_enrich.extension.register_identifier_filters'];
        }

        return $container->privates['pim_enrich.extension.register_identifier_filters'] = new \Akeneo\Pim\Enrichment\Bundle\Extension\RegisterIdentifierFilters($a, $b, $c, ($container->privates['oro_datagrid.datagrid.request_params'] ?? $container->load('getOroDatagrid_Datagrid_RequestParamsService')), ($container->services['request_stack'] ?? ($container->services['request_stack'] = new \Symfony\Component\HttpFoundation\RequestStack())));
    }
}
