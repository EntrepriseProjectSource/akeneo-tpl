<?php

namespace ContainerRWxfJwK;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/*
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getPimEnrich_Controller_FileService extends KernelProdContainer
{
    /*
     * Gets the public 'pim_enrich.controller.file' shared service.
     *
     * @return \Akeneo\Pim\Enrichment\Bundle\Controller\Ui\FileController
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Enrichment/Bundle/Controller/Ui/FileController.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Enrichment/Bundle/File/FileTypeGuesserInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Enrichment/Bundle/File/FileTypeGuesser.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Enrichment/Bundle/File/DefaultImageProviderInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Enrichment/Bundle/File/DefaultImageProvider.php';

        return $container->services['pim_enrich.controller.file'] = new \Akeneo\Pim\Enrichment\Bundle\Controller\Ui\FileController(($container->services['Liip\\ImagineBundle\\Controller\\ImagineController'] ?? $container->load('getImagineControllerService')), ($container->privates['akeneo_file_storage.file_storage.filesystem_provider'] ?? $container->load('getAkeneoFileStorage_FileStorage_FilesystemProviderService')), ($container->privates['akeneo_file_storage.repository.file_info'] ?? $container->load('getAkeneoFileStorage_Repository_FileInfoService')), new \Akeneo\Pim\Enrichment\Bundle\File\FileTypeGuesser(), new \Akeneo\Pim\Enrichment\Bundle\File\DefaultImageProvider(($container->services['liip_imagine.filter.manager'] ?? $container->load('getLiipImagine_Filter_ManagerService')), ($container->services['liip_imagine.cache.manager'] ?? $container->load('getLiipImagine_Cache_ManagerService')), $container->parameters['pim_enrich.provider.default_image.images']), [0 => 'catalogStorage', 1 => 'categoryStorage']);
    }
}
