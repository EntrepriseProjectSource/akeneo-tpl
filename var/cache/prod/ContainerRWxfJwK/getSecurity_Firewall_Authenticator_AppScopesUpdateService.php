<?php

namespace ContainerRWxfJwK;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/*
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getSecurity_Firewall_Authenticator_AppScopesUpdateService extends KernelProdContainer
{
    /*
     * Gets the private 'security.firewall.authenticator.app_scopes_update' shared service.
     *
     * @return \Symfony\Component\Security\Http\Firewall\AuthenticatorManagerListener
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/security-http/Firewall/AuthenticatorManagerListener.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/security-http/Authentication/AuthenticatorManagerInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/security-http/Authentication/UserAuthenticatorInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/security-http/Authentication/AuthenticatorManager.php';

        $a = ($container->privates['fos_oauth_server.security.authentication.authenticator.app_scopes_update'] ?? $container->load('getFosOauthServer_Security_Authentication_Authenticator_AppScopesUpdateService'));

        if (isset($container->privates['security.firewall.authenticator.app_scopes_update'])) {
            return $container->privates['security.firewall.authenticator.app_scopes_update'];
        }
        $b = ($container->privates['security.event_dispatcher.app_scopes_update'] ?? $container->load('getSecurity_EventDispatcher_AppScopesUpdateService'));

        if (isset($container->privates['security.firewall.authenticator.app_scopes_update'])) {
            return $container->privates['security.firewall.authenticator.app_scopes_update'];
        }

        return $container->privates['security.firewall.authenticator.app_scopes_update'] = new \Symfony\Component\Security\Http\Firewall\AuthenticatorManagerListener(new \Symfony\Component\Security\Http\Authentication\AuthenticatorManager([0 => $a], ($container->services['.container.private.security.token_storage'] ?? $container->get_Container_Private_Security_TokenStorageService()), $b, 'app_scopes_update', ($container->privates['monolog.logger.security'] ?? $container->getMonolog_Logger_SecurityService()), true, true, []));
    }
}
