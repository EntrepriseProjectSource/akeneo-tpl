<?php

namespace ContainerRWxfJwK;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/*
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getAkeneoFileStorage_FileStorage_File_FileStorerService extends KernelProdContainer
{
    /*
     * Gets the private 'akeneo_file_storage.file_storage.file.file_storer' shared service.
     *
     * @return \Akeneo\Tool\Component\FileStorage\File\FileStorer
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Tool/Component/FileStorage/File/FileStorerInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Tool/Component/FileStorage/File/FileStorer.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Tool/Component/FileStorage/FileInfoFactoryInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Tool/Component/FileStorage/FileInfoFactory.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Tool/Component/FileStorage/PathGeneratorInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Tool/Component/FileStorage/PathGenerator.php';

        $a = ($container->privates['akeneo_file_storage.saver.file'] ?? $container->load('getAkeneoFileStorage_Saver_FileService'));

        if (isset($container->privates['akeneo_file_storage.file_storage.file.file_storer'])) {
            return $container->privates['akeneo_file_storage.file_storage.file.file_storer'];
        }

        return $container->privates['akeneo_file_storage.file_storage.file.file_storer'] = new \Akeneo\Tool\Component\FileStorage\File\FileStorer(($container->privates['akeneo_file_storage.file_storage.filesystem_provider'] ?? $container->load('getAkeneoFileStorage_FileStorage_FilesystemProviderService')), $a, new \Akeneo\Tool\Component\FileStorage\FileInfoFactory(($container->privates['akeneo_file_storage.file_storage.path_generator'] ?? ($container->privates['akeneo_file_storage.file_storage.path_generator'] = new \Akeneo\Tool\Component\FileStorage\PathGenerator())), 'Akeneo\\Tool\\Component\\FileStorage\\Model\\FileInfo'));
    }
}
