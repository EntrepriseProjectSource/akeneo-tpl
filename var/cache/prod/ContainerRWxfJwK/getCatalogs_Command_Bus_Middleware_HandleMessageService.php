<?php

namespace ContainerRWxfJwK;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/*
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getCatalogs_Command_Bus_Middleware_HandleMessageService extends KernelProdContainer
{
    /*
     * Gets the private 'catalogs.command.bus.middleware.handle_message' shared service.
     *
     * @return \Symfony\Component\Messenger\Middleware\HandleMessageMiddleware
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/messenger/Middleware/MiddlewareInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/messenger/Middleware/HandleMessageMiddleware.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/messenger/Handler/HandlersLocatorInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/messenger/Handler/HandlersLocator.php';

        $container->privates['catalogs.command.bus.middleware.handle_message'] = $instance = new \Symfony\Component\Messenger\Middleware\HandleMessageMiddleware(new \Symfony\Component\Messenger\Handler\HandlersLocator(['Symfony\\Component\\Mailer\\Messenger\\SendEmailMessage' => new RewindableGenerator(function () use ($container) {
            yield 0 => ($container->privates['.messenger.handler_descriptor.xqe8fjZ'] ?? $container->load('get_Messenger_HandlerDescriptor_Xqe8fjZService'));
        }, 1), 'Akeneo\\Tool\\Component\\BatchQueue\\Queue\\JobExecutionMessageInterface' => new RewindableGenerator(function () use ($container) {
            yield 0 => ($container->privates['.messenger.handler_descriptor.21dAvo_'] ?? $container->load('get_Messenger_HandlerDescriptor_21dAvoService'));
        }, 1), 'Akeneo\\Tool\\Component\\BatchQueue\\Queue\\ScheduledJobMessageInterface' => new RewindableGenerator(function () use ($container) {
            yield 0 => ($container->privates['.messenger.handler_descriptor.UIa6O.Q'] ?? $container->load('get_Messenger_HandlerDescriptor_UIa6O_QService'));
        }, 1), 'Akeneo\\Platform\\Component\\EventQueue\\BulkEventInterface' => new RewindableGenerator(function () use ($container) {
            yield 0 => ($container->privates['.messenger.handler_descriptor.A3CN8sW'] ?? $container->load('get_Messenger_HandlerDescriptor_A3CN8sWService'));
        }, 1), 'Akeneo\\Catalogs\\ServiceAPI\\Command\\CreateCatalogCommand' => new RewindableGenerator(function () use ($container) {
            yield 0 => ($container->privates['.messenger.handler_descriptor.mwgSV5c'] ?? $container->load('get_Messenger_HandlerDescriptor_MwgSV5cService'));
        }, 1), 'Akeneo\\Catalogs\\ServiceAPI\\Command\\DeleteCatalogCommand' => new RewindableGenerator(function () use ($container) {
            yield 0 => ($container->privates['.messenger.handler_descriptor.orkIkP.'] ?? $container->load('get_Messenger_HandlerDescriptor_OrkIkP_Service'));
        }, 1), 'Akeneo\\Catalogs\\ServiceAPI\\Command\\DeleteProductMappingSchemaCommand' => new RewindableGenerator(function () use ($container) {
            yield 0 => ($container->privates['.messenger.handler_descriptor.0OiH2vj'] ?? $container->load('get_Messenger_HandlerDescriptor_0OiH2vjService'));
        }, 1), 'Akeneo\\Catalogs\\ServiceAPI\\Query\\GetCatalogQuery' => new RewindableGenerator(function () use ($container) {
            yield 0 => ($container->privates['.messenger.handler_descriptor._0v.wOI'] ?? $container->load('get_Messenger_HandlerDescriptor_0v_WOIService'));
        }, 1), 'Akeneo\\Catalogs\\ServiceAPI\\Query\\GetCatalogsByOwnerUsernameQuery' => new RewindableGenerator(function () use ($container) {
            yield 0 => ($container->privates['.messenger.handler_descriptor.OKvqBnd'] ?? $container->load('get_Messenger_HandlerDescriptor_OKvqBndService'));
        }, 1), 'Akeneo\\Catalogs\\ServiceAPI\\Query\\GetMappedProductsQuery' => new RewindableGenerator(function () use ($container) {
            yield 0 => ($container->privates['.messenger.handler_descriptor.Bnu9zky'] ?? $container->load('get_Messenger_HandlerDescriptor_Bnu9zkyService'));
        }, 1), 'Akeneo\\Catalogs\\ServiceAPI\\Query\\GetProductQuery' => new RewindableGenerator(function () use ($container) {
            yield 0 => ($container->privates['.messenger.handler_descriptor.4uRZLrC'] ?? $container->load('get_Messenger_HandlerDescriptor_4uRZLrCService'));
        }, 1), 'Akeneo\\Catalogs\\ServiceAPI\\Query\\GetProductIdentifiersQuery' => new RewindableGenerator(function () use ($container) {
            yield 0 => ($container->privates['.messenger.handler_descriptor.zF0TS61'] ?? $container->load('get_Messenger_HandlerDescriptor_ZF0TS61Service'));
        }, 1), 'Akeneo\\Catalogs\\ServiceAPI\\Query\\GetProductMappingSchemaQuery' => new RewindableGenerator(function () use ($container) {
            yield 0 => ($container->privates['.messenger.handler_descriptor.RKM0pGq'] ?? $container->load('get_Messenger_HandlerDescriptor_RKM0pGqService'));
        }, 1), 'Akeneo\\Catalogs\\ServiceAPI\\Query\\GetProductUuidsQuery' => new RewindableGenerator(function () use ($container) {
            yield 0 => ($container->privates['.messenger.handler_descriptor.CYyPH4S'] ?? $container->load('get_Messenger_HandlerDescriptor_CYyPH4SService'));
        }, 1), 'Akeneo\\Catalogs\\ServiceAPI\\Query\\GetProductsQuery' => new RewindableGenerator(function () use ($container) {
            yield 0 => ($container->privates['.messenger.handler_descriptor.ijB13fT'] ?? $container->load('get_Messenger_HandlerDescriptor_IjB13fTService'));
        }, 1), 'Akeneo\\Catalogs\\ServiceAPI\\Command\\UpdateCatalogCommand' => new RewindableGenerator(function () use ($container) {
            yield 0 => ($container->privates['.messenger.handler_descriptor.5GnWwab'] ?? $container->load('get_Messenger_HandlerDescriptor_5GnWwabService'));
        }, 1), 'Akeneo\\Catalogs\\ServiceAPI\\Command\\UpdateProductMappingSchemaCommand' => new RewindableGenerator(function () use ($container) {
            yield 0 => ($container->privates['.messenger.handler_descriptor.gBAvDw0'] ?? $container->load('get_Messenger_HandlerDescriptor_GBAvDw0Service'));
        }, 1)]));

        $instance->setLogger(($container->privates['monolog.logger.messenger'] ?? $container->load('getMonolog_Logger_MessengerService')));

        return $instance;
    }
}
