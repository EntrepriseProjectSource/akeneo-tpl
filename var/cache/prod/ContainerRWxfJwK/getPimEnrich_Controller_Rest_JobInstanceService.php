<?php

namespace ContainerRWxfJwK;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/*
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getPimEnrich_Controller_Rest_JobInstanceService extends KernelProdContainer
{
    /*
     * Gets the public 'pim_enrich.controller.rest.job_instance' shared service.
     *
     * @return \Akeneo\Platform\Bundle\ImportExportBundle\Controller\InternalApi\JobInstanceController
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Platform/Bundle/ImportExportBundle/Controller/InternalApi/JobInstanceController.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/serializer/Normalizer/NormalizerInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/serializer/Normalizer/CacheableSupportsMethodInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Tool/Component/Batch/Normalizer/Standard/JobInstanceNormalizer.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Enrichment/Component/Product/Normalizer/InternalApi/ConstraintViolationNormalizer.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Tool/Bundle/BatchBundle/Job/JobInstanceFactory.php';

        $a = ($container->privates['pim_catalog.filter.chained'] ?? $container->load('getPimCatalog_Filter_ChainedService'));

        return $container->services['pim_enrich.controller.rest.job_instance'] = new \Akeneo\Platform\Bundle\ImportExportBundle\Controller\InternalApi\JobInstanceController(($container->privates['akeneo_batch.job.job_instance_repository'] ?? $container->load('getAkeneoBatch_Job_JobInstanceRepositoryService')), ($container->services['akeneo_batch.job.job_registry'] ?? $container->load('getAkeneoBatch_Job_JobRegistryService')), ($container->privates['pim_catalog.normalizer.standard.job_instance'] ?? ($container->privates['pim_catalog.normalizer.standard.job_instance'] = new \Akeneo\Tool\Component\Batch\Normalizer\Standard\JobInstanceNormalizer())), ($container->privates['akeneo_batch.updater.job_instance'] ?? $container->load('getAkeneoBatch_Updater_JobInstanceService')), ($container->privates['akeneo_batch.saver.job_instance'] ?? $container->load('getAkeneoBatch_Saver_JobInstanceService')), ($container->privates['akeneo_batch.remover.job_instance'] ?? $container->load('getAkeneoBatch_Remover_JobInstanceService')), ($container->services['.container.private.validator'] ?? $container->load('get_Container_Private_ValidatorService')), ($container->privates['akeneo_batch.job.job_parameters_validator'] ?? $container->load('getAkeneoBatch_Job_JobParametersValidatorService')), ($container->privates['akeneo_batch.job_parameters_factory'] ?? $container->load('getAkeneoBatch_JobParametersFactoryService')), ($container->privates['pim_connector.launcher.authenticated_job_launcher'] ?? $container->load('getPimConnector_Launcher_AuthenticatedJobLauncherService')), ($container->services['.container.private.security.token_storage'] ?? $container->get_Container_Private_Security_TokenStorageService()), ($container->services['router'] ?? $container->getRouterService()), ($container->privates['pim_enrich.provider.form.chained'] ?? $container->load('getPimEnrich_Provider_Form_ChainedService')), $a, ($container->privates['pim_enrich.normalizer.violation'] ?? ($container->privates['pim_enrich.normalizer.violation'] = new \Akeneo\Pim\Enrichment\Component\Product\Normalizer\InternalApi\ConstraintViolationNormalizer())), ($container->privates['akeneo_batch.job_instance_factory'] ?? ($container->privates['akeneo_batch.job_instance_factory'] = new \Akeneo\Tool\Bundle\BatchBundle\Job\JobInstanceFactory('Akeneo\\Tool\\Component\\Batch\\Model\\JobInstance'))), ($container->services['event_dispatcher'] ?? $container->getEventDispatcherService()), $a, ($container->services['oneup_flysystem.jobs_storage_filesystem'] ?? $container->load('getOneupFlysystem_JobsStorageFilesystemService')), ($container->privates['oro_security.security_facade'] ?? $container->getOroSecurity_SecurityFacadeService()), ($container->privates['Akeneo\\Platform\\Bundle\\ImportExportBundle\\Infrastructure\\Security\\CredentialsEncrypterRegistry'] ?? $container->load('getCredentialsEncrypterRegistryService')));
    }
}
