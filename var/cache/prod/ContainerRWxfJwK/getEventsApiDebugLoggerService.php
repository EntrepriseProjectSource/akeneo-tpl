<?php

namespace ContainerRWxfJwK;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/*
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getEventsApiDebugLoggerService extends KernelProdContainer
{
    /*
     * Gets the private 'Akeneo\Connectivity\Connection\Application\Webhook\Service\EventsApiDebugLogger' shared service.
     *
     * @return \Akeneo\Connectivity\Connection\Application\Webhook\Service\EventsApiDebugLogger
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Connectivity/Connection/back/Application/Webhook/Service/EventSubscriptionSkippedOwnEventLoggerInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Connectivity/Connection/back/Application/Webhook/Service/LimitOfEventsApiRequestsReachedLoggerInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Connectivity/Connection/back/Application/Webhook/Service/EventsApiRequestLoggerInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Connectivity/Connection/back/Application/Webhook/Service/ApiEventBuildErrorLoggerInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Connectivity/Connection/back/Application/Webhook/Service/EventsApiDebugLogger.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Connectivity/Connection/back/Domain/ClockInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Connectivity/Connection/back/Infrastructure/Service/Clock/SystemClock.php';

        return $container->privates['Akeneo\\Connectivity\\Connection\\Application\\Webhook\\Service\\EventsApiDebugLogger'] = new \Akeneo\Connectivity\Connection\Application\Webhook\Service\EventsApiDebugLogger(($container->privates['Akeneo\\Connectivity\\Connection\\Infrastructure\\Webhook\\EventsApiDebug\\Persistence\\ElasticsearchEventsApiDebugRepository'] ?? $container->load('getElasticsearchEventsApiDebugRepositoryService')), ($container->privates['Akeneo\\Connectivity\\Connection\\Infrastructure\\Service\\Clock\\SystemClock'] ?? ($container->privates['Akeneo\\Connectivity\\Connection\\Infrastructure\\Service\\Clock\\SystemClock'] = new \Akeneo\Connectivity\Connection\Infrastructure\Service\Clock\SystemClock())), new RewindableGenerator(function () use ($container) {
            yield 0 => ($container->privates['Akeneo\\Connectivity\\Connection\\Domain\\Webhook\\EventNormalizer\\ProductEventNormalizer'] ?? ($container->privates['Akeneo\\Connectivity\\Connection\\Domain\\Webhook\\EventNormalizer\\ProductEventNormalizer'] = new \Akeneo\Connectivity\Connection\Domain\Webhook\EventNormalizer\ProductEventNormalizer()));
            yield 1 => ($container->privates['Akeneo\\Connectivity\\Connection\\Domain\\Webhook\\EventNormalizer\\ProductModelEventNormalizer'] ?? ($container->privates['Akeneo\\Connectivity\\Connection\\Domain\\Webhook\\EventNormalizer\\ProductModelEventNormalizer'] = new \Akeneo\Connectivity\Connection\Domain\Webhook\EventNormalizer\ProductModelEventNormalizer()));
        }, 2));
    }
}
