<?php

namespace ContainerRWxfJwK;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/*
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getDoctrine_Orm_Listeners_ResolveTargetEntityService extends KernelProdContainer
{
    /*
     * Gets the private 'doctrine.orm.listeners.resolve_target_entity' shared service.
     *
     * @return \Doctrine\ORM\Tools\ResolveTargetEntityListener
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/vendor/doctrine/orm/lib/Doctrine/ORM/Tools/ResolveTargetEntityListener.php';

        $container->privates['doctrine.orm.listeners.resolve_target_entity'] = $instance = new \Doctrine\ORM\Tools\ResolveTargetEntityListener();

        $instance->addResolveTargetEntity('placeholder', 'placeholder', []);
        $instance->addResolveTargetEntity('Akeneo\\Tool\\Component\\FileStorage\\Model\\FileInfoInterface', 'Akeneo\\Tool\\Component\\FileStorage\\Model\\FileInfo', []);
        $instance->addResolveTargetEntity('Akeneo\\UserManagement\\Component\\Model\\UserInterface', 'Akeneo\\UserManagement\\Component\\Model\\User', []);
        $instance->addResolveTargetEntity('Akeneo\\Channel\\Infrastructure\\Component\\Model\\LocaleInterface', 'Akeneo\\Channel\\Infrastructure\\Component\\Model\\Locale', []);
        $instance->addResolveTargetEntity('Akeneo\\Channel\\Infrastructure\\Component\\Model\\ChannelInterface', 'Akeneo\\Channel\\Infrastructure\\Component\\Model\\Channel', []);
        $instance->addResolveTargetEntity('Akeneo\\Channel\\Infrastructure\\Component\\Model\\ChannelTranslationInterface', 'Akeneo\\Channel\\Infrastructure\\Component\\Model\\ChannelTranslation', []);
        $instance->addResolveTargetEntity('Akeneo\\Channel\\Infrastructure\\Component\\Model\\CurrencyInterface', 'Akeneo\\Channel\\Infrastructure\\Component\\Model\\Currency', []);
        $instance->addResolveTargetEntity('Akeneo\\Category\\Infrastructure\\Component\\Model\\CategoryInterface', 'Akeneo\\Category\\Infrastructure\\Component\\Model\\Category', []);
        $instance->addResolveTargetEntity('Akeneo\\Category\\Infrastructure\\Component\\Model\\CategoryTranslationInterface', 'Akeneo\\Category\\Infrastructure\\Component\\Model\\CategoryTranslation', []);
        $instance->addResolveTargetEntity('Akeneo\\Pim\\Enrichment\\Component\\Product\\Model\\GroupInterface', 'Akeneo\\Pim\\Enrichment\\Component\\Product\\Model\\Group', []);
        $instance->addResolveTargetEntity('Akeneo\\Pim\\Enrichment\\Component\\Product\\Model\\GroupTranslationInterface', 'Akeneo\\Pim\\Enrichment\\Component\\Product\\Model\\GroupTranslation', []);
        $instance->addResolveTargetEntity('Akeneo\\Pim\\Enrichment\\Component\\Product\\Model\\ProductInterface', 'Akeneo\\Pim\\Enrichment\\Component\\Product\\Model\\Product', []);
        $instance->addResolveTargetEntity('Akeneo\\Pim\\Enrichment\\Component\\Product\\Model\\ProductAssociationInterface', 'Akeneo\\Pim\\Enrichment\\Component\\Product\\Model\\ProductAssociation', []);
        $instance->addResolveTargetEntity('Akeneo\\Pim\\Enrichment\\Component\\Product\\Model\\ProductModelInterface', 'Akeneo\\Pim\\Enrichment\\Component\\Product\\Model\\ProductModel', []);
        $instance->addResolveTargetEntity('Akeneo\\Pim\\Enrichment\\Component\\Product\\Model\\ProductModelAssociationInterface', 'Akeneo\\Pim\\Enrichment\\Component\\Product\\Model\\ProductModelAssociation', []);
        $instance->addResolveTargetEntity('Akeneo\\Pim\\Enrichment\\Component\\Product\\Model\\ProductUniqueDataInterface', 'Akeneo\\Pim\\Enrichment\\Component\\Product\\Model\\ProductUniqueData', []);
        $instance->addResolveTargetEntity('Akeneo\\Pim\\Enrichment\\Component\\Comment\\Model\\CommentInterface', 'Akeneo\\Pim\\Enrichment\\Component\\Comment\\Model\\Comment', []);
        $instance->addResolveTargetEntity('Akeneo\\Pim\\Structure\\Component\\Model\\AttributeInterface', 'Akeneo\\Pim\\Structure\\Component\\Model\\Attribute', []);
        $instance->addResolveTargetEntity('Akeneo\\Pim\\Structure\\Component\\Model\\AttributeTranslationInterface', 'Akeneo\\Pim\\Structure\\Component\\Model\\AttributeTranslation', []);
        $instance->addResolveTargetEntity('Akeneo\\Pim\\Structure\\Component\\Model\\AttributeOptionInterface', 'Akeneo\\Pim\\Structure\\Component\\Model\\AttributeOption', []);
        $instance->addResolveTargetEntity('Akeneo\\Pim\\Structure\\Component\\Model\\AttributeGroupInterface', 'Akeneo\\Pim\\Structure\\Component\\Model\\AttributeGroup', []);
        $instance->addResolveTargetEntity('Akeneo\\Pim\\Structure\\Component\\Model\\AttributeGroupTranslationInterface', 'Akeneo\\Pim\\Structure\\Component\\Model\\AttributeGroupTranslation', []);
        $instance->addResolveTargetEntity('Akeneo\\Pim\\Structure\\Component\\Model\\AttributeRequirementInterface', 'Akeneo\\Pim\\Structure\\Component\\Model\\AttributeRequirement', []);
        $instance->addResolveTargetEntity('Akeneo\\Pim\\Structure\\Component\\Model\\FamilyInterface', 'Akeneo\\Pim\\Structure\\Component\\Model\\Family', []);
        $instance->addResolveTargetEntity('Akeneo\\Pim\\Structure\\Component\\Model\\FamilyTranslationInterface', 'Akeneo\\Pim\\Structure\\Component\\Model\\FamilyTranslation', []);
        $instance->addResolveTargetEntity('Akeneo\\Pim\\Structure\\Component\\Model\\FamilyVariantInterface', 'Akeneo\\Pim\\Structure\\Component\\Model\\FamilyVariant', []);
        $instance->addResolveTargetEntity('Akeneo\\Pim\\Structure\\Component\\Model\\FamilyVariantTranslationInterface', 'Akeneo\\Pim\\Structure\\Component\\Model\\FamilyVariantTranslation', []);
        $instance->addResolveTargetEntity('Akeneo\\Pim\\Structure\\Component\\Model\\VariantAttributeSetInterface', 'Akeneo\\Pim\\Structure\\Component\\Model\\VariantAttributeSet', []);
        $instance->addResolveTargetEntity('Akeneo\\Pim\\Structure\\Component\\Model\\GroupTypeInterface', 'Akeneo\\Pim\\Structure\\Component\\Model\\GroupType', []);
        $instance->addResolveTargetEntity('Akeneo\\Pim\\Structure\\Component\\Model\\GroupTypeTranslationInterface', 'Akeneo\\Pim\\Structure\\Component\\Model\\GroupTypeTranslation', []);
        $instance->addResolveTargetEntity('Akeneo\\Pim\\Structure\\Component\\Model\\AssociationTypeTranslationInterface', 'Akeneo\\Pim\\Structure\\Component\\Model\\AssociationTypeTranslation', []);
        $instance->addResolveTargetEntity('Akeneo\\Pim\\Structure\\Component\\Model\\AssociationTypeInterface', 'Akeneo\\Pim\\Structure\\Component\\Model\\AssociationType', []);
        $instance->addResolveTargetEntity('Akeneo\\Pim\\Structure\\Component\\Model\\AttributeOptionValueInterface', 'Akeneo\\Pim\\Structure\\Component\\Model\\AttributeOptionValue', []);
        $instance->addResolveTargetEntity('Akeneo\\Category\\Infrastructure\\Component\\Model\\CategoryInterface', 'Akeneo\\Category\\Infrastructure\\Component\\Model\\Category', []);
        $instance->addResolveTargetEntity('Akeneo\\Category\\Infrastructure\\Component\\Model\\CategoryTranslationInterface', 'Akeneo\\Category\\Infrastructure\\Component\\Model\\CategoryTranslation', []);

        return $instance;
    }
}
