<?php

namespace ContainerRWxfJwK;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/*
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getManualUploadStorageClientProviderService extends KernelProdContainer
{
    /*
     * Gets the private 'Akeneo\Platform\Bundle\ImportExportBundle\Infrastructure\StorageClient\ManualUpload\ManualUploadStorageClientProvider' shared service.
     *
     * @return \Akeneo\Platform\Bundle\ImportExportBundle\Infrastructure\StorageClient\ManualUpload\ManualUploadStorageClientProvider
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Platform/Bundle/ImportExportBundle/Infrastructure/StorageClient/StorageClientProviderInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Platform/Bundle/ImportExportBundle/Infrastructure/StorageClient/ManualUpload/ManualUploadStorageClientProvider.php';

        return $container->privates['Akeneo\\Platform\\Bundle\\ImportExportBundle\\Infrastructure\\StorageClient\\ManualUpload\\ManualUploadStorageClientProvider'] = new \Akeneo\Platform\Bundle\ImportExportBundle\Infrastructure\StorageClient\ManualUpload\ManualUploadStorageClientProvider(($container->services['oneup_flysystem.jobs_storage_filesystem'] ?? $container->load('getOneupFlysystem_JobsStorageFilesystemService')));
    }
}
