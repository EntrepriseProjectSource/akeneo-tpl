<?php

namespace ContainerRWxfJwK;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/*
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getStorageValidatorService extends KernelProdContainer
{
    /*
     * Gets the private 'Akeneo\Platform\Bundle\ImportExportBundle\Infrastructure\Validation\StorageValidator' shared service.
     *
     * @return \Akeneo\Platform\Bundle\ImportExportBundle\Infrastructure\Validation\StorageValidator
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/validator/ConstraintValidatorInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/validator/ConstraintValidator.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Platform/Bundle/ImportExportBundle/Infrastructure/Validation/StorageValidator.php';

        return $container->privates['Akeneo\\Platform\\Bundle\\ImportExportBundle\\Infrastructure\\Validation\\StorageValidator'] = new \Akeneo\Platform\Bundle\ImportExportBundle\Infrastructure\Validation\StorageValidator(new RewindableGenerator(function () use ($container) {
            yield 'none' => ($container->privates['Akeneo\\Platform\\Bundle\\ImportExportBundle\\Infrastructure\\Validation\\Storage\\None\\NoneStorage'] ?? ($container->privates['Akeneo\\Platform\\Bundle\\ImportExportBundle\\Infrastructure\\Validation\\Storage\\None\\NoneStorage'] = new \Akeneo\Platform\Bundle\ImportExportBundle\Infrastructure\Validation\Storage\None\NoneStorage()));
            yield 'local' => ($container->privates['Akeneo\\Platform\\Bundle\\ImportExportBundle\\Infrastructure\\Validation\\Storage\\Local\\LocalStorage'] ?? ($container->privates['Akeneo\\Platform\\Bundle\\ImportExportBundle\\Infrastructure\\Validation\\Storage\\Local\\LocalStorage'] = new \Akeneo\Platform\Bundle\ImportExportBundle\Infrastructure\Validation\Storage\Local\LocalStorage()));
            yield 'manual_upload' => ($container->privates['Akeneo\\Platform\\Bundle\\ImportExportBundle\\Infrastructure\\Validation\\Storage\\ManualUpload\\ManualUploadStorage'] ?? ($container->privates['Akeneo\\Platform\\Bundle\\ImportExportBundle\\Infrastructure\\Validation\\Storage\\ManualUpload\\ManualUploadStorage'] = new \Akeneo\Platform\Bundle\ImportExportBundle\Infrastructure\Validation\Storage\ManualUpload\ManualUploadStorage()));
        }, 3));
    }
}
