<?php

namespace ContainerRWxfJwK;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/*
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getScopeMapperRegistryService extends KernelProdContainer
{
    /*
     * Gets the private 'Akeneo\Connectivity\Connection\Infrastructure\Apps\Security\ScopeMapperRegistry' shared service.
     *
     * @return \Akeneo\Connectivity\Connection\Infrastructure\Apps\Security\ScopeMapperRegistry
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Connectivity/Connection/back/Application/Apps/Security/ScopeMapperRegistryInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Connectivity/Connection/back/Infrastructure/Apps/Security/ScopeMapperRegistry.php';

        return $container->privates['Akeneo\\Connectivity\\Connection\\Infrastructure\\Apps\\Security\\ScopeMapperRegistry'] = new \Akeneo\Connectivity\Connection\Infrastructure\Apps\Security\ScopeMapperRegistry(new RewindableGenerator(function () use ($container) {
            yield 0 => ($container->privates['Akeneo\\Channel\\Infrastructure\\Component\\Security\\ChannelScopeMapper'] ?? ($container->privates['Akeneo\\Channel\\Infrastructure\\Component\\Security\\ChannelScopeMapper'] = new \Akeneo\Channel\Infrastructure\Component\Security\ChannelScopeMapper()));
            yield 1 => ($container->privates['Akeneo\\Pim\\Enrichment\\Component\\Product\\Security\\ProductScopeMapper'] ?? ($container->privates['Akeneo\\Pim\\Enrichment\\Component\\Product\\Security\\ProductScopeMapper'] = new \Akeneo\Pim\Enrichment\Component\Product\Security\ProductScopeMapper()));
            yield 2 => ($container->privates['Akeneo\\Pim\\Enrichment\\Component\\Security\\CategoriesScopeMapper'] ?? ($container->privates['Akeneo\\Pim\\Enrichment\\Component\\Security\\CategoriesScopeMapper'] = new \Akeneo\Pim\Enrichment\Component\Security\CategoriesScopeMapper()));
            yield 3 => ($container->privates['Akeneo\\Pim\\Structure\\Component\\Security\\CatalogStructureScopeMapper'] ?? ($container->privates['Akeneo\\Pim\\Structure\\Component\\Security\\CatalogStructureScopeMapper'] = new \Akeneo\Pim\Structure\Component\Security\CatalogStructureScopeMapper()));
            yield 4 => ($container->privates['Akeneo\\Pim\\Structure\\Component\\Security\\AttributeOptionsScopeMapper'] ?? ($container->privates['Akeneo\\Pim\\Structure\\Component\\Security\\AttributeOptionsScopeMapper'] = new \Akeneo\Pim\Structure\Component\Security\AttributeOptionsScopeMapper()));
            yield 5 => ($container->privates['Akeneo\\Pim\\Structure\\Component\\Security\\AssociationTypeScopeMapper'] ?? ($container->privates['Akeneo\\Pim\\Structure\\Component\\Security\\AssociationTypeScopeMapper'] = new \Akeneo\Pim\Structure\Component\Security\AssociationTypeScopeMapper()));
            yield 6 => ($container->privates['Akeneo\\Catalogs\\Infrastructure\\Security\\CatalogScopeMapper'] ?? $container->load('getCatalogScopeMapperService'));
        }, 7));
    }
}
