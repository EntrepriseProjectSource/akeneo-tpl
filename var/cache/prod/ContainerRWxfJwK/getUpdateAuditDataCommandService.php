<?php

namespace ContainerRWxfJwK;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/*
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getUpdateAuditDataCommandService extends KernelProdContainer
{
    /*
     * Gets the private 'Akeneo\Connectivity\Connection\Infrastructure\Audit\Command\UpdateAuditDataCommand' shared service.
     *
     * @return \Akeneo\Connectivity\Connection\Infrastructure\Audit\Command\UpdateAuditDataCommand
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/console/Command/Command.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Connectivity/Connection/back/Infrastructure/Audit/Command/UpdateAuditDataCommand.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Connectivity/Connection/back/Infrastructure/Audit/UpdateAuditData.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Connectivity/Connection/back/Application/Audit/Command/UpdateDataSourceProductEventCountHandler.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Connectivity/Connection/back/Domain/Audit/Persistence/ExtractConnectionsProductEventCountQueryInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Connectivity/Connection/back/Infrastructure/Audit/Persistence/DbalExtractConnectionsProductEventCountQuery.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Connectivity/Connection/back/Domain/Audit/Persistence/BulkInsertEventCountsQueryInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Connectivity/Connection/back/Infrastructure/Audit/Persistence/DbalBulkInsertEventCountsQuery.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Connectivity/Connection/back/Infrastructure/Audit/Persistence/DbalSelectHourlyIntervalsToRefreshQuery.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Connectivity/Connection/back/Domain/Audit/Persistence/PurgeAuditProductQueryInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Connectivity/Connection/back/Infrastructure/Audit/Persistence/DbalPurgeAuditProductQuery.php';

        $a = ($container->services['doctrine.dbal.default_connection'] ?? $container->getDoctrine_Dbal_DefaultConnectionService());
        $b = ($container->privates['monolog.logger'] ?? $container->load('getMonolog_LoggerService'));

        $container->privates['Akeneo\\Connectivity\\Connection\\Infrastructure\\Audit\\Command\\UpdateAuditDataCommand'] = $instance = new \Akeneo\Connectivity\Connection\Infrastructure\Audit\Command\UpdateAuditDataCommand(new \Akeneo\Connectivity\Connection\Infrastructure\Audit\UpdateAuditData(new \Akeneo\Connectivity\Connection\Application\Audit\Command\UpdateDataSourceProductEventCountHandler(new \Akeneo\Connectivity\Connection\Infrastructure\Audit\Persistence\DbalExtractConnectionsProductEventCountQuery($a, 'Akeneo\\Pim\\Enrichment\\Component\\Product\\Model\\Product'), new \Akeneo\Connectivity\Connection\Infrastructure\Audit\Persistence\DbalBulkInsertEventCountsQuery($a)), new \Akeneo\Connectivity\Connection\Infrastructure\Audit\Persistence\DbalSelectHourlyIntervalsToRefreshQuery($a), new \Akeneo\Connectivity\Connection\Infrastructure\Audit\Persistence\DbalPurgeAuditProductQuery($a), $b), $b);

        $instance->setName('akeneo:connectivity-audit:update-data');

        return $instance;
    }
}
