<?php

namespace ContainerRWxfJwK;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/*
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getEvaluateProductsService extends KernelProdContainer
{
    /*
     * Gets the private 'Akeneo\Pim\Automation\DataQualityInsights\Application\ProductEvaluation\EvaluateProducts' shared service.
     *
     * @return \Akeneo\Pim\Automation\DataQualityInsights\Application\ProductEvaluation\EvaluateProducts
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Automation/DataQualityInsights/back/Application/ProductEvaluation/EvaluateProducts.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Automation/DataQualityInsights/back/Application/ProductEvaluation/EvaluatePendingCriteria.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Automation/DataQualityInsights/back/Domain/Query/ProductEvaluation/GetPendingCriteriaEvaluationsByEntityIdsQueryInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Automation/DataQualityInsights/back/Infrastructure/Persistence/Query/ProductEvaluation/GetPendingCriteriaEvaluationsByEntityIdsQuery.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Automation/DataQualityInsights/back/Domain/Query/ProductEnrichment/GetEvaluableProductValuesQueryInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Automation/DataQualityInsights/back/Infrastructure/Persistence/Query/ProductEnrichment/GetEvaluableProductValuesQuery.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Automation/DataQualityInsights/back/Domain/Query/ProductEnrichment/GetProductRawValuesQueryInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Automation/DataQualityInsights/back/Infrastructure/Persistence/Query/ProductEnrichment/GetProductRawValuesQuery.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Automation/DataQualityInsights/back/Domain/Query/ProductEvaluation/GetEvaluableAttributesByProductQueryInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Automation/DataQualityInsights/back/Infrastructure/Persistence/Query/ProductEvaluation/GetEvaluableAttributesByProductQuery.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Automation/DataQualityInsights/back/Application/ProductEntityIdFactoryInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Automation/DataQualityInsights/back/Application/ProductUuidFactory.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Automation/DataQualityInsights/back/Application/ProductEvaluation/SynchronousCriterionEvaluationsFilterInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Automation/DataQualityInsights/back/Application/ProductEvaluation/SynchronousCriterionEvaluationsFilter.php';

        $a = ($container->privates['akeneo.pim.automation.data_quality_insights.repository.product_criterion_evaluation'] ?? $container->load('getAkeneo_Pim_Automation_DataQualityInsights_Repository_ProductCriterionEvaluationService'));

        if (isset($container->privates['Akeneo\\Pim\\Automation\\DataQualityInsights\\Application\\ProductEvaluation\\EvaluateProducts'])) {
            return $container->privates['Akeneo\\Pim\\Automation\\DataQualityInsights\\Application\\ProductEvaluation\\EvaluateProducts'];
        }
        $b = ($container->privates['akeneo.pim.automation.data_quality_insights.product_criteria_evaluation_registry'] ?? $container->load('getAkeneo_Pim_Automation_DataQualityInsights_ProductCriteriaEvaluationRegistryService'));

        if (isset($container->privates['Akeneo\\Pim\\Automation\\DataQualityInsights\\Application\\ProductEvaluation\\EvaluateProducts'])) {
            return $container->privates['Akeneo\\Pim\\Automation\\DataQualityInsights\\Application\\ProductEvaluation\\EvaluateProducts'];
        }
        $c = ($container->services['doctrine.dbal.default_connection'] ?? $container->getDoctrine_Dbal_DefaultConnectionService());

        if (isset($container->privates['Akeneo\\Pim\\Automation\\DataQualityInsights\\Application\\ProductEvaluation\\EvaluateProducts'])) {
            return $container->privates['Akeneo\\Pim\\Automation\\DataQualityInsights\\Application\\ProductEvaluation\\EvaluateProducts'];
        }
        $d = ($container->privates['Akeneo\\Pim\\Automation\\DataQualityInsights\\Infrastructure\\Persistence\\Query\\Structure\\CachedGetLocalesByChannelQuery'] ?? $container->load('getCachedGetLocalesByChannelQueryService'));

        if (isset($container->privates['Akeneo\\Pim\\Automation\\DataQualityInsights\\Application\\ProductEvaluation\\EvaluateProducts'])) {
            return $container->privates['Akeneo\\Pim\\Automation\\DataQualityInsights\\Application\\ProductEvaluation\\EvaluateProducts'];
        }
        $e = ($container->privates['Akeneo\\Pim\\Automation\\DataQualityInsights\\Application\\Consolidation\\ConsolidateProductScores'] ?? $container->load('getConsolidateProductScoresService'));

        if (isset($container->privates['Akeneo\\Pim\\Automation\\DataQualityInsights\\Application\\ProductEvaluation\\EvaluateProducts'])) {
            return $container->privates['Akeneo\\Pim\\Automation\\DataQualityInsights\\Application\\ProductEvaluation\\EvaluateProducts'];
        }
        $f = ($container->services['event_dispatcher'] ?? $container->getEventDispatcherService());

        if (isset($container->privates['Akeneo\\Pim\\Automation\\DataQualityInsights\\Application\\ProductEvaluation\\EvaluateProducts'])) {
            return $container->privates['Akeneo\\Pim\\Automation\\DataQualityInsights\\Application\\ProductEvaluation\\EvaluateProducts'];
        }
        $g = ($container->privates['Akeneo\\Pim\\Automation\\DataQualityInsights\\Application\\ProductUuidFactory'] ?? ($container->privates['Akeneo\\Pim\\Automation\\DataQualityInsights\\Application\\ProductUuidFactory'] = new \Akeneo\Pim\Automation\DataQualityInsights\Application\ProductUuidFactory()));

        return $container->privates['Akeneo\\Pim\\Automation\\DataQualityInsights\\Application\\ProductEvaluation\\EvaluateProducts'] = new \Akeneo\Pim\Automation\DataQualityInsights\Application\ProductEvaluation\EvaluateProducts(new \Akeneo\Pim\Automation\DataQualityInsights\Application\ProductEvaluation\EvaluatePendingCriteria($a, $b, ($container->privates['Akeneo\\Pim\\Automation\\DataQualityInsights\\Application\\ProductEvaluation\\CriteriaApplicabilityRegistry'] ?? $container->load('getCriteriaApplicabilityRegistryService')), new \Akeneo\Pim\Automation\DataQualityInsights\Infrastructure\Persistence\Query\ProductEvaluation\GetPendingCriteriaEvaluationsByEntityIdsQuery($c, 'pim_data_quality_insights_product_criteria_evaluation', $g), new \Akeneo\Pim\Automation\DataQualityInsights\Infrastructure\Persistence\Query\ProductEnrichment\GetEvaluableProductValuesQuery(new \Akeneo\Pim\Automation\DataQualityInsights\Infrastructure\Persistence\Query\ProductEnrichment\GetProductRawValuesQuery($c), new \Akeneo\Pim\Automation\DataQualityInsights\Infrastructure\Persistence\Query\ProductEvaluation\GetEvaluableAttributesByProductQuery($c), $d), ($container->privates['akeneo.pim.automation.data_quality_insights.synchronous_criterion_evaluations_filter'] ?? ($container->privates['akeneo.pim.automation.data_quality_insights.synchronous_criterion_evaluations_filter'] = new \Akeneo\Pim\Automation\DataQualityInsights\Application\ProductEvaluation\SynchronousCriterionEvaluationsFilter())), ($container->privates['monolog.logger'] ?? $container->load('getMonolog_LoggerService')), $g), $e, $f);
    }
}
