<?php

namespace ContainerRWxfJwK;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/*
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getGenerateAsymmetricKeysHandlerService extends KernelProdContainer
{
    /*
     * Gets the private 'Akeneo\Connectivity\Connection\Application\Apps\Command\GenerateAsymmetricKeysHandler' shared service.
     *
     * @return \Akeneo\Connectivity\Connection\Application\Apps\Command\GenerateAsymmetricKeysHandler
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Connectivity/Connection/back/Application/Apps/Command/GenerateAsymmetricKeysHandler.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Connectivity/Connection/back/Domain/Apps/Persistence/SaveAsymmetricKeysQueryInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Connectivity/Connection/back/Infrastructure/Apps/Persistence/SaveAsymmetricKeysQuery.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Connectivity/Connection/back/Domain/Apps/AsymmetricKeysGeneratorInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Connectivity/Connection/back/Infrastructure/Apps/AsymmetricKeysGenerator.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Connectivity/Connection/back/Domain/ClockInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Connectivity/Connection/back/Infrastructure/Service/Clock/SystemClock.php';

        $a = ($container->services['doctrine.dbal.default_connection'] ?? $container->getDoctrine_Dbal_DefaultConnectionService());

        if (isset($container->privates['Akeneo\\Connectivity\\Connection\\Application\\Apps\\Command\\GenerateAsymmetricKeysHandler'])) {
            return $container->privates['Akeneo\\Connectivity\\Connection\\Application\\Apps\\Command\\GenerateAsymmetricKeysHandler'];
        }

        return $container->privates['Akeneo\\Connectivity\\Connection\\Application\\Apps\\Command\\GenerateAsymmetricKeysHandler'] = new \Akeneo\Connectivity\Connection\Application\Apps\Command\GenerateAsymmetricKeysHandler(($container->services['Akeneo\\Connectivity\\Connection\\Infrastructure\\Apps\\AsymmetricKeysGenerator'] ?? ($container->services['Akeneo\\Connectivity\\Connection\\Infrastructure\\Apps\\AsymmetricKeysGenerator'] = new \Akeneo\Connectivity\Connection\Infrastructure\Apps\AsymmetricKeysGenerator((\dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/config/openssl.cnf')))), new \Akeneo\Connectivity\Connection\Infrastructure\Apps\Persistence\SaveAsymmetricKeysQuery($a, ($container->privates['Akeneo\\Connectivity\\Connection\\Infrastructure\\Service\\Clock\\SystemClock'] ?? ($container->privates['Akeneo\\Connectivity\\Connection\\Infrastructure\\Service\\Clock\\SystemClock'] = new \Akeneo\Connectivity\Connection\Infrastructure\Service\Clock\SystemClock()))));
    }
}
