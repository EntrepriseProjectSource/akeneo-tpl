<?php

namespace ContainerRWxfJwK;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/*
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getPimCatalog_Filter_ChainedService extends KernelProdContainer
{
    /*
     * Gets the private 'pim_catalog.filter.chained' shared service.
     *
     * @return \Akeneo\Pim\Enrichment\Bundle\Filter\ChainedFilter
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Enrichment/Bundle/Filter/CollectionFilterInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Enrichment/Bundle/Filter/ObjectFilterInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Enrichment/Bundle/Filter/ChainedFilter.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Enrichment/Bundle/Filter/ProductValueLocaleFilter.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Enrichment/Bundle/Filter/ProductValueChannelFilter.php';

        $container->privates['pim_catalog.filter.chained'] = $instance = new \Akeneo\Pim\Enrichment\Bundle\Filter\ChainedFilter();

        $a = new \Akeneo\Pim\Enrichment\Bundle\Filter\ProductValueLocaleFilter();
        $b = new \Akeneo\Pim\Enrichment\Bundle\Filter\ProductValueChannelFilter();

        $instance->addCollectionFilter($a, 'pim.transform.product_value.flat');
        $instance->addCollectionFilter($a, 'pim.transform.product_value.structured');
        $instance->addCollectionFilter($a, 'pim.external_api.product.view');
        $instance->addCollectionFilter($b, 'pim.transform.product_value.flat');
        $instance->addCollectionFilter($b, 'pim.transform.product_value.structured');
        $instance->addCollectionFilter($b, 'pim.external_api.product.view');

        return $instance;
    }
}
