<?php

namespace ContainerRWxfJwK;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/*
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getAkeneo_Platform_ImportExport_PurgeJobExecutionService extends KernelProdContainer
{
    /*
     * Gets the private 'akeneo.platform.import_export.purge_job_execution' shared service.
     *
     * @return \Akeneo\Platform\Bundle\ImportExportBundle\Purge\PurgeJobExecution
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Platform/Bundle/ImportExportBundle/Purge/PurgeJobExecution.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Tool/Bundle/BatchBundle/Persistence/Sql/DeleteJobExecution.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Platform/Bundle/ImportExportBundle/Persistence/Filesystem/DeleteOrphanJobExecutionDirectories.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Tool/Bundle/BatchBundle/Storage/DeleteJobExecutionLogs.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Tool/Bundle/BatchBundle/Persistence/Sql/GetJobExecutionIds.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/filesystem/Filesystem.php';

        $a = ($container->services['doctrine.dbal.default_connection'] ?? $container->getDoctrine_Dbal_DefaultConnectionService());

        if (isset($container->privates['akeneo.platform.import_export.purge_job_execution'])) {
            return $container->privates['akeneo.platform.import_export.purge_job_execution'];
        }

        return $container->privates['akeneo.platform.import_export.purge_job_execution'] = new \Akeneo\Platform\Bundle\ImportExportBundle\Purge\PurgeJobExecution(new \Akeneo\Tool\Bundle\BatchBundle\Persistence\Sql\DeleteJobExecution($a), new \Akeneo\Platform\Bundle\ImportExportBundle\Persistence\Filesystem\DeleteOrphanJobExecutionDirectories(($container->services['oneup_flysystem.archivist_filesystem'] ?? $container->load('getOneupFlysystem_ArchivistFilesystemService')), $a), new \Akeneo\Tool\Bundle\BatchBundle\Storage\DeleteJobExecutionLogs(new \Akeneo\Tool\Bundle\BatchBundle\Persistence\Sql\GetJobExecutionIds($a), ($container->services['.container.private.filesystem'] ?? ($container->services['.container.private.filesystem'] = new \Symfony\Component\Filesystem\Filesystem())), (\dirname(__DIR__, 3).'/logs/batch')));
    }
}
