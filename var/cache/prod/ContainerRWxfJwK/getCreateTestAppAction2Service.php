<?php

namespace ContainerRWxfJwK;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/*
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getCreateTestAppAction2Service extends KernelProdContainer
{
    /*
     * Gets the public 'Akeneo\Connectivity\Connection\Infrastructure\Marketplace\TestApps\Controller\Internal\CreateTestAppAction' shared service.
     *
     * @return \Akeneo\Connectivity\Connection\Infrastructure\Marketplace\TestApps\Controller\Internal\CreateTestAppAction
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Connectivity/Connection/back/Infrastructure/Marketplace/TestApps/Controller/Internal/CreateTestAppAction.php';

        return $container->services['Akeneo\\Connectivity\\Connection\\Infrastructure\\Marketplace\\TestApps\\Controller\\Internal\\CreateTestAppAction'] = new \Akeneo\Connectivity\Connection\Infrastructure\Marketplace\TestApps\Controller\Internal\CreateTestAppAction(($container->services['akeneo_connectivity.connection.app_developer_mode.feature'] ?? ($container->services['akeneo_connectivity.connection.app_developer_mode.feature'] = new \Akeneo\Platform\Bundle\FeatureFlagBundle\Configuration\EnvVarFeatureFlag($container->getEnv('bool:FLAG_APP_DEVELOPER_MODE_ENABLED')))), ($container->services['akeneo_connectivity.connection.marketplace_activate.feature'] ?? ($container->services['akeneo_connectivity.connection.marketplace_activate.feature'] = new \Akeneo\Platform\Bundle\FeatureFlagBundle\Configuration\EnvVarFeatureFlag($container->getEnv('bool:FLAG_MARKETPLACE_ACTIVATE_ENABLED')))), ($container->services['.container.private.validator'] ?? $container->load('get_Container_Private_ValidatorService')), ($container->services['.container.private.security.token_storage'] ?? $container->get_Container_Private_Security_TokenStorageService()), ($container->privates['Akeneo\\Connectivity\\Connection\\Application\\Marketplace\\TestApps\\Command\\CreateTestAppCommandHandler'] ?? $container->load('getCreateTestAppCommandHandlerService')), ($container->privates['Akeneo\\Connectivity\\Connection\\Infrastructure\\Marketplace\\TestApps\\Persistence\\GetTestAppSecretQuery'] ?? $container->load('getGetTestAppSecretQueryService')), ($container->privates['oro_security.security_facade'] ?? $container->getOroSecurity_SecurityFacadeService()));
    }
}
