<?php

namespace ContainerRWxfJwK;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/*
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getAkeneoMeasurement_Validation_CreateMeasurementFamily_CountService extends KernelProdContainer
{
    /*
     * Gets the private 'akeneo_measurement.validation.create_measurement_family.count' shared service.
     *
     * @return \Akeneo\Tool\Bundle\MeasureBundle\Validation\CreateMeasurementFamily\CountValidator
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/validator/ConstraintValidatorInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/validator/ConstraintValidator.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Tool/Bundle/MeasureBundle/Validation/CreateMeasurementFamily/CountValidator.php';

        $a = ($container->privates['akeneo_measure.persistence.measurement_family_repository'] ?? $container->load('getAkeneoMeasure_Persistence_MeasurementFamilyRepositoryService'));

        if (isset($container->privates['akeneo_measurement.validation.create_measurement_family.count'])) {
            return $container->privates['akeneo_measurement.validation.create_measurement_family.count'];
        }

        return $container->privates['akeneo_measurement.validation.create_measurement_family.count'] = new \Akeneo\Tool\Bundle\MeasureBundle\Validation\CreateMeasurementFamily\CountValidator($a, 300);
    }
}
