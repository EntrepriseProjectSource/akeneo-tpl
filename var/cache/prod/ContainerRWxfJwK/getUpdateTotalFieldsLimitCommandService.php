<?php

namespace ContainerRWxfJwK;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/*
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getUpdateTotalFieldsLimitCommandService extends KernelProdContainer
{
    /*
     * Gets the private 'Akeneo\Tool\Bundle\ElasticsearchBundle\Command\UpdateTotalFieldsLimitCommand' shared service.
     *
     * @return \Akeneo\Tool\Bundle\ElasticsearchBundle\Command\UpdateTotalFieldsLimitCommand
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/console/Command/Command.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Tool/Bundle/ElasticsearchBundle/Command/UpdateTotalFieldsLimitCommand.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Tool/Bundle/ElasticsearchBundle/GetTotalFieldsLimit.php';

        $container->privates['Akeneo\\Tool\\Bundle\\ElasticsearchBundle\\Command\\UpdateTotalFieldsLimitCommand'] = $instance = new \Akeneo\Tool\Bundle\ElasticsearchBundle\Command\UpdateTotalFieldsLimitCommand(($container->privates['akeneo_elasticsearch.registry.clients'] ?? $container->load('getAkeneoElasticsearch_Registry_ClientsService')), new \Akeneo\Tool\Bundle\ElasticsearchBundle\GetTotalFieldsLimit($container->getEnv('int:APP_ELASTICSEARCH_TOTAL_FIELDS_LIMIT')), $container->getEnv('APP_INDEX_HOSTS'), $container->getParameter('index_list_changed_total_field_limit'));

        $instance->setName('akeneo:elasticsearch:update-total-fields-limit');

        return $instance;
    }
}
