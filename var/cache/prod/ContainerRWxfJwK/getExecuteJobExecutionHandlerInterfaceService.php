<?php

namespace ContainerRWxfJwK;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/*
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getExecuteJobExecutionHandlerInterfaceService extends KernelProdContainer
{
    /*
     * Gets the private 'Akeneo\Tool\Bundle\BatchBundle\JobExecution\ExecuteJobExecutionHandlerInterface' shared service.
     *
     * @return \Akeneo\Tool\Bundle\BatchBundle\JobExecution\ExecuteJobExecutionHandler
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Tool/Bundle/BatchBundle/JobExecution/ExecuteJobExecutionHandlerInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Tool/Bundle/BatchBundle/JobExecution/ExecuteJobExecutionHandler.php';

        $a = ($container->privates['akeneo_batch.job_repository'] ?? $container->load('getAkeneoBatch_JobRepositoryService'));

        if (isset($container->privates['Akeneo\\Tool\\Bundle\\BatchBundle\\JobExecution\\ExecuteJobExecutionHandlerInterface'])) {
            return $container->privates['Akeneo\\Tool\\Bundle\\BatchBundle\\JobExecution\\ExecuteJobExecutionHandlerInterface'];
        }
        $b = ($container->services['akeneo_batch.job.job_registry'] ?? $container->load('getAkeneoBatch_Job_JobRegistryService'));

        if (isset($container->privates['Akeneo\\Tool\\Bundle\\BatchBundle\\JobExecution\\ExecuteJobExecutionHandlerInterface'])) {
            return $container->privates['Akeneo\\Tool\\Bundle\\BatchBundle\\JobExecution\\ExecuteJobExecutionHandlerInterface'];
        }

        return $container->privates['Akeneo\\Tool\\Bundle\\BatchBundle\\JobExecution\\ExecuteJobExecutionHandlerInterface'] = new \Akeneo\Tool\Bundle\BatchBundle\JobExecution\ExecuteJobExecutionHandler(($container->privates['akeneo_batch.logger.batch_log_handler'] ?? $container->load('getAkeneoBatch_Logger_BatchLogHandlerService')), $a, $b);
    }
}
