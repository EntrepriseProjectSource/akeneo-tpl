<?php

namespace ContainerRWxfJwK;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/*
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getIsConnectionsNumberLimitReachedActionService extends KernelProdContainer
{
    /*
     * Gets the public 'Akeneo\Connectivity\Connection\Infrastructure\Settings\Controller\Internal\IsConnectionsNumberLimitReachedAction' shared service.
     *
     * @return \Akeneo\Connectivity\Connection\Infrastructure\Settings\Controller\Internal\IsConnectionsNumberLimitReachedAction
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Connectivity/Connection/back/Infrastructure/Settings/Controller/Internal/IsConnectionsNumberLimitReachedAction.php';

        return $container->services['Akeneo\\Connectivity\\Connection\\Infrastructure\\Settings\\Controller\\Internal\\IsConnectionsNumberLimitReachedAction'] = new \Akeneo\Connectivity\Connection\Infrastructure\Settings\Controller\Internal\IsConnectionsNumberLimitReachedAction(($container->privates['Akeneo\\Connectivity\\Connection\\Infrastructure\\Settings\\Persistence\\IsConnectionsNumberLimitReachedQuery'] ?? $container->load('getIsConnectionsNumberLimitReachedQueryService')));
    }
}
