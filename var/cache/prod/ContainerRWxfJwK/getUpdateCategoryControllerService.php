<?php

namespace ContainerRWxfJwK;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/*
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getUpdateCategoryControllerService extends KernelProdContainer
{
    /*
     * Gets the public 'Akeneo\Category\Infrastructure\Controller\InternalApi\UpdateCategoryController' shared service.
     *
     * @return \Akeneo\Category\Infrastructure\Controller\InternalApi\UpdateCategoryController
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Category/back/Infrastructure/Controller/InternalApi/UpdateCategoryController.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/messenger/MessageBusInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Category/back/Api/Command/CommandMessageBus.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Category/back/Application/Converter/ConverterInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Category/back/Infrastructure/Converter/InternalApi/InternalApiToStd.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Category/back/Application/Converter/Checker/RequirementChecker.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Category/back/Application/Converter/Checker/InternalApiRequirementChecker.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Category/back/Application/Converter/Checker/FieldsRequirementChecker.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Category/back/Application/Converter/Checker/AttributeApiRequirementChecker.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Category/back/Application/Filter/CategoryEditAclFilter.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Category/back/Application/Converter/StandardFormatToUserIntentsInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Category/back/Application/Converter/StandardFormatToUserIntents.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Category/back/Domain/UserIntent/UserIntentFactoryRegistry.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Category/back/Application/Filter/CategoryEditUserIntentFilter.php';

        $a = ($container->privates['oro_security.security_facade'] ?? $container->getOroSecurity_SecurityFacadeService());

        return $container->services['Akeneo\\Category\\Infrastructure\\Controller\\InternalApi\\UpdateCategoryController'] = new \Akeneo\Category\Infrastructure\Controller\InternalApi\UpdateCategoryController(new \Akeneo\Category\Api\Command\CommandMessageBus(new RewindableGenerator(function () use ($container) {
            yield 'Akeneo\\Category\\Api\\Command\\UpsertCategoryCommand' => ($container->privates['Akeneo\\Category\\Application\\UpsertCategoryCommandHandler'] ?? $container->load('getUpsertCategoryCommandHandlerService'));
        }, 1)), $a, new \Akeneo\Category\Infrastructure\Converter\InternalApi\InternalApiToStd(new \Akeneo\Category\Application\Converter\Checker\InternalApiRequirementChecker(new \Akeneo\Category\Application\Converter\Checker\FieldsRequirementChecker(), new \Akeneo\Category\Application\Converter\Checker\AttributeApiRequirementChecker())), new \Akeneo\Category\Application\Filter\CategoryEditAclFilter($a), new \Akeneo\Category\Application\Converter\StandardFormatToUserIntents(new \Akeneo\Category\Domain\UserIntent\UserIntentFactoryRegistry(new RewindableGenerator(function () use ($container) {
            yield 0 => ($container->privates['Akeneo\\Category\\Domain\\UserIntent\\Factory\\LabelUserIntentFactory'] ?? ($container->privates['Akeneo\\Category\\Domain\\UserIntent\\Factory\\LabelUserIntentFactory'] = new \Akeneo\Category\Domain\UserIntent\Factory\LabelUserIntentFactory()));
            yield 1 => ($container->privates['Akeneo\\Category\\Domain\\UserIntent\\Factory\\ValueUserIntentFactory'] ?? $container->load('getValueUserIntentFactoryService'));
        }, 2), [0 => 'identifier', 1 => 'code', 2 => 'created', 3 => 'updated'])), new \Akeneo\Category\Application\Filter\CategoryEditUserIntentFilter(), ($container->privates['Akeneo\\Category\\Domain\\Query\\GetCategoryInterface'] ?? $container->load('getGetCategoryInterfaceService')));
    }
}
