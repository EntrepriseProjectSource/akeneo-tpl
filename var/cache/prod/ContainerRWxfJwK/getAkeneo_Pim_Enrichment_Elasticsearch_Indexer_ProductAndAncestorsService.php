<?php

namespace ContainerRWxfJwK;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/*
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getAkeneo_Pim_Enrichment_Elasticsearch_Indexer_ProductAndAncestorsService extends KernelProdContainer
{
    /*
     * Gets the private 'akeneo.pim.enrichment.elasticsearch.indexer.product_and_ancestors' shared service.
     *
     * @return \Akeneo\Pim\Enrichment\Bundle\Elasticsearch\Indexer\ProductAndAncestorsIndexer
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Enrichment/Bundle/Elasticsearch/Indexer/ProductAndAncestorsIndexer.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Enrichment/Bundle/Storage/Sql/Product/GetAncestorProductModelCodes.php';

        $a = ($container->services['pim_catalog.elasticsearch.indexer.product'] ?? $container->load('getPimCatalog_Elasticsearch_Indexer_ProductService'));

        if (isset($container->privates['akeneo.pim.enrichment.elasticsearch.indexer.product_and_ancestors'])) {
            return $container->privates['akeneo.pim.enrichment.elasticsearch.indexer.product_and_ancestors'];
        }
        $b = ($container->services['pim_catalog.elasticsearch.indexer.product_model'] ?? $container->load('getPimCatalog_Elasticsearch_Indexer_ProductModelService'));

        if (isset($container->privates['akeneo.pim.enrichment.elasticsearch.indexer.product_and_ancestors'])) {
            return $container->privates['akeneo.pim.enrichment.elasticsearch.indexer.product_and_ancestors'];
        }
        $c = ($container->services['doctrine.dbal.default_connection'] ?? $container->getDoctrine_Dbal_DefaultConnectionService());

        if (isset($container->privates['akeneo.pim.enrichment.elasticsearch.indexer.product_and_ancestors'])) {
            return $container->privates['akeneo.pim.enrichment.elasticsearch.indexer.product_and_ancestors'];
        }

        return $container->privates['akeneo.pim.enrichment.elasticsearch.indexer.product_and_ancestors'] = new \Akeneo\Pim\Enrichment\Bundle\Elasticsearch\Indexer\ProductAndAncestorsIndexer($a, $b, new \Akeneo\Pim\Enrichment\Bundle\Storage\Sql\Product\GetAncestorProductModelCodes($c));
    }
}
