<?php

namespace ContainerRWxfJwK;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/*
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getPimUser_Controller_ResetService extends KernelProdContainer
{
    /*
     * Gets the public 'pim_user.controller.reset' shared service.
     *
     * @return \Akeneo\UserManagement\Bundle\Controller\ResetController
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/framework-bundle/Controller/AbstractController.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/UserManagement/Bundle/Controller/ResetController.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/UserManagement/Bundle/Form/Handler/ResetHandler.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/UserManagement/Bundle/Notification/MailResetNotifier.php';

        $a = ($container->privates['pim_user.manager'] ?? $container->load('getPimUser_ManagerService'));
        $b = $container->load('getPimUser_Form_ResetService');

        $container->services['pim_user.controller.reset'] = $instance = new \Akeneo\UserManagement\Bundle\Controller\ResetController($a, ($container->services['.container.private.session'] ?? $container->load('get_Container_Private_SessionService')), new \Akeneo\UserManagement\Bundle\Form\Handler\ResetHandler($b, ($container->services['request_stack'] ?? ($container->services['request_stack'] = new \Symfony\Component\HttpFoundation\RequestStack())), $a), ($container->services['.container.private.security.token_storage'] ?? $container->get_Container_Private_Security_TokenStorageService()), $b, new \Akeneo\UserManagement\Bundle\Notification\MailResetNotifier(($container->privates['monolog.logger'] ?? $container->load('getMonolog_LoggerService')), ($container->services['.container.private.twig'] ?? $container->load('get_Container_Private_TwigService')), ($container->privates['pim_notification.email.email_notifier'] ?? $container->load('getPimNotification_Email_EmailNotifierService'))));

        $instance->setContainer($container);

        return $instance;
    }
}
