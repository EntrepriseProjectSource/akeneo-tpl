<?php

namespace ContainerRWxfJwK;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/*
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getPimAnalytics_DataCollector_ChainedService extends KernelProdContainer
{
    /*
     * Gets the private 'pim_analytics.data_collector.chained' shared service.
     *
     * @return \Akeneo\Tool\Component\Analytics\ChainedDataCollector
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Tool/Component/Analytics/ChainedDataCollector.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Tool/Component/Analytics/DataCollectorInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Platform/Bundle/AnalyticsBundle/DataCollector/RequestDataCollector.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Platform/Bundle/AnalyticsBundle/DataCollector/TokenStorageDataCollector.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Platform/Bundle/AnalyticsBundle/DataCollector/VersionDataCollector.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Platform/Bundle/AnalyticsBundle/DataCollector/DBDataCollector.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Platform/Component/CatalogVolumeMonitoring/Volume/Query/CountQuery.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Platform/Bundle/CatalogVolumeMonitoringBundle/Persistence/Query/Sql/CountUsers.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Platform/Component/CatalogVolumeMonitoring/Volume/Query/AverageMaxQuery.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Platform/Bundle/CatalogVolumeMonitoringBundle/Persistence/Query/Sql/AverageMaxCategoriesInOneCategory.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Platform/Bundle/CatalogVolumeMonitoringBundle/Persistence/Query/Sql/AverageMaxCategoryLevels.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Platform/Bundle/CatalogVolumeMonitoringBundle/Persistence/Query/Sql/AverageMaxProductValuesPerFamily.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Tool/Component/Analytics/EmailDomainsQuery.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Platform/Bundle/AnalyticsBundle/Query/Sql/EmailDomains.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Tool/Component/Analytics/ApiConnectionCountQuery.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Platform/Bundle/AnalyticsBundle/Query/Sql/ApiConnectionCount.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Tool/Component/Analytics/MediaCountQuery.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Platform/Bundle/AnalyticsBundle/Query/ElasticsearchAndSql/MediaCount.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Tool/Component/Analytics/IsDemoCatalogQuery.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Platform/Bundle/AnalyticsBundle/Query/Sql/IsDemoCatalog.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Tool/Component/Analytics/ActiveEventSubscriptionCountQuery.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Platform/Bundle/AnalyticsBundle/Query/Sql/ActiveEventSubscriptionCount.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Tool/Component/Analytics/GetConnectedAppsIdentifiersQueryInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Platform/Bundle/AnalyticsBundle/Query/Sql/GetConnectedAppsIdentifiersQuery.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Platform/Bundle/AnalyticsBundle/DataCollector/AttributeDataCollector.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Platform/Bundle/CatalogVolumeMonitoringBundle/Persistence/Query/Sql/CountUseableAsGridFilterAttributes.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Platform/Bundle/CatalogVolumeMonitoringBundle/Persistence/Query/Sql/AverageMaxLocalizableAttributesPerFamily.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Platform/Bundle/CatalogVolumeMonitoringBundle/Persistence/Query/Sql/AverageMaxScopableAttributesPerFamily.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Platform/Bundle/CatalogVolumeMonitoringBundle/Persistence/Query/Sql/AverageMaxLocalizableAndScopableAttributesPerFamily.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Platform/Bundle/AnalyticsBundle/DataCollector/OSDataCollector.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Platform/Bundle/AnalyticsBundle/DataCollector/BundlesDataCollector.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Platform/Bundle/AnalyticsBundle/DataCollector/StorageDataCollector.php';

        $container->privates['pim_analytics.data_collector.chained'] = $instance = new \Akeneo\Tool\Component\Analytics\ChainedDataCollector();

        $a = ($container->services['request_stack'] ?? ($container->services['request_stack'] = new \Symfony\Component\HttpFoundation\RequestStack()));
        $b = new \Akeneo\Platform\Bundle\AnalyticsBundle\DataCollector\VersionDataCollector($a, ($container->services['pim_catalog.version_provider'] ?? $container->load('getPimCatalog_VersionProviderService')), ($container->privates['pim_installer.install_status_manager'] ?? $container->load('getPimInstaller_InstallStatusManagerService')), 'prod');
        $c = ($container->privates['pim_volume_monitoring.persistence.query.count_attributes'] ?? $container->load('getPimVolumeMonitoring_Persistence_Query_CountAttributesService'));
        $d = ($container->services['doctrine.dbal.default_connection'] ?? $container->getDoctrine_Dbal_DefaultConnectionService());

        $e = new \Akeneo\Platform\Bundle\AnalyticsBundle\DataCollector\DBDataCollector(($container->privates['pim_volume_monitoring.persistence.query.count_channels'] ?? $container->load('getPimVolumeMonitoring_Persistence_Query_CountChannelsService')), ($container->privates['pim_volume_monitoring.persistence.query.count_products'] ?? $container->load('getPimVolumeMonitoring_Persistence_Query_CountProductsService')), ($container->privates['pim_volume_monitoring.persistence.query.count_locales'] ?? $container->load('getPimVolumeMonitoring_Persistence_Query_CountLocalesService')), ($container->privates['pim_volume_monitoring.persistence.query.count_families'] ?? $container->load('getPimVolumeMonitoring_Persistence_Query_CountFamiliesService')), $c, new \Akeneo\Platform\Bundle\CatalogVolumeMonitoringBundle\Persistence\Query\Sql\CountUsers($d), ($container->privates['pim_volume_monitoring.persistence.query.count_product_models'] ?? $container->load('getPimVolumeMonitoring_Persistence_Query_CountProductModelsService')), ($container->privates['pim_volume_monitoring.persistence.query.count_variant_products'] ?? $container->load('getPimVolumeMonitoring_Persistence_Query_CountVariantProductsService')), ($container->privates['pim_volume_monitoring.persistence.query.count_categories'] ?? $container->load('getPimVolumeMonitoring_Persistence_Query_CountCategoriesService')), ($container->privates['pim_volume_monitoring.persistence.query.count_category_trees'] ?? $container->load('getPimVolumeMonitoring_Persistence_Query_CountCategoryTreesService')), new \Akeneo\Platform\Bundle\CatalogVolumeMonitoringBundle\Persistence\Query\Sql\AverageMaxCategoriesInOneCategory($d), new \Akeneo\Platform\Bundle\CatalogVolumeMonitoringBundle\Persistence\Query\Sql\AverageMaxCategoryLevels($d), ($container->privates['pim_volume_monitoring.persistence.query.aggregated_count_product_and_product_model_values'] ?? $container->load('getPimVolumeMonitoring_Persistence_Query_AggregatedCountProductAndProductModelValuesService')), ($container->privates['pim_volume_monitoring.persistence.query.aggregated_average_max_product_and_product_model_values'] ?? $container->load('getPimVolumeMonitoring_Persistence_Query_AggregatedAverageMaxProductAndProductModelValuesService')), new \Akeneo\Platform\Bundle\CatalogVolumeMonitoringBundle\Persistence\Query\Sql\AverageMaxProductValuesPerFamily($d), new \Akeneo\Platform\Bundle\AnalyticsBundle\Query\Sql\EmailDomains($d), new \Akeneo\Platform\Bundle\AnalyticsBundle\Query\Sql\ApiConnectionCount($d), new \Akeneo\Platform\Bundle\AnalyticsBundle\Query\ElasticsearchAndSql\MediaCount($d, ($container->services['akeneo_elasticsearch.client.product_and_product_model'] ?? $container->load('getAkeneoElasticsearch_Client_ProductAndProductModelService'))), new \Akeneo\Platform\Bundle\AnalyticsBundle\Query\Sql\IsDemoCatalog($d), new \Akeneo\Platform\Bundle\AnalyticsBundle\Query\Sql\ActiveEventSubscriptionCount($d), new \Akeneo\Platform\Bundle\AnalyticsBundle\Query\Sql\GetConnectedAppsIdentifiersQuery($d));
        $f = new \Akeneo\Platform\Bundle\AnalyticsBundle\DataCollector\OSDataCollector();

        $instance->addCollector(new \Akeneo\Platform\Bundle\AnalyticsBundle\DataCollector\RequestDataCollector($a), 'update_checker');
        $instance->addCollector(new \Akeneo\Platform\Bundle\AnalyticsBundle\DataCollector\TokenStorageDataCollector(($container->services['.container.private.security.token_storage'] ?? $container->get_Container_Private_Security_TokenStorageService())), 'update_checker');
        $instance->addCollector($b, 'update_checker');
        $instance->addCollector($b, 'system_info_report');
        $instance->addCollector($e, 'update_checker');
        $instance->addCollector($e, 'system_info_report');
        $instance->addCollector(new \Akeneo\Platform\Bundle\AnalyticsBundle\DataCollector\AttributeDataCollector($c, ($container->privates['pim_volume_monitoring.persistence.query.count_localizable_attributes'] ?? $container->load('getPimVolumeMonitoring_Persistence_Query_CountLocalizableAttributesService')), ($container->privates['pim_volume_monitoring.persistence.query.count_scopable_attributes'] ?? $container->load('getPimVolumeMonitoring_Persistence_Query_CountScopableAttributesService')), ($container->privates['pim_volume_monitoring.persistence.query.count_localizable_and_scopable_attributes'] ?? $container->load('getPimVolumeMonitoring_Persistence_Query_CountLocalizableAndScopableAttributesService')), new \Akeneo\Platform\Bundle\CatalogVolumeMonitoringBundle\Persistence\Query\Sql\CountUseableAsGridFilterAttributes($d), new \Akeneo\Platform\Bundle\CatalogVolumeMonitoringBundle\Persistence\Query\Sql\AverageMaxLocalizableAttributesPerFamily($d), new \Akeneo\Platform\Bundle\CatalogVolumeMonitoringBundle\Persistence\Query\Sql\AverageMaxScopableAttributesPerFamily($d), new \Akeneo\Platform\Bundle\CatalogVolumeMonitoringBundle\Persistence\Query\Sql\AverageMaxLocalizableAndScopableAttributesPerFamily($d), ($container->privates['pim_volume_monitoring.persistence.query.average_max_attributes_per_family'] ?? $container->load('getPimVolumeMonitoring_Persistence_Query_AverageMaxAttributesPerFamilyService'))), 'system_info_report');
        $instance->addCollector($f, 'update_checker');
        $instance->addCollector($f, 'system_info_report');
        $instance->addCollector(new \Akeneo\Platform\Bundle\AnalyticsBundle\DataCollector\BundlesDataCollector($container->parameters['kernel.bundles']), 'system_info_report');
        $instance->addCollector(new \Akeneo\Platform\Bundle\AnalyticsBundle\DataCollector\StorageDataCollector($d), 'system_info_report');

        return $instance;
    }
}
