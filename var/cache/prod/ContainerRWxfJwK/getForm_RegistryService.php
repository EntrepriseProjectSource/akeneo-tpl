<?php

namespace ContainerRWxfJwK;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/*
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getForm_RegistryService extends KernelProdContainer
{
    /*
     * Gets the private 'form.registry' shared service.
     *
     * @return \Symfony\Component\Form\FormRegistry
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/form/FormRegistryInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/form/FormRegistry.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/form/FormExtensionInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/form/Extension/DependencyInjection/DependencyInjectionExtension.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/form/ResolvedFormTypeFactoryInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/form/ResolvedFormTypeFactory.php';

        return $container->privates['form.registry'] = new \Symfony\Component\Form\FormRegistry([0 => new \Symfony\Component\Form\Extension\DependencyInjection\DependencyInjectionExtension(new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($container->getService, [
            'Akeneo\\Category\\Infrastructure\\Symfony\\Form\\Type\\CategoryType' => ['privates', 'pim_enrich.form.type.category', 'getPimEnrich_Form_Type_CategoryService', true],
            'Akeneo\\Pim\\Enrichment\\Bundle\\Form\\Type\\CommentType' => ['privates', 'pim_comment.form.type.comment', 'getPimComment_Form_Type_CommentService', true],
            'Akeneo\\Pim\\Structure\\Bundle\\Form\\Type\\AttributeOptionType' => ['privates', 'pim_enrich.form.type.attribute_option', 'getPimEnrich_Form_Type_AttributeOptionService', true],
            'Akeneo\\Pim\\Structure\\Bundle\\Form\\Type\\AttributeOptionValueType' => ['privates', 'pim_enrich.form.type.attribute_option_value', 'getPimEnrich_Form_Type_AttributeOptionValueService', true],
            'Akeneo\\Platform\\Bundle\\UIBundle\\Form\\Type\\AjaxEntityType' => ['privates', 'pim_ui.form.type.ajax_entity', 'getPimUi_Form_Type_AjaxEntityService', true],
            'Akeneo\\Platform\\Bundle\\UIBundle\\Form\\Type\\AjaxReferenceDataType' => ['privates', 'pim_ui.form.type.ajax_reference_data', 'getPimUi_Form_Type_AjaxReferenceDataService', true],
            'Akeneo\\Platform\\Bundle\\UIBundle\\Form\\Type\\AsyncSelectType' => ['privates', 'pim_enrich.form.type.async_select', 'getPimEnrich_Form_Type_AsyncSelectService', true],
            'Akeneo\\Platform\\Bundle\\UIBundle\\Form\\Type\\DateType' => ['privates', 'pim_ui.form.type.date', 'getPimUi_Form_Type_DateService', true],
            'Akeneo\\Platform\\Bundle\\UIBundle\\Form\\Type\\EntityIdentifierType' => ['privates', 'pim_enrich.type.entity_identifier', 'getPimEnrich_Type_EntityIdentifierService', true],
            'Akeneo\\Platform\\Bundle\\UIBundle\\Form\\Type\\LightEntityType' => ['privates', 'pim_enrich.form.type.light_entity', 'getPimEnrich_Form_Type_LightEntityService', true],
            'Akeneo\\Platform\\Bundle\\UIBundle\\Form\\Type\\LocaleType' => ['privates', 'pim_localization.form.type.locale', 'getPimLocalization_Form_Type_LocaleService', true],
            'Akeneo\\Platform\\Bundle\\UIBundle\\Form\\Type\\LocalizedCollectionType' => ['privates', 'pim_enrich.form.type.localized_collection', 'getPimEnrich_Form_Type_LocalizedCollectionService', true],
            'Akeneo\\Platform\\Bundle\\UIBundle\\Form\\Type\\MediaType' => ['privates', 'pim_enrich.form.type.media', 'getPimEnrich_Form_Type_MediaService', true],
            'Akeneo\\Platform\\Bundle\\UIBundle\\Form\\Type\\NumberType' => ['privates', 'pim_ui.form.type.number', 'getPimUi_Form_Type_NumberService', true],
            'Akeneo\\Platform\\Bundle\\UIBundle\\Form\\Type\\ObjectIdentifierType' => ['privates', 'pim_enrich.form.type.object_identifier', 'getPimEnrich_Form_Type_ObjectIdentifierService', true],
            'Akeneo\\Platform\\Bundle\\UIBundle\\Form\\Type\\SwitchType' => ['privates', 'pim_ui.form.type.switch', 'getPimUi_Form_Type_SwitchService', true],
            'Akeneo\\Platform\\Bundle\\UIBundle\\Form\\Type\\TranslatableFieldType' => ['privates', 'pim_enrich.form.type.translatable_field', 'getPimEnrich_Form_Type_TranslatableFieldService', true],
            'Akeneo\\Tool\\Bundle\\FileStorageBundle\\Form\\Type\\FileInfoType' => ['privates', 'akeneo_file_storage.form.type.file_info', 'getAkeneoFileStorage_Form_Type_FileInfoService', true],
            'Akeneo\\UserManagement\\Bundle\\Form\\Type\\AclAccessLevelSelectorType' => ['privates', 'pim_user.form.type.acl_access_level_selector', 'getPimUser_Form_Type_AclAccessLevelSelectorService', true],
            'Akeneo\\UserManagement\\Bundle\\Form\\Type\\AclRoleType' => ['privates', 'pim_user.form.type.acl_role', 'getPimUser_Form_Type_AclRoleService', true],
            'Akeneo\\UserManagement\\Bundle\\Form\\Type\\GroupApiType' => ['privates', 'pim_user.form.type.group.api', 'getPimUser_Form_Type_Group_ApiService', true],
            'Akeneo\\UserManagement\\Bundle\\Form\\Type\\GroupType' => ['privates', 'pim_user.form.type.group', 'getPimUser_Form_Type_GroupService', true],
            'Akeneo\\UserManagement\\Bundle\\Form\\Type\\PrivilegeCollectionType' => ['privates', 'pim_user.form.type.acl_collection', 'getPimUser_Form_Type_AclCollectionService', true],
            'Akeneo\\UserManagement\\Bundle\\Form\\Type\\ResetType' => ['privates', 'pim_user.form.type.reset', 'getPimUser_Form_Type_ResetService', true],
            'Akeneo\\UserManagement\\Bundle\\Form\\Type\\RoleApiType' => ['privates', 'pim_user.form.type.role.api', 'getPimUser_Form_Type_Role_ApiService', true],
            'FOS\\OAuthServerBundle\\Form\\Type\\AuthorizeFormType' => ['privates', 'fos_oauth_server.authorize.form.type', 'getFosOauthServer_Authorize_Form_TypeService', true],
            'Liip\\ImagineBundle\\Form\\Type\\ImageType' => ['privates', 'liip_imagine.form.type.image', 'getLiipImagine_Form_Type_ImageService', true],
            'Oro\\Bundle\\FilterBundle\\Form\\Type\\Filter\\BooleanFilterType' => ['privates', 'oro_filter.form.type.filter.boolean', 'getOroFilter_Form_Type_Filter_BooleanService', true],
            'Oro\\Bundle\\FilterBundle\\Form\\Type\\Filter\\ChoiceFilterType' => ['privates', 'oro_filter.form.type.filter.choice', 'getOroFilter_Form_Type_Filter_ChoiceService', true],
            'Oro\\Bundle\\FilterBundle\\Form\\Type\\Filter\\DateRangeFilterType' => ['privates', 'oro_filter.form.type.filter.date_range', 'getOroFilter_Form_Type_Filter_DateRangeService', true],
            'Oro\\Bundle\\FilterBundle\\Form\\Type\\Filter\\DateTimeRangeFilterType' => ['privates', 'oro_filter.form.type.filter.datetime_range', 'getOroFilter_Form_Type_Filter_DatetimeRangeService', true],
            'Oro\\Bundle\\FilterBundle\\Form\\Type\\Filter\\EntityFilterType' => ['privates', 'oro_filter.form.type.filter.entity', 'getOroFilter_Form_Type_Filter_EntityService', true],
            'Oro\\Bundle\\FilterBundle\\Form\\Type\\Filter\\FilterType' => ['privates', 'oro_filter.form.type.filter', 'getOroFilter_Form_Type_FilterService', true],
            'Oro\\Bundle\\FilterBundle\\Form\\Type\\Filter\\NumberFilterType' => ['privates', 'oro_filter.form.type.filter.number', 'getOroFilter_Form_Type_Filter_NumberService', true],
            'Oro\\Bundle\\FilterBundle\\Form\\Type\\Filter\\SelectRowFilterType' => ['privates', 'oro_filter.form.type.filter.selectrow', 'getOroFilter_Form_Type_Filter_SelectrowService', true],
            'Oro\\Bundle\\FilterBundle\\Form\\Type\\Filter\\TextFilterType' => ['privates', 'oro_filter.form.type.filter.text', 'getOroFilter_Form_Type_Filter_TextService', true],
            'Oro\\Bundle\\PimDataGridBundle\\Form\\Type\\DatagridViewType' => ['privates', 'pim_datagrid.form.type.datagrid_view', 'getPimDatagrid_Form_Type_DatagridViewService', true],
            'Oro\\Bundle\\PimFilterBundle\\Form\\Type\\CategoryType' => ['privates', 'pim_filter.form.type.category', 'getPimFilter_Form_Type_CategoryService', true],
            'Oro\\Bundle\\PimFilterBundle\\Form\\Type\\DateRangeType' => ['privates', 'pim_filter.form.type.date_range', 'getPimFilter_Form_Type_DateRangeService', true],
            'Oro\\Bundle\\PimFilterBundle\\Form\\Type\\DateTimeRangeType' => ['privates', 'pim_filter.form.type.datetime_range', 'getPimFilter_Form_Type_DatetimeRangeService', true],
            'Oro\\Bundle\\PimFilterBundle\\Form\\Type\\Filter\\AjaxChoiceFilterType' => ['privates', 'pim_filter.form.type.filter.ajax_choice', 'getPimFilter_Form_Type_Filter_AjaxChoiceService', true],
            'Oro\\Bundle\\PimFilterBundle\\Form\\Type\\Filter\\BooleanFilterType' => ['privates', 'pim_filter.form.type.boolean', 'getPimFilter_Form_Type_BooleanService', true],
            'Oro\\Bundle\\PimFilterBundle\\Form\\Type\\Filter\\CategoryFilterType' => ['privates', 'pim_filter.form.type.filter.category', 'getPimFilter_Form_Type_Filter_CategoryService', true],
            'Oro\\Bundle\\PimFilterBundle\\Form\\Type\\Filter\\MetricFilterType' => ['privates', 'pim_filter.form.type.filter.metric', 'getPimFilter_Form_Type_Filter_MetricService', true],
            'Oro\\Bundle\\PimFilterBundle\\Form\\Type\\Filter\\PriceFilterType' => ['privates', 'pim_filter.form.type.filter.price', 'getPimFilter_Form_Type_Filter_PriceService', true],
            'Oro\\Bundle\\PimFilterBundle\\Form\\Type\\Filter\\ScopeFilterType' => ['privates', 'pim_filter.form.type.filter.scope', 'getPimFilter_Form_Type_Filter_ScopeService', true],
            'Oro\\Bundle\\SecurityBundle\\Form\\Type\\ObjectLabelType' => ['privates', 'oro_security.form.type.object_label_type', 'getOroSecurity_Form_Type_ObjectLabelTypeService', true],
            'Symfony\\Bridge\\Doctrine\\Form\\Type\\EntityType' => ['privates', 'form.type.entity', 'getForm_Type_EntityService', true],
            'Symfony\\Component\\Form\\Extension\\Core\\Type\\ChoiceType' => ['privates', 'form.type.choice', 'getForm_Type_ChoiceService', true],
            'Symfony\\Component\\Form\\Extension\\Core\\Type\\ColorType' => ['privates', 'form.type.color', 'getForm_Type_ColorService', true],
            'Symfony\\Component\\Form\\Extension\\Core\\Type\\FileType' => ['services', '.container.private.form.type.file', 'get_Container_Private_Form_Type_FileService', true],
            'Symfony\\Component\\Form\\Extension\\Core\\Type\\FormType' => ['privates', 'form.type.form', 'getForm_Type_FormService', true],
        ], [
            'Akeneo\\Category\\Infrastructure\\Symfony\\Form\\Type\\CategoryType' => '?',
            'Akeneo\\Pim\\Enrichment\\Bundle\\Form\\Type\\CommentType' => '?',
            'Akeneo\\Pim\\Structure\\Bundle\\Form\\Type\\AttributeOptionType' => '?',
            'Akeneo\\Pim\\Structure\\Bundle\\Form\\Type\\AttributeOptionValueType' => '?',
            'Akeneo\\Platform\\Bundle\\UIBundle\\Form\\Type\\AjaxEntityType' => '?',
            'Akeneo\\Platform\\Bundle\\UIBundle\\Form\\Type\\AjaxReferenceDataType' => '?',
            'Akeneo\\Platform\\Bundle\\UIBundle\\Form\\Type\\AsyncSelectType' => '?',
            'Akeneo\\Platform\\Bundle\\UIBundle\\Form\\Type\\DateType' => '?',
            'Akeneo\\Platform\\Bundle\\UIBundle\\Form\\Type\\EntityIdentifierType' => '?',
            'Akeneo\\Platform\\Bundle\\UIBundle\\Form\\Type\\LightEntityType' => '?',
            'Akeneo\\Platform\\Bundle\\UIBundle\\Form\\Type\\LocaleType' => '?',
            'Akeneo\\Platform\\Bundle\\UIBundle\\Form\\Type\\LocalizedCollectionType' => '?',
            'Akeneo\\Platform\\Bundle\\UIBundle\\Form\\Type\\MediaType' => '?',
            'Akeneo\\Platform\\Bundle\\UIBundle\\Form\\Type\\NumberType' => '?',
            'Akeneo\\Platform\\Bundle\\UIBundle\\Form\\Type\\ObjectIdentifierType' => '?',
            'Akeneo\\Platform\\Bundle\\UIBundle\\Form\\Type\\SwitchType' => '?',
            'Akeneo\\Platform\\Bundle\\UIBundle\\Form\\Type\\TranslatableFieldType' => '?',
            'Akeneo\\Tool\\Bundle\\FileStorageBundle\\Form\\Type\\FileInfoType' => '?',
            'Akeneo\\UserManagement\\Bundle\\Form\\Type\\AclAccessLevelSelectorType' => '?',
            'Akeneo\\UserManagement\\Bundle\\Form\\Type\\AclRoleType' => '?',
            'Akeneo\\UserManagement\\Bundle\\Form\\Type\\GroupApiType' => '?',
            'Akeneo\\UserManagement\\Bundle\\Form\\Type\\GroupType' => '?',
            'Akeneo\\UserManagement\\Bundle\\Form\\Type\\PrivilegeCollectionType' => '?',
            'Akeneo\\UserManagement\\Bundle\\Form\\Type\\ResetType' => '?',
            'Akeneo\\UserManagement\\Bundle\\Form\\Type\\RoleApiType' => '?',
            'FOS\\OAuthServerBundle\\Form\\Type\\AuthorizeFormType' => '?',
            'Liip\\ImagineBundle\\Form\\Type\\ImageType' => '?',
            'Oro\\Bundle\\FilterBundle\\Form\\Type\\Filter\\BooleanFilterType' => '?',
            'Oro\\Bundle\\FilterBundle\\Form\\Type\\Filter\\ChoiceFilterType' => '?',
            'Oro\\Bundle\\FilterBundle\\Form\\Type\\Filter\\DateRangeFilterType' => '?',
            'Oro\\Bundle\\FilterBundle\\Form\\Type\\Filter\\DateTimeRangeFilterType' => '?',
            'Oro\\Bundle\\FilterBundle\\Form\\Type\\Filter\\EntityFilterType' => '?',
            'Oro\\Bundle\\FilterBundle\\Form\\Type\\Filter\\FilterType' => '?',
            'Oro\\Bundle\\FilterBundle\\Form\\Type\\Filter\\NumberFilterType' => '?',
            'Oro\\Bundle\\FilterBundle\\Form\\Type\\Filter\\SelectRowFilterType' => '?',
            'Oro\\Bundle\\FilterBundle\\Form\\Type\\Filter\\TextFilterType' => '?',
            'Oro\\Bundle\\PimDataGridBundle\\Form\\Type\\DatagridViewType' => '?',
            'Oro\\Bundle\\PimFilterBundle\\Form\\Type\\CategoryType' => '?',
            'Oro\\Bundle\\PimFilterBundle\\Form\\Type\\DateRangeType' => '?',
            'Oro\\Bundle\\PimFilterBundle\\Form\\Type\\DateTimeRangeType' => '?',
            'Oro\\Bundle\\PimFilterBundle\\Form\\Type\\Filter\\AjaxChoiceFilterType' => '?',
            'Oro\\Bundle\\PimFilterBundle\\Form\\Type\\Filter\\BooleanFilterType' => '?',
            'Oro\\Bundle\\PimFilterBundle\\Form\\Type\\Filter\\CategoryFilterType' => '?',
            'Oro\\Bundle\\PimFilterBundle\\Form\\Type\\Filter\\MetricFilterType' => '?',
            'Oro\\Bundle\\PimFilterBundle\\Form\\Type\\Filter\\PriceFilterType' => '?',
            'Oro\\Bundle\\PimFilterBundle\\Form\\Type\\Filter\\ScopeFilterType' => '?',
            'Oro\\Bundle\\SecurityBundle\\Form\\Type\\ObjectLabelType' => '?',
            'Symfony\\Bridge\\Doctrine\\Form\\Type\\EntityType' => '?',
            'Symfony\\Component\\Form\\Extension\\Core\\Type\\ChoiceType' => '?',
            'Symfony\\Component\\Form\\Extension\\Core\\Type\\ColorType' => '?',
            'Symfony\\Component\\Form\\Extension\\Core\\Type\\FileType' => '?',
            'Symfony\\Component\\Form\\Extension\\Core\\Type\\FormType' => '?',
        ]), ['Symfony\\Component\\Form\\Extension\\Core\\Type\\FormType' => new RewindableGenerator(function () use ($container) {
            yield 0 => ($container->privates['form.type_extension.form.transformation_failure_handling'] ?? $container->load('getForm_TypeExtension_Form_TransformationFailureHandlingService'));
            yield 1 => ($container->privates['form.type_extension.form.http_foundation'] ?? $container->load('getForm_TypeExtension_Form_HttpFoundationService'));
            yield 2 => ($container->privates['form.type_extension.form.validator'] ?? $container->load('getForm_TypeExtension_Form_ValidatorService'));
            yield 3 => ($container->privates['form.type_extension.upload.validator'] ?? $container->load('getForm_TypeExtension_Upload_ValidatorService'));
            yield 4 => ($container->privates['form.type_extension.csrf'] ?? $container->load('getForm_TypeExtension_CsrfService'));
            yield 5 => ($container->privates['pim_ui.form.extension.help'] ?? ($container->privates['pim_ui.form.extension.help'] = new \Akeneo\Platform\Bundle\UIBundle\Form\Extension\FormTypeHelpExtension()));
            yield 6 => ($container->privates['pim_ui.form.extension.select2'] ?? ($container->privates['pim_ui.form.extension.select2'] = new \Akeneo\Platform\Bundle\UIBundle\Form\Extension\FormTypeSelect2Extension()));
        }, 7), 'Symfony\\Component\\Form\\Extension\\Core\\Type\\RepeatedType' => new RewindableGenerator(function () use ($container) {
            yield 0 => ($container->privates['form.type_extension.repeated.validator'] ?? ($container->privates['form.type_extension.repeated.validator'] = new \Symfony\Component\Form\Extension\Validator\Type\RepeatedTypeValidatorExtension()));
        }, 1), 'Symfony\\Component\\Form\\Extension\\Core\\Type\\SubmitType' => new RewindableGenerator(function () use ($container) {
            yield 0 => ($container->privates['form.type_extension.submit.validator'] ?? ($container->privates['form.type_extension.submit.validator'] = new \Symfony\Component\Form\Extension\Validator\Type\SubmitTypeValidatorExtension()));
        }, 1)], new RewindableGenerator(function () use ($container) {
            yield 0 => ($container->privates['form.type_guesser.doctrine'] ?? $container->load('getForm_TypeGuesser_DoctrineService'));
            yield 1 => ($container->privates['form.type_guesser.validator'] ?? $container->load('getForm_TypeGuesser_ValidatorService'));
        }, 2))], new \Symfony\Component\Form\ResolvedFormTypeFactory());
    }
}
