<?php

namespace ContainerRWxfJwK;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/*
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getAkeneo_Pim_Enrichment_Product_Connector_GetProductFromUuidsService extends KernelProdContainer
{
    /*
     * Gets the private 'akeneo.pim.enrichment.product.connector.get_product_from_uuids' shared service.
     *
     * @return \Akeneo\Pim\Enrichment\Bundle\Storage\Sql\Connector\SqlGetConnectorProducts
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Enrichment/Component/Product/Query/GetConnectorProducts.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Enrichment/Bundle/Storage/Sql/Connector/SqlGetConnectorProducts.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Enrichment/Bundle/Storage/Sql/Product/Association/GetProductAssociationsByProductUuids.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Enrichment/Bundle/Storage/Sql/Product/Association/GetProductModelAssociationsByProductUuids.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Enrichment/Bundle/Storage/Sql/Product/Association/GetGroupAssociationsByProductUuids.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Enrichment/Bundle/Storage/Sql/Product/QuantifiedAssociation/GetProductQuantifiedAssociationsByProductUuids.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Enrichment/Bundle/Storage/Sql/Product/QuantifiedAssociation/GetProductModelQuantifiedAssociationsByProductUuids.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Enrichment/Bundle/Storage/Sql/Product/GetCategoryCodesByProductUuids.php';

        $a = ($container->privates['Akeneo\\Pim\\Enrichment\\Bundle\\Storage\\Sql\\Product\\GetValuesAndPropertiesFromProductUuids'] ?? $container->load('getGetValuesAndPropertiesFromProductUuidsService'));

        if (isset($container->privates['akeneo.pim.enrichment.product.connector.get_product_from_uuids'])) {
            return $container->privates['akeneo.pim.enrichment.product.connector.get_product_from_uuids'];
        }
        $b = ($container->services['doctrine.dbal.default_connection'] ?? $container->getDoctrine_Dbal_DefaultConnectionService());

        if (isset($container->privates['akeneo.pim.enrichment.product.connector.get_product_from_uuids'])) {
            return $container->privates['akeneo.pim.enrichment.product.connector.get_product_from_uuids'];
        }
        $c = ($container->privates['akeneo.pim.enrichment.product.query.quantified_association.get_id_mapping_from_product_ids_query'] ?? $container->load('getAkeneo_Pim_Enrichment_Product_Query_QuantifiedAssociation_GetIdMappingFromProductIdsQueryService'));

        if (isset($container->privates['akeneo.pim.enrichment.product.connector.get_product_from_uuids'])) {
            return $container->privates['akeneo.pim.enrichment.product.connector.get_product_from_uuids'];
        }
        $d = ($container->privates['akeneo.pim.enrichment.product.query.find_quantified_association_codes'] ?? $container->load('getAkeneo_Pim_Enrichment_Product_Query_FindQuantifiedAssociationCodesService'));

        if (isset($container->privates['akeneo.pim.enrichment.product.connector.get_product_from_uuids'])) {
            return $container->privates['akeneo.pim.enrichment.product.connector.get_product_from_uuids'];
        }
        $e = ($container->privates['akeneo.pim.enrichment.product.query.quantified_association.get_id_mapping_from_product_model_ids_query'] ?? $container->load('getAkeneo_Pim_Enrichment_Product_Query_QuantifiedAssociation_GetIdMappingFromProductModelIdsQueryService'));

        if (isset($container->privates['akeneo.pim.enrichment.product.connector.get_product_from_uuids'])) {
            return $container->privates['akeneo.pim.enrichment.product.connector.get_product_from_uuids'];
        }
        $f = ($container->privates['akeneo.pim.enrichment.factory.read_value_collection'] ?? $container->load('getAkeneo_Pim_Enrichment_Factory_ReadValueCollectionService'));

        if (isset($container->privates['akeneo.pim.enrichment.product.connector.get_product_from_uuids'])) {
            return $container->privates['akeneo.pim.enrichment.product.connector.get_product_from_uuids'];
        }

        return $container->privates['akeneo.pim.enrichment.product.connector.get_product_from_uuids'] = new \Akeneo\Pim\Enrichment\Bundle\Storage\Sql\Connector\SqlGetConnectorProducts($a, new \Akeneo\Pim\Enrichment\Bundle\Storage\Sql\Product\Association\GetProductAssociationsByProductUuids($b), new \Akeneo\Pim\Enrichment\Bundle\Storage\Sql\Product\Association\GetProductModelAssociationsByProductUuids($b), new \Akeneo\Pim\Enrichment\Bundle\Storage\Sql\Product\Association\GetGroupAssociationsByProductUuids($b), new \Akeneo\Pim\Enrichment\Bundle\Storage\Sql\Product\QuantifiedAssociation\GetProductQuantifiedAssociationsByProductUuids($b, $c, $d), new \Akeneo\Pim\Enrichment\Bundle\Storage\Sql\Product\QuantifiedAssociation\GetProductModelQuantifiedAssociationsByProductUuids($b, $e, $d), new \Akeneo\Pim\Enrichment\Bundle\Storage\Sql\Product\GetCategoryCodesByProductUuids($b), $f, $b);
    }
}
