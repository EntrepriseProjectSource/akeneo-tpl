<?php

namespace ContainerRWxfJwK;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/*
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getGetProductQualityScoreControllerService extends KernelProdContainer
{
    /*
     * Gets the public 'Akeneo\Pim\Automation\DataQualityInsights\Infrastructure\Symfony\Controller\GetProductQualityScoreController' shared service.
     *
     * @return \Akeneo\Pim\Automation\DataQualityInsights\Infrastructure\Symfony\Controller\GetProductQualityScoreController
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Automation/DataQualityInsights/back/Infrastructure/Symfony/Controller/GetProductQualityScoreController.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Automation/DataQualityInsights/back/Application/GetProductScores.php';

        return $container->services['Akeneo\\Pim\\Automation\\DataQualityInsights\\Infrastructure\\Symfony\\Controller\\GetProductQualityScoreController'] = new \Akeneo\Pim\Automation\DataQualityInsights\Infrastructure\Symfony\Controller\GetProductQualityScoreController(new \Akeneo\Pim\Automation\DataQualityInsights\Application\GetProductScores(($container->privates['Akeneo\\Pim\\Automation\\DataQualityInsights\\Infrastructure\\Persistence\\Query\\ProductEvaluation\\GetUpToDateProductScoresQuery'] ?? $container->load('getGetUpToDateProductScoresQueryService')), ($container->privates['Akeneo\\Pim\\Automation\\DataQualityInsights\\Infrastructure\\Persistence\\Query\\Structure\\CachedGetLocalesByChannelQuery'] ?? $container->load('getCachedGetLocalesByChannelQueryService')), ($container->privates['Akeneo\\Pim\\Automation\\DataQualityInsights\\Application\\GetScoresByCriteriaStrategy'] ?? $container->load('getGetScoresByCriteriaStrategyService'))));
    }
}
