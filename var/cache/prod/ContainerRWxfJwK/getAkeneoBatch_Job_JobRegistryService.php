<?php

namespace ContainerRWxfJwK;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/*
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getAkeneoBatch_Job_JobRegistryService extends KernelProdContainer
{
    /*
     * Gets the public 'akeneo_batch.job.job_registry' shared service.
     *
     * @return \Akeneo\Tool\Component\Batch\Job\JobRegistry
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Tool/Component/Batch/Job/JobRegistry.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Tool/Component/Batch/Job/JobInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Tool/Component/Batch/Job/StoppableJobInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Tool/Component/Batch/Job/JobWithStepsInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Tool/Component/Batch/Job/VisibleJobInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Tool/Component/Batch/Job/Job.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Tool/Component/Batch/Step/StepInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Tool/Component/Batch/Step/AbstractStep.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Tool/Component/Batch/Step/TrackableStepInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Tool/Component/Batch/Step/StoppableStepInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Tool/Component/Batch/Step/ItemStep.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Tool/Component/Batch/Item/ItemReaderInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Tool/Component/Batch/Item/InitializableInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Tool/Component/Batch/Step/StepExecutionAwareInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Tool/Component/Batch/Item/TrackableItemReaderInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Tool/Component/Connector/Reader/Database/AbstractReader.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Tool/Component/Connector/Reader/Database/Reader.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Tool/Component/Batch/Item/ItemProcessorInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Tool/Component/Connector/Processor/Normalization/Processor.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Tool/Component/Batch/Item/ItemWriterInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Tool/Component/Connector/Writer/File/ArchivableWriterInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Tool/Component/Connector/Writer/File/AbstractFileWriter.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Tool/Component/Batch/Item/FlushableInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Tool/Component/Connector/Writer/File/Csv/Writer.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Tool/Component/Connector/ArrayConverter/ArrayConverterInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Tool/Component/Connector/ArrayConverter/DummyConverter.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Tool/Component/Connector/Writer/File/FlatItemBufferFlusher.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Tool/Component/Connector/Writer/File/ColumnSorterInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Tool/Component/Connector/Writer/File/DefaultColumnSorter.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Tool/Component/Connector/ArrayConverter/FieldSplitter.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Tool/Component/Batch/Job/JobStopper.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Tool/Component/Batch/Query/GetJobExecutionStatusInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Tool/Component/Batch/Query/SqlGetJobExecutionStatus.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Platform/Bundle/ImportExportBundle/Infrastructure/Step/UploadStep.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Tool/Component/Connector/Writer/File/Xlsx/Writer.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/UserManagement/Component/Connector/Reader/Database/UserRole.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/UserManagement/Component/Connector/ArrayConverter/StandardToFlat/Role.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/UserManagement/Component/Connector/Reader/Database/User.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/UserManagement/Component/Connector/Writer/File/AbstractUserWriter.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/UserManagement/Component/Connector/Writer/File/CsvUserWriter.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Tool/Component/Connector/ArrayConverter/StandardToFlat/AbstractSimpleArrayConverter.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/UserManagement/Component/Connector/ArrayConverter/StandardToFlat/User.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Tool/Component/Connector/Writer/File/FileExporterPathGeneratorInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Tool/Component/Connector/Writer/File/MediaExporterPathGenerator.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/UserManagement/Component/Connector/Writer/File/XlsxUserWriter.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Platform/Bundle/ImportExportBundle/Infrastructure/Step/DownloadStep.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Tool/Component/Connector/Step/ValidatorStep.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Tool/Component/Connector/Item/CharsetValidator.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Tool/Component/Connector/Reader/File/FileReaderInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Tool/Component/Connector/Reader/File/Csv/Reader.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Tool/Component/Connector/Processor/Denormalization/AbstractProcessor.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Tool/Component/Connector/Processor/Denormalization/Processor.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Tool/Component/Connector/Writer/Database/Writer.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Tool/Component/Connector/Reader/File/Xlsx/Reader.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/UserManagement/Component/Connector/Reader/File/CsvUserReader.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/UserManagement/Component/Connector/ArrayConverter/FlatToStandard/User.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/UserManagement/Component/Connector/Processor/Denormalization/UserProcessor.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/UserManagement/Component/Connector/ArrayConverter/FlatToStandard/RoleWithPermissions.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/UserManagement/Component/Connector/Processor/Denormalization/RoleWithPermissionsProcessor.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Tool/Component/StorageUtils/Updater/ObjectUpdaterInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/UserManagement/Component/Updater/RoleWithPermissionsUpdater.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/UserManagement/Component/Connector/Writer/Database/RoleWithPermissionsWriter.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/UserManagement/Component/Connector/Reader/File/XlsxUserReader.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Channel/back/Infrastructure/Component/ArrayConverter/FlatToStandard/Locale.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Tool/Component/StorageUtils/Factory/SimpleFactoryInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Tool/Component/StorageUtils/Factory/SimpleFactory.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Channel/back/Infrastructure/Component/Updater/LocaleUpdater.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Channel/back/Infrastructure/Component/ArrayConverter/StandardToFlat/Locale.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Channel/back/Infrastructure/Component/ArrayConverter/FlatToStandard/Channel.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Channel/back/Infrastructure/Processor/Denormalization/ChannelProcessor.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Channel/back/Infrastructure/Component/ArrayConverter/StandardToFlat/Channel.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Channel/back/Infrastructure/Component/ArrayConverter/FlatToStandard/Currency.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Channel/back/Infrastructure/Component/Updater/CurrencyUpdater.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Channel/back/Infrastructure/Component/ArrayConverter/StandardToFlat/Currency.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Tool/Component/Connector/Step/TaskletStep.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Tool/Component/Connector/Step/TaskletInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Enrichment/Component/Product/Job/ComputeCompletenessOfProductsFamilyTasklet.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Enrichment/Component/Product/Job/RemoveCompletenessForChannelAndLocaleTasklet.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Enrichment/Component/Product/Job/ComputeFamilyVariantStructureChangesTasklet.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Enrichment/Component/Product/EntityWithFamilyVariant/KeepOnlyValuesForVariation.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Enrichment/Component/Product/Connector/ArrayConverter/FlatToStandard/Group.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Enrichment/Component/Product/Connector/Reader/Database/GroupReader.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Enrichment/Component/Product/Connector/ArrayConverter/StandardToFlat/Group.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Enrichment/Component/Product/Connector/Reader/File/Csv/ProductReader.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Enrichment/Component/Product/Connector/ArrayConverter/FlatToStandard/EntityWithValuesDelocalized.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Enrichment/Component/Product/Connector/ArrayConverter/FlatToStandard/Product.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Enrichment/Component/Product/Connector/ArrayConverter/FlatToStandard/AssociationColumnsResolver.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Enrichment/Component/Product/Connector/ArrayConverter/FlatToStandard/AttributeColumnsResolver.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Enrichment/Component/Product/Connector/ArrayConverter/FlatToStandard/FieldConverterInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Enrichment/Component/Product/Connector/ArrayConverter/FlatToStandard/FieldConverter.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Enrichment/Component/Product/Connector/ArrayConverter/FlatToStandard/FieldSplitter.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Enrichment/Component/Product/Connector/ArrayConverter/FlatToStandard/ColumnsMerger.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Enrichment/Component/Product/Connector/ArrayConverter/FlatToStandard/AttributeColumnInfoExtractor.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Enrichment/Component/Product/Connector/ArrayConverter/FlatToStandard/ColumnsMapper.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Enrichment/Component/Product/Connector/ArrayConverter/FlatToStandard/Value.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Enrichment/Component/Product/Connector/ArrayConverter/FlatToStandard/ValueConverter/ValueConverterRegistryInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Enrichment/Component/Product/Connector/ArrayConverter/FlatToStandard/ValueConverter/ValueConverterRegistry.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Enrichment/Component/Product/Connector/ArrayConverter/FlatToStandard/ValueConverter/ValueConverterInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Enrichment/Component/Product/Connector/ArrayConverter/FlatToStandard/ValueConverter/AbstractValueConverter.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Enrichment/Component/Product/Connector/ArrayConverter/FlatToStandard/ValueConverter/PriceConverter.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Enrichment/Component/Product/Connector/ArrayConverter/FlatToStandard/ValueConverter/MetricConverter.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Enrichment/Component/Product/Connector/ArrayConverter/FlatToStandard/ValueConverter/MultiSelectConverter.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Enrichment/Component/Product/Connector/ArrayConverter/FlatToStandard/ValueConverter/SimpleSelectConverter.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Enrichment/Component/Product/Connector/ArrayConverter/FlatToStandard/ValueConverter/TextConverter.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Enrichment/Component/Product/Connector/ArrayConverter/FlatToStandard/ValueConverter/BooleanConverter.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Enrichment/Component/Product/Connector/ArrayConverter/FlatToStandard/ValueConverter/MediaConverter.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Enrichment/Component/Product/Connector/ArrayConverter/FlatToStandard/ValueConverter/NumberConverter.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Enrichment/Component/Product/Connector/ArrayConverter/FlatToStandard/ValueConverter/DateConverter.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Tool/Component/Connector/Reader/File/MediaPathTransformer.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Tool/Component/Batch/Item/NonBlockingWarningAggregatorInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Enrichment/Component/Product/Connector/Processor/Denormalizer/ProductProcessor.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Enrichment/Component/Product/Connector/Processor/Denormalizer/FindProductToImport.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Enrichment/Component/Product/ProductModel/Filter/AttributeFilterInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Enrichment/Component/Product/ProductModel/Filter/ProductAttributeFilter.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Enrichment/Component/Product/Connector/Processor/Denormalizer/MediaStorer.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Enrichment/Component/Product/Connector/Processor/CleanLineBreaksInTextAttributes.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Enrichment/Component/Product/Connector/Writer/Database/ProductWriter.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Enrichment/Component/Product/Connector/Reader/File/Csv/ProductAssociationReader.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Enrichment/Component/Product/Connector/ArrayConverter/FlatToStandard/ProductAssociation.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Enrichment/Component/Product/Connector/Processor/Denormalizer/ProductAssociationProcessor.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Enrichment/Component/Product/Comparator/Filter/FilterInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Enrichment/Component/Product/Comparator/Filter/ProductAssociationFilter.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Enrichment/Component/Product/Connector/Writer/Database/ProductAssociationWriter.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Enrichment/Component/Product/Connector/Reader/File/Csv/ProductModelReader.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Enrichment/Component/Product/Connector/ArrayConverter/FlatToStandard/ProductModel.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Enrichment/Component/Product/Connector/ArrayConverter/FlatToStandard/ProductModel/FieldConverter.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Enrichment/Component/Product/Connector/Processor/Denormalizer/ProductModelProcessor.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Enrichment/Component/Product/ProductModel/Filter/ProductModelAttributeFilter.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Enrichment/Component/Product/Connector/Writer/Database/ProductModelWriter.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Enrichment/Component/Product/Connector/Reader/File/Csv/ProductModelAssociationReader.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Enrichment/Component/Product/Connector/ArrayConverter/FlatToStandard/ProductModelAssociation.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Enrichment/Component/Product/Connector/Processor/Denormalizer/ProductModelAssociationProcessor.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Enrichment/Component/Product/Connector/Reader/Database/ProductReader.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Enrichment/Component/Product/Query/ProductQueryBuilderFactoryInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Enrichment/Bundle/Elasticsearch/ProductQueryBuilderFactory.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Tool/Component/StorageUtils/Cursor/CursorFactoryInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Enrichment/Bundle/Elasticsearch/CursorFactory.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Enrichment/Component/Product/Converter/MetricConverter.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Enrichment/Component/Product/Connector/Processor/Normalization/ProductProcessor.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Enrichment/Component/Product/Connector/Processor/Normalization/GetNormalizedQualityScoresInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Enrichment/Component/Product/Connector/Processor/Normalization/GetNormalizedProductQualityScores.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Tool/Component/Connector/Writer/File/AbstractItemMediaWriter.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Enrichment/Component/Product/Connector/Writer/File/Csv/ProductWriter.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Enrichment/Component/Product/Connector/ArrayConverter/StandardToFlat/ProductLocalized.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Enrichment/Component/Product/Connector/ArrayConverter/StandardToFlat/Product.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Enrichment/Component/Product/Connector/ArrayConverter/StandardToFlat/Product/ProductValueConverter.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Enrichment/Component/Product/Connector/ArrayConverter/StandardToFlat/Product/ValueConverter/ValueConverterRegistry.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Enrichment/Component/Product/Connector/ArrayConverter/StandardToFlat/Product/ValueConverter/ValueConverterInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Enrichment/Component/Product/Connector/ArrayConverter/StandardToFlat/Product/ValueConverter/AbstractValueConverter.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Enrichment/Component/Product/Connector/ArrayConverter/StandardToFlat/Product/ValueConverter/PriceConverter.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Enrichment/Component/Product/Connector/ArrayConverter/StandardToFlat/Product/ValueConverter/MetricConverter.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Enrichment/Component/Product/Connector/ArrayConverter/StandardToFlat/Product/ValueConverter/MultiSelectConverter.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Enrichment/Component/Product/Connector/ArrayConverter/StandardToFlat/Product/ValueConverter/SimpleSelectConverter.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Enrichment/Component/Product/Connector/ArrayConverter/StandardToFlat/Product/ValueConverter/TextConverter.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Enrichment/Component/Product/Connector/ArrayConverter/StandardToFlat/Product/ValueConverter/BooleanConverter.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Enrichment/Component/Product/Connector/ArrayConverter/StandardToFlat/Product/ValueConverter/MediaConverter.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Enrichment/Component/Product/Connector/ArrayConverter/StandardToFlat/Product/ValueConverter/DateConverter.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Enrichment/Component/Product/Connector/ArrayConverter/StandardToFlat/Product/QualityScoreConverter.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Tool/Component/Connector/Writer/File/ColumnPresenterInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Enrichment/Component/Product/Connector/Writer/TranslatedColumnPresenter.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Enrichment/Component/Product/Connector/ProductColumnSorter.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Enrichment/Component/Product/Connector/Writer/File/GenerateFlatHeadersFromFamilyCodesInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Enrichment/Bundle/Storage/Sql/Connector/Writer/File/Flat/GenerateHeadersFromFamilyCodes.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Enrichment/Component/Product/Connector/Writer/File/GenerateFlatHeadersFromAttributeCodesInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Enrichment/Bundle/Storage/Sql/Connector/Writer/File/Flat/GenerateHeadersFromAttributeCodes.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Enrichment/Component/Product/Connector/FlatTranslator/FlatTranslatorInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Enrichment/Component/Product/Connector/FlatTranslator/ProductAndProductModelFlatTranslator.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Enrichment/Component/Product/Connector/FlatTranslator/HeaderRegistry.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Enrichment/Component/Product/Connector/FlatTranslator/Header/FlatHeaderTranslatorInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Enrichment/Component/Product/Connector/FlatTranslator/Header/AssociationTranslator.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Structure/Component/Query/PublicApi/Association/GetAssociationTypeTranslations.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Structure/Bundle/Query/PublicApi/Association/Sql/SqlGetAssociationTypeTranslations.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Enrichment/Component/Product/Connector/FlatTranslator/Header/AttributeTranslator.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Structure/Component/Query/PublicApi/Channel/GetChannelTranslations.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Structure/Bundle/Query/PublicApi/Channel/Sql/SqlGetChannelTranslations.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Tool/Component/Localization/LanguageTranslatorInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Tool/Component/Localization/LanguageTranslator.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Tool/Component/Localization/CurrencyTranslatorInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Tool/Component/Localization/CurrencyTranslator.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Enrichment/Component/Product/Connector/FlatTranslator/Header/PropertyTranslator.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Enrichment/Component/Product/Connector/FlatTranslator/PropertyValueRegistry.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Enrichment/Component/Product/Connector/FlatTranslator/PropertyValue/FlatPropertyValueTranslatorInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Enrichment/Component/Product/Connector/FlatTranslator/PropertyValue/CategoryTranslator.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Structure/Component/Query/PublicApi/Category/GetCategoryTranslations.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Structure/Bundle/Query/PublicApi/Category/Sql/SqlGetCategoryTranslations.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Enrichment/Component/Product/Connector/FlatTranslator/PropertyValue/FamilyTranslator.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Structure/Component/Query/PublicApi/Family/GetFamilyTranslations.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Structure/Bundle/Query/PublicApi/Family/Sql/SqlGetFamilyTranslations.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Enrichment/Component/Product/Connector/FlatTranslator/PropertyValue/FamilyVariantTranslator.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Structure/Component/Query/PublicApi/FamilyVariant/GetFamilyVariantTranslations.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Structure/Bundle/Query/PublicApi/FamilyVariant/Sql/SqlGetFamilyVariantTranslations.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Enrichment/Component/Product/Connector/FlatTranslator/PropertyValue/GroupTranslator.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Structure/Component/Query/PublicApi/Group/GetGroupTranslations.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Structure/Bundle/Query/PublicApi/Group/Sql/SqlGetGroupTranslations.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Enrichment/Component/Product/Connector/FlatTranslator/PropertyValue/EnabledTranslator.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Enrichment/Component/Product/Connector/FlatTranslator/PropertyValue/ParentTranslator.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Enrichment/Component/Product/Query/GetProductModelLabelsInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Enrichment/Bundle/Doctrine/ORM/Query/SqlGetProductModelLabels.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Enrichment/Component/Product/Connector/FlatTranslator/AttributeValuesFlatTranslator.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Enrichment/Component/Product/Connector/FlatTranslator/AttributeValueRegistry.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Enrichment/Component/Product/Connector/FlatTranslator/AttributeValue/FlatAttributeValueTranslatorInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Enrichment/Component/Product/Connector/FlatTranslator/AttributeValue/BooleanTranslator.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Enrichment/Component/Product/Connector/FlatTranslator/AttributeValue/MetricTranslator.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Enrichment/Component/Product/Connector/FlatTranslator/AttributeValue/MultiSelectTranslator.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Structure/Component/Query/PublicApi/AttributeOption/GetExistingAttributeOptionsWithValues.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Structure/Bundle/Query/PublicApi/AttributeOption/Cache/LruCachedGetExistingAttributeOptionsWithValues.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Structure/Bundle/Query/PublicApi/AttributeOption/Sql/SqlGetExistingAttributeOptionsWithValues.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Enrichment/Component/Product/Connector/FlatTranslator/AttributeValue/SimpleSelectTranslator.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Enrichment/Component/Product/Connector/FlatTranslator/AssociationTranslator.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Enrichment/Component/Product/Query/GetProductLabelsInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Enrichment/Bundle/Doctrine/ORM/Query/SqlGetProductLabels.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Enrichment/Component/Product/Connector/Processor/Normalization/GetNormalizedProductModelQualityScores.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Enrichment/Component/Product/Connector/Writer/File/Csv/ProductModelWriter.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Enrichment/Component/Product/Connector/ArrayConverter/StandardToFlat/ProductModel.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Enrichment/Component/Product/Connector/Reader/File/Xlsx/ProductReader.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Enrichment/Component/Product/Connector/Reader/File/Xlsx/ProductAssociationReader.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Enrichment/Component/Product/Connector/Reader/File/Xlsx/ProductModelReader.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Enrichment/Component/Product/Connector/Reader/File/Xlsx/ProductModelAssociationReader.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Enrichment/Component/Product/Connector/Writer/File/Xlsx/ProductWriter.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Enrichment/Component/Product/Connector/Writer/File/Xlsx/ProductModelWriter.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Category/back/Infrastructure/Component/Connector/ArrayConverter/FlatToStandard/Category.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Category/back/Infrastructure/Component/Connector/Reader/Database/CategoryReader.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Category/back/Infrastructure/Component/Connector/ArrayConverter/StandardToFlat/Category.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Enrichment/Component/Product/Connector/Reader/Database/MassEdit/FilteredProductReader.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Enrichment/Component/Product/Connector/Processor/MassEdit/AbstractProcessor.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Enrichment/Component/Product/Connector/Processor/QuickExport/ProductAndProductModelProcessor.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Enrichment/Component/Product/Connector/Reader/Database/MassEdit/FilteredProductModelReader.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Enrichment/Component/Product/Connector/Reader/Database/MassEdit/FilteredProductAndProductModelReader.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Enrichment/Component/Product/Connector/Processor/MassEdit/UpdateProductValueProcessor.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Enrichment/Component/Product/Connector/Processor/MassEdit/AddProductValueProcessor.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Tool/Component/StorageUtils/Updater/PropertyAdderInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Enrichment/Component/Product/Updater/PropertyAdder.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Enrichment/Component/Product/Updater/Adder/AdderRegistryInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Enrichment/Component/Product/Updater/Adder/AdderRegistry.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Enrichment/Component/Product/Updater/Adder/AdderInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Enrichment/Component/Product/Updater/Adder/FieldAdderInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Enrichment/Component/Product/Updater/Adder/AbstractFieldAdder.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Enrichment/Component/Product/Updater/Adder/CategoryFieldAdder.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Enrichment/Component/Product/Updater/Adder/GroupFieldAdder.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Enrichment/Component/Product/Updater/Adder/AttributeAdderInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Enrichment/Component/Product/Updater/Adder/AbstractAttributeAdder.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Enrichment/Component/Product/Updater/Adder/MultiSelectAttributeAdder.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Enrichment/Component/Product/Updater/Adder/AssociationFieldAdder.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Enrichment/Component/Product/Updater/Adder/QuantifiedAssociationFieldAdder.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Enrichment/Component/Product/Updater/Adder/PriceCollectionAttributeAdder.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Enrichment/Component/Product/Connector/Processor/MassEdit/RemoveProductValueProcessor.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Tool/Component/StorageUtils/Updater/PropertyRemoverInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Enrichment/Component/Product/Updater/PropertyRemover.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Enrichment/Component/Product/Updater/Remover/RemoverRegistryInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Enrichment/Component/Product/Updater/Remover/RemoverRegistry.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Enrichment/Component/Product/Updater/Remover/RemoverInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Enrichment/Component/Product/Updater/Remover/FieldRemoverInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Enrichment/Component/Product/Updater/Remover/AbstractFieldRemover.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Enrichment/Component/Product/Updater/Remover/CategoryFieldRemover.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Enrichment/Component/Product/Updater/Remover/AttributeRemoverInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Enrichment/Component/Product/Updater/Remover/AbstractAttributeRemover.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Enrichment/Component/Product/Updater/Remover/PriceCollectionAttributeRemover.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Enrichment/Component/Product/Updater/Remover/GroupFieldRemover.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Enrichment/Component/Product/Updater/Remover/MultiSelectAttributeRemover.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Enrichment/Component/Product/Connector/Reader/Database/MassEdit/ProductAndProductModelReader.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Enrichment/Component/Product/Connector/Writer/Database/MassEdit/ProductAndProductModelWriter.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Enrichment/Component/Product/Connector/Processor/MassEdit/EditAttributesProcessor.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Enrichment/Component/Product/EntityWithFamilyVariant/CheckAttributeEditable.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Enrichment/Component/Product/Connector/Step/MassEditStep.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Enrichment/Component/Product/Connector/Item/MassEdit/TemporaryFileCleaner.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Enrichment/Component/Product/Connector/Processor/MassEdit/AddAttributeValueProcessor.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Enrichment/Component/Product/Connector/Processor/MassEdit/AddToExistingProductModelProcessor.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Enrichment/Component/Product/Connector/Processor/MassEdit/ConvertToSimpleProductProcessor.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Tool/Component/Batch/Item/TrackableTaskletInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Enrichment/Component/Product/Job/DeleteProductsAndProductModelsTasklet.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Enrichment/Component/Product/Command/ProductModel/RemoveProductModelsHandler.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Enrichment/Component/Product/ProductModel/Query/CountProductModelsAndChildrenProductModelsInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Enrichment/Bundle/Storage/Sql/ProductModel/CountProductModelsAndChildrenProductModels.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Enrichment/Component/Product/ProductAndProductModel/Query/CountVariantProductsInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Enrichment/Bundle/Storage/Sql/ProductModel/CountVariantProducts.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Enrichment/Component/Product/Connector/Processor/MassEdit/ChangeParentProcessor.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Enrichment/Component/Product/Job/RemoveNonExistingProductValuesTasklet.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Enrichment/Component/Product/Storage/GetProductAndProductModelIdentifiersWithValuesIgnoringLocaleAndScope.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Enrichment/Bundle/Storage/ElasticsearchAndSql/ProductAndProductModel/ESGetProductAndProductModelIdentifiersWithValuesIgnoringLocaleAndScope.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Structure/Bundle/Job/CleanRemovedAttribute/RegisterCleanJobTasklet.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Enrichment/Bundle/Job/CleanRemovedAttribute/CleanProductModelTasklet.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Enrichment/Component/Product/Query/GetProductModelIdentifiersWithRemovedAttributeInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Enrichment/Bundle/Storage/ElasticsearchAndSql/ProductAndProductModel/GetProductModelIdentifiersWithRemovedAttribute.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Enrichment/Bundle/Job/CleanRemovedAttribute/CleanProductTasklet.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Enrichment/Component/Product/Query/GetProductIdentifiersWithRemovedAttributeInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Enrichment/Bundle/Storage/ElasticsearchAndSql/ProductAndProductModel/GetProductIdentifiersWithRemovedAttribute.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Structure/Bundle/Job/CleanRemovedAttribute/RemoveAttributeCodesFromBlacklistTasklet.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Structure/Component/ArrayConverter/FlatToStandard/Attribute.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Structure/Component/ArrayConverter/FlatToStandard/AttributeOption.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Structure/Component/ArrayConverter/FlatToStandard/AttributeGroup.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Structure/Component/Writer/Database/AttributeGroupWriter.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Enrichment/Component/Product/Connector/Job/EnsureConsistentAttributeGroupOrderTasklet.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Structure/Component/AttributeGroup/Query/FindAttributeGroupOrdersEqualOrSuperiorTo.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Structure/Bundle/Storage/Sql/SqlFindAttributeGroupOrdersEqualOrSuperiorTo.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Structure/Component/ArrayConverter/StandardToFlat/Attribute.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Structure/Component/Reader/Database/AttributeOptionReader.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Structure/Component/ArrayConverter/StandardToFlat/AttributeOption.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Structure/Component/ArrayConverter/StandardToFlat/AttributeGroup.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Structure/Component/ArrayConverter/FlatToStandard/AssociationType.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Structure/Component/ArrayConverter/StandardToFlat/AssociationType.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Structure/Component/ArrayConverter/FlatToStandard/Family.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Enrichment/Component/Product/Connector/Job/ComputeDataRelatedToFamilyRootProductModelsTasklet.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Enrichment/Component/Product/Connector/Job/ComputeDataRelatedToFamilySubProductModelsTasklet.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Enrichment/Component/Product/Connector/Job/ComputeDataRelatedToFamilyProductsTasklet.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Structure/Component/ArrayConverter/FlatToStandard/FamilyVariant.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Structure/Component/ArrayConverter/StandardToFlat/Family.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Structure/Component/ArrayConverter/StandardToFlat/FamilyVariant/FamilyVariant.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Structure/Component/ArrayConverter/StandardToFlat/FamilyVariant/FieldSplitter.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Structure/Component/ArrayConverter/FlatToStandard/GroupType.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Structure/Component/ArrayConverter/StandardToFlat/GroupType.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Structure/Component/Reader/Database/MassEdit/FilteredFamilyReader.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Structure/Component/Processor/MassEdit/SetAttributeRequirements.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Enrichment/Component/Product/Connector/Job/ComputeCompletenessOfFamilyProductsTasklet.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Enrichment/Bundle/Job/IndexFamilyProductsAndProductModelsTasklet.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Tool/Component/Connector/Step/CheckJobUniqueStep.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Tool/Bundle/BatchBundle/Manager/JobExecutionManager.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Platform/Bundle/CatalogVolumeMonitoringBundle/Job/AggregateVolumeQueries.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Platform/Bundle/ImportExportBundle/Job/PurgeJobExecutions.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Tool/Component/Connector/Processor/Denormalization/JobInstanceProcessor.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Tool/Component/Connector/Writer/Database/JobInstanceWriter.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Tool/Bundle/VersioningBundle/Job/RefreshVersioning.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Tool/Bundle/VersioningBundle/Job/PurgeVersioning.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Tool/Bundle/VersioningBundle/Purger/VersionPurgerInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Tool/Bundle/VersioningBundle/Purger/VersionPurger.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Tool/Bundle/VersioningBundle/Doctrine/Query/SqlDeleteVersionsByIdsQuery.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Tool/Bundle/VersioningBundle/Doctrine/Query/SqlGetAllResourceNamesQuery.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Tool/Bundle/VersioningBundle/Doctrine/Query/SqlGetPurgeableVersionListQuery.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Tool/Bundle/VersioningBundle/Purger/VersionPurgerAdvisorInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Tool/Bundle/VersioningBundle/Purger/SkipFirstVersionPurgerAdvisor.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Tool/Bundle/VersioningBundle/Doctrine/Query/SqlGetFirstVersionIdsByIdsQuery.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Tool/Bundle/VersioningBundle/Purger/KeepLastVersionPurgerAdvisor.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Tool/Bundle/VersioningBundle/Doctrine/Query/SqlGetAllButLastVersionIdsByIdsQuery.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Connectivity/Connection/back/Infrastructure/Audit/Job/PurgeAuditErrorTasklet.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Connectivity/Connection/back/Infrastructure/Apps/Job/CreateOpenIdKeysTasklet.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Connectivity/Connection/back/Infrastructure/ErrorManagement/Job/PurgeConnectionErrorsTasklet.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Connectivity/Connection/back/Infrastructure/Webhook/EventsApiDebug/Job/PurgeEventsApiLogs.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Automation/DataQualityInsights/back/Infrastructure/Connector/Tasklet/PrepareProductsCriteriaEvaluationTasklet.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Automation/DataQualityInsights/back/Application/ProductEvaluation/MarkCriteriaToEvaluateInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Automation/DataQualityInsights/back/Application/ProductEvaluation/MarkCriteriaToEvaluate.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Automation/DataQualityInsights/back/Domain/Query/ProductEvaluation/GetUpdatedEntityIdsQueryInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Automation/DataQualityInsights/back/Infrastructure/Elasticsearch/Query/GetUpdatedEntityIdsQuery.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Automation/DataQualityInsights/back/Domain/Query/ProductEvaluation/GetEntityIdsImpactedByAttributeGroupActivationQueryInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Automation/DataQualityInsights/back/Infrastructure/Persistence/Query/ProductEvaluation/GetProductIdsImpactedByAttributeGroupActivationQuery.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Automation/DataQualityInsights/back/Infrastructure/Connector/Tasklet/PrepareProductModelsCriteriaEvaluationTasklet.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Automation/DataQualityInsights/back/Infrastructure/Persistence/Query/ProductEvaluation/GetProductModelIdsImpactedByAttributeGroupActivationQuery.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Automation/DataQualityInsights/back/Infrastructure/Connector/Tasklet/EvaluateProductsAndProductModelsCriteriaTasklet.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Automation/DataQualityInsights/back/Infrastructure/Connector/Tasklet/PurgeOutdatedDataTasklet.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Automation/DataQualityInsights/back/Infrastructure/Connector/Tasklet/ConsolidateDashboardRatesTasklet.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Automation/DataQualityInsights/back/Infrastructure/Connector/Tasklet/RecomputeProductScoresTasklet.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Automation/DataQualityInsights/back/Infrastructure/Connector/Tasklet/SchedulePeriodicTasksTasklet.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/components/catalogs/back/src/Infrastructure/Job/DisableCatalogsOnCurrencyDeactivationTasklet.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/components/catalogs/back/src/Application/Persistence/Catalog/GetCatalogIdsUsingCurrenciesAsFilterQueryInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/components/catalogs/back/src/Infrastructure/Persistence/Catalog/GetCatalogIdsUsingCurrenciesAsFilterQuery.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/components/catalogs/back/src/Infrastructure/Job/DisableCatalogsOnChannelRemovalTasklet.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/components/catalogs/back/src/Application/Persistence/Catalog/GetCatalogIdsUsingChannelsAsFilterQueryInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/components/catalogs/back/src/Infrastructure/Persistence/Catalog/GetCatalogIdsUsingChannelsAsFilterQuery.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/components/catalogs/back/src/Infrastructure/Job/DisableCatalogsOnLocaleDeactivationTasklet.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/components/catalogs/back/src/Application/Persistence/Catalog/GetCatalogIdsUsingLocalesAsFilterQueryInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/components/catalogs/back/src/Infrastructure/Persistence/Catalog/GetCatalogIdsUsingLocalesAsFilterQuery.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/serializer/Normalizer/NormalizerInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/serializer/Normalizer/CacheableSupportsMethodInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/UserManagement/Component/Normalizer/GroupNormalizer.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Tool/Component/Connector/ArrayConverter/FieldsRequirementChecker.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Tool/Component/Buffer/BufferFactory.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Tool/Component/Connector/Writer/File/SimpleColumnPresenter.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Tool/Component/Connector/Reader/File/FileIteratorFactory.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/UserManagement/Component/Updater/GroupUpdater.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/UserManagement/Component/Updater/RoleUpdater.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Channel/back/Infrastructure/Component/Normalizer/Standard/LocaleNormalizer.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Channel/back/Infrastructure/Component/Normalizer/Standard/CurrencyNormalizer.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Enrichment/Component/Product/Query/ProductQueryBuilderOptionsResolverInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Enrichment/Component/Product/Query/ProductQueryBuilderOptionsResolver.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Structure/Component/Factory/GroupTypeFactory.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Structure/Component/Updater/GroupTypeUpdater.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Structure/Component/Factory/AttributeRequirementFactory.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Automation/DataQualityInsights/back/Application/ProductEntityIdFactoryInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Automation/DataQualityInsights/back/Application/ProductUuidFactory.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Automation/DataQualityInsights/back/Application/ProductModelIdFactory.php';

        $container->services['akeneo_batch.job.job_registry'] = $instance = new \Akeneo\Tool\Component\Batch\Job\JobRegistry(($container->services['feature_flags'] ?? $container->getFeatureFlagsService()));

        $a = ($container->services['event_dispatcher'] ?? $container->getEventDispatcherService());
        $b = ($container->privates['akeneo_batch.job_repository'] ?? $container->load('getAkeneoBatch_JobRepositoryService'));
        $c = ($container->privates['pim_user.repository.group'] ?? $container->load('getPimUser_Repository_GroupService'));

        $d = new \Akeneo\Tool\Component\Connector\Reader\Database\Reader($c);
        $e = ($container->privates['akeneo_storage_utils.doctrine.object_detacher'] ?? $container->load('getAkeneoStorageUtils_Doctrine_ObjectDetacherService'));

        $f = new \Akeneo\Tool\Component\Connector\Processor\Normalization\Processor(($container->privates['pim_user.normalizer.user_group'] ?? ($container->privates['pim_user.normalizer.user_group'] = new \Akeneo\UserManagement\Component\Normalizer\GroupNormalizer())), $e);
        $g = ($container->privates['pim_connector.array_convertor.checker.fields_requirement'] ?? ($container->privates['pim_connector.array_convertor.checker.fields_requirement'] = new \Akeneo\Tool\Component\Connector\ArrayConverter\FieldsRequirementChecker()));

        $h = new \Akeneo\Tool\Component\Connector\ArrayConverter\DummyConverter($g, [0 => 'name'], [0 => 'name']);
        $i = ($container->privates['pim_connector.factory.flat_item_buffer'] ?? ($container->privates['pim_connector.factory.flat_item_buffer'] = new \Akeneo\Tool\Component\Buffer\BufferFactory('Akeneo\\Tool\\Component\\Connector\\Writer\\File\\FlatItemBuffer')));
        $j = ($container->privates['pim_connector.writer.file.default.column_presenter'] ?? ($container->privates['pim_connector.writer.file.default.column_presenter'] = new \Akeneo\Tool\Component\Connector\Writer\File\SimpleColumnPresenter()));
        $k = new \Akeneo\Tool\Component\Connector\ArrayConverter\FieldSplitter();

        $l = new \Akeneo\Tool\Component\Connector\Writer\File\FlatItemBufferFlusher($j, new \Akeneo\Tool\Component\Connector\Writer\File\DefaultColumnSorter($k, [0 => 'code', 1 => 'label']));
        $m = ($container->services['doctrine.dbal.default_connection'] ?? $container->getDoctrine_Dbal_DefaultConnectionService());

        $n = new \Akeneo\Tool\Component\Batch\Job\JobStopper($b, new \Akeneo\Tool\Component\Batch\Query\SqlGetJobExecutionStatus($m));
        $o = new \Akeneo\Platform\Bundle\ImportExportBundle\Infrastructure\Step\UploadStep('upload_files', $a, $b, $instance, ($container->services['Akeneo\\Platform\\Bundle\\ImportExportBundle\\Application\\TransferFilesToStorage\\TransferFilesToStorageHandler'] ?? $container->load('getTransferFilesToStorageHandlerService')));
        $p = ($container->services['pim_user.repository.role'] ?? $container->load('getPimUser_Repository_RoleService'));

        $q = new \Akeneo\UserManagement\Component\Connector\Reader\Database\UserRole($p);
        $r = new \Akeneo\Tool\Component\Connector\Processor\Normalization\Processor(($container->privates['pim_user.normalizer.user_role'] ?? $container->load('getPimUser_Normalizer_UserRoleService')), $e);
        $s = new \Akeneo\UserManagement\Component\Connector\ArrayConverter\StandardToFlat\Role($g);
        $t = new \Akeneo\Tool\Component\Connector\Writer\File\FlatItemBufferFlusher($j, new \Akeneo\Tool\Component\Connector\Writer\File\DefaultColumnSorter($k, [0 => 'role', 1 => 'label']));
        $u = ($container->privates['pim_user.repository.user'] ?? $container->load('getPimUser_Repository_UserService'));

        $v = new \Akeneo\UserManagement\Component\Connector\Reader\Database\User($u);
        $w = new \Akeneo\Tool\Component\Connector\Processor\Normalization\Processor(($container->privates['pim_user.normalizer.user.standard'] ?? $container->load('getPimUser_Normalizer_User_StandardService')), $e);
        $x = new \Akeneo\UserManagement\Component\Connector\ArrayConverter\StandardToFlat\User();
        $y = new \Akeneo\Tool\Component\Connector\Writer\File\FlatItemBufferFlusher($j, new \Akeneo\Tool\Component\Connector\Writer\File\DefaultColumnSorter($k, [0 => 'username', 1 => 'email', 2 => 'avatar', 3 => 'catalog_default_locale', 4 => 'catalog_default_scope', 5 => 'default_category_tree', 6 => 'default_product_grid_view', 7 => 'enabled', 8 => 'first_name', 9 => 'groups', 10 => 'last_name', 11 => 'middle_name', 12 => 'name_prefix', 13 => 'name_suffix', 14 => 'phone', 15 => 'product_grid_filters', 16 => 'proposals_state_notifications', 17 => 'proposals_to_review_notification', 18 => 'proposals_state_notifications', 19 => 'proposals_to_review_notification', 20 => 'roles', 21 => 'timezone', 22 => 'user_default_locale']));
        $z = ($container->privates['akeneo_file_storage.repository.file_info'] ?? $container->load('getAkeneoFileStorage_Repository_FileInfoService'));
        $aa = ($container->privates['akeneo_file_storage.file_storage.filesystem_provider'] ?? $container->load('getAkeneoFileStorage_FileStorage_FilesystemProviderService'));
        $ba = new \Akeneo\Tool\Component\Connector\Writer\File\MediaExporterPathGenerator();
        $ca = new \Akeneo\Platform\Bundle\ImportExportBundle\Infrastructure\Step\DownloadStep('download_files', $a, $b, ($container->services['Akeneo\\Platform\\Bundle\\ImportExportBundle\\Application\\DownloadFileFromStorage\\DownloadFileFromStorageHandler'] ?? $container->load('getDownloadFileFromStorageHandlerService')), '/');
        $da = new \Akeneo\Tool\Component\Connector\Step\ValidatorStep('validation', $a, $b, new \Akeneo\Tool\Component\Connector\Item\CharsetValidator());
        $ea = ($container->privates['pim_connector.reader.file.csv_iterator_factory'] ?? ($container->privates['pim_connector.reader.file.csv_iterator_factory'] = new \Akeneo\Tool\Component\Connector\Reader\File\FileIteratorFactory('Akeneo\\Tool\\Component\\Connector\\Reader\\File\\FlatFileIterator', 'csv')));
        $fa = new \Akeneo\Tool\Component\Connector\ArrayConverter\DummyConverter($g, [0 => 'name'], [0 => 'name']);

        $ga = new \Akeneo\Tool\Component\Connector\Reader\File\Csv\Reader($ea, $fa);
        $ha = ($container->services['.container.private.validator'] ?? $container->load('get_Container_Private_ValidatorService'));

        $ia = new \Akeneo\Tool\Component\Connector\Processor\Denormalization\Processor($c, ($container->privates['pim_user.factory.group'] ?? ($container->privates['pim_user.factory.group'] = new \Akeneo\Tool\Component\StorageUtils\Factory\SimpleFactory('Akeneo\\UserManagement\\Component\\Model\\Group'))), ($container->privates['pim_user.updater.group'] ?? ($container->privates['pim_user.updater.group'] = new \Akeneo\UserManagement\Component\Updater\GroupUpdater())), $ha, $e);
        $ja = new \Akeneo\Tool\Component\Connector\Writer\Database\Writer(($container->privates['pim_user.saver.group'] ?? $container->load('getPimUser_Saver_GroupService')), $e);
        $ka = ($container->privates['pim_connector.reader.file.xlsx_iterator_factory'] ?? ($container->privates['pim_connector.reader.file.xlsx_iterator_factory'] = new \Akeneo\Tool\Component\Connector\Reader\File\FileIteratorFactory('Akeneo\\Tool\\Component\\Connector\\Reader\\File\\FlatFileIterator', 'xlsx')));
        $la = new \Akeneo\UserManagement\Component\Connector\ArrayConverter\FlatToStandard\User($g);

        $ma = new \Akeneo\UserManagement\Component\Connector\Reader\File\CsvUserReader($ea, $la);
        $na = ($container->privates['pim_user.factory.user'] ?? $container->load('getPimUser_Factory_UserService'));
        $oa = ($container->privates['pim_user.updater.user'] ?? $container->load('getPimUser_Updater_UserService'));
        $pa = ($container->privates['akeneo_file_storage.file_storage.file.file_storer'] ?? $container->load('getAkeneoFileStorage_FileStorage_File_FileStorerService'));

        $qa = new \Akeneo\UserManagement\Component\Connector\Processor\Denormalization\UserProcessor($u, $na, $oa, $ha, $e, ($container->privates['pim_datagrid.repository.datagrid_view'] ?? $container->load('getPimDatagrid_Repository_DatagridViewService')), $pa, $b, [0 => 'date_account_created', 1 => 'date_account_last_updated', 2 => 'last_logged_in', 3 => 'login_count']);
        $ra = new \Akeneo\Tool\Component\Connector\Writer\Database\Writer(($container->privates['pim_user.saver.user'] ?? $container->load('getPimUser_Saver_UserService')), $e);
        $sa = new \Akeneo\UserManagement\Component\Connector\ArrayConverter\FlatToStandard\RoleWithPermissions($g);
        $ta = ($container->privates['pim_user.updater.role'] ?? ($container->privates['pim_user.updater.role'] = new \Akeneo\UserManagement\Component\Updater\RoleUpdater()));

        $ua = new \Akeneo\UserManagement\Component\Connector\Processor\Denormalization\RoleWithPermissionsProcessor(($container->services['pim_user.repository.role_with_permissions'] ?? $container->load('getPimUser_Repository_RoleWithPermissionsService')), ($container->privates['pim_user.factory.role_with_permissions'] ?? $container->load('getPimUser_Factory_RoleWithPermissionsService')), new \Akeneo\UserManagement\Component\Updater\RoleWithPermissionsUpdater($ta, ($container->services['oro_security.acl.manager'] ?? $container->load('getOroSecurity_Acl_ManagerService'))), $ha);
        $va = new \Akeneo\UserManagement\Component\Connector\Writer\Database\RoleWithPermissionsWriter(($container->services['pim_user.saver.role_with_permissions'] ?? $container->load('getPimUser_Saver_RoleWithPermissionsService')), $e);
        $wa = new \Akeneo\Channel\Infrastructure\Component\ArrayConverter\FlatToStandard\Locale($g);

        $xa = new \Akeneo\Tool\Component\Connector\Reader\File\Csv\Reader($ea, $wa);
        $ya = ($container->privates['pim_catalog.repository.locale'] ?? $container->getPimCatalog_Repository_LocaleService());

        $za = new \Akeneo\Tool\Component\Connector\Processor\Denormalization\Processor($ya, new \Akeneo\Tool\Component\StorageUtils\Factory\SimpleFactory('Akeneo\\Channel\\Infrastructure\\Component\\Model\\Locale'), new \Akeneo\Channel\Infrastructure\Component\Updater\LocaleUpdater(), $ha, $e);
        $ab = new \Akeneo\Tool\Component\Connector\Writer\Database\Writer(($container->privates['pim_catalog.saver.locale'] ?? $container->load('getPimCatalog_Saver_LocaleService')), $e);
        $bb = new \Akeneo\Tool\Component\Connector\Reader\Database\Reader($ya);
        $cb = new \Akeneo\Tool\Component\Connector\Processor\Normalization\Processor(($container->privates['pim_catalog.normalizer.standard.locale'] ?? ($container->privates['pim_catalog.normalizer.standard.locale'] = new \Akeneo\Channel\Infrastructure\Component\Normalizer\Standard\LocaleNormalizer())), $e);
        $db = new \Akeneo\Channel\Infrastructure\Component\ArrayConverter\StandardToFlat\Locale();
        $eb = new \Akeneo\Channel\Infrastructure\Component\ArrayConverter\FlatToStandard\Channel($g);

        $fb = new \Akeneo\Tool\Component\Connector\Reader\File\Csv\Reader($ea, $eb);
        $gb = ($container->services['pim_catalog.repository.channel'] ?? $container->getPimCatalog_Repository_ChannelService());

        $hb = new \Akeneo\Channel\Infrastructure\Processor\Denormalization\ChannelProcessor($gb, ($container->privates['pim_catalog.factory.channel'] ?? ($container->privates['pim_catalog.factory.channel'] = new \Akeneo\Tool\Component\StorageUtils\Factory\SimpleFactory('Akeneo\\Channel\\Infrastructure\\Component\\Model\\Channel'))), ($container->privates['pim_catalog.updater.channel'] ?? $container->load('getPimCatalog_Updater_ChannelService')), $ha, $e);
        $ib = new \Akeneo\Tool\Component\Connector\Writer\Database\Writer(($container->privates['pim_catalog.saver.channel'] ?? $container->load('getPimCatalog_Saver_ChannelService')), $e);
        $jb = new \Akeneo\Tool\Component\Connector\Reader\Database\Reader($gb);
        $kb = new \Akeneo\Tool\Component\Connector\Processor\Normalization\Processor(($container->privates['pim_catalog.normalizer.standard.channel'] ?? $container->load('getPimCatalog_Normalizer_Standard_ChannelService')), $e);
        $lb = new \Akeneo\Channel\Infrastructure\Component\ArrayConverter\StandardToFlat\Channel();
        $mb = new \Akeneo\Channel\Infrastructure\Component\ArrayConverter\FlatToStandard\Currency($g);

        $nb = new \Akeneo\Tool\Component\Connector\Reader\File\Csv\Reader($ea, $mb);
        $ob = ($container->privates['pim_catalog.repository.currency'] ?? $container->load('getPimCatalog_Repository_CurrencyService'));

        $pb = new \Akeneo\Tool\Component\Connector\Processor\Denormalization\Processor($ob, new \Akeneo\Tool\Component\StorageUtils\Factory\SimpleFactory('Akeneo\\Channel\\Infrastructure\\Component\\Model\\Currency'), new \Akeneo\Channel\Infrastructure\Component\Updater\CurrencyUpdater(), $ha, $e);
        $qb = new \Akeneo\Tool\Component\Connector\Writer\Database\Writer(($container->privates['pim_catalog.saver.currency'] ?? $container->load('getPimCatalog_Saver_CurrencyService')), $e);
        $rb = new \Akeneo\Tool\Component\Connector\Reader\Database\Reader($ob);
        $sb = new \Akeneo\Tool\Component\Connector\Processor\Normalization\Processor(($container->privates['pim_catalog.normalizer.standard.currency'] ?? ($container->privates['pim_catalog.normalizer.standard.currency'] = new \Akeneo\Channel\Infrastructure\Component\Normalizer\Standard\CurrencyNormalizer())), $e);
        $tb = new \Akeneo\Channel\Infrastructure\Component\ArrayConverter\StandardToFlat\Currency();
        $ub = ($container->privates['pim_catalog.repository.family'] ?? $container->load('getPimCatalog_Repository_FamilyService'));
        $vb = ($container->privates['pim_catalog.query.product_identifier_query_builder_factory'] ?? $container->load('getPimCatalog_Query_ProductIdentifierQueryBuilderFactoryService'));
        $wb = ($container->privates['pim_catalog.repository.product'] ?? $container->load('getPimCatalog_Repository_ProductService'));
        $xb = ($container->privates['pim_catalog.saver.product'] ?? $container->load('getPimCatalog_Saver_ProductService'));
        $yb = ($container->privates['pim_connector.doctrine.cache_clearer'] ?? $container->load('getPimConnector_Doctrine_CacheClearerService'));
        $zb = ($container->privates['pim_catalog.repository.family_variant'] ?? $container->load('getPimCatalog_Repository_FamilyVariantService'));
        $ac = ($container->privates['pim_catalog.query.product_and_product_model_query_builder_factory'] ?? $container->load('getPimCatalog_Query_ProductAndProductModelQueryBuilderFactoryService'));
        $bc = ($container->privates['pim_catalog.saver.product_model'] ?? $container->load('getPimCatalog_Saver_ProductModelService'));
        $cc = new \Akeneo\Pim\Enrichment\Component\Product\EntityWithFamilyVariant\KeepOnlyValuesForVariation();
        $dc = new \Akeneo\Pim\Enrichment\Component\Product\Connector\ArrayConverter\FlatToStandard\Group($ya, $g);
        $ec = ($container->privates['pim_catalog.repository.group'] ?? $container->load('getPimCatalog_Repository_GroupService'));

        $fc = new \Akeneo\Tool\Component\Connector\Processor\Denormalization\Processor($ec, ($container->privates['pim_catalog.factory.group'] ?? $container->load('getPimCatalog_Factory_GroupService')), ($container->privates['pim_catalog.updater.group'] ?? $container->load('getPimCatalog_Updater_GroupService')), $ha, $e);
        $gc = new \Akeneo\Tool\Component\Connector\Writer\Database\Writer(($container->privates['pim_catalog.saver.group'] ?? $container->load('getPimCatalog_Saver_GroupService')), $e);

        $hc = new \Akeneo\Tool\Component\Batch\Step\ItemStep('import', $a, $b, new \Akeneo\Tool\Component\Connector\Reader\File\Csv\Reader($ea, $dc), $fc, $gc, 100, $n);
        $ic = new \Akeneo\Pim\Enrichment\Component\Product\Connector\Reader\Database\GroupReader($ec);
        $jc = new \Akeneo\Tool\Component\Connector\Processor\Normalization\Processor(($container->privates['pim_catalog.normalizer.standard.group'] ?? $container->load('getPimCatalog_Normalizer_Standard_GroupService')), $e);
        $kc = new \Akeneo\Pim\Enrichment\Component\Product\Connector\ArrayConverter\StandardToFlat\Group();
        $lc = ($container->privates['pim_catalog.repository.association_type'] ?? $container->load('getPimCatalog_Repository_AssociationTypeService'));

        $mc = new \Akeneo\Pim\Enrichment\Component\Product\Connector\ArrayConverter\FlatToStandard\AssociationColumnsResolver($lc);
        $nc = ($container->privates['pim_catalog.repository.attribute'] ?? $container->load('getPimCatalog_Repository_AttributeService'));
        $oc = ($container->privates['pim_catalog.query.find_activated_currencies'] ?? $container->load('getPimCatalog_Query_FindActivatedCurrenciesService'));

        $pc = new \Akeneo\Pim\Enrichment\Component\Product\Connector\ArrayConverter\FlatToStandard\AttributeColumnsResolver($nc, $oc, ($container->privates['pim_catalog.resolver.attribute_values'] ?? $container->load('getPimCatalog_Resolver_AttributeValuesService')));
        $qc = new \Akeneo\Pim\Enrichment\Component\Product\Connector\ArrayConverter\FlatToStandard\FieldSplitter();
        $rc = ($container->privates['pim_catalog.repository.group_type'] ?? $container->load('getPimCatalog_Repository_GroupTypeService'));
        $sc = ($container->privates['pim_catalog.repository.cached_attribute'] ?? $container->load('getPimCatalog_Repository_CachedAttributeService'));

        $tc = new \Akeneo\Pim\Enrichment\Component\Product\Connector\ArrayConverter\FlatToStandard\AttributeColumnInfoExtractor($sc, ($container->privates['pim_catalog.repository.cached_channel'] ?? $container->load('getPimCatalog_Repository_CachedChannelService')), ($container->privates['pim_catalog.repository.cached_locale'] ?? $container->load('getPimCatalog_Repository_CachedLocaleService')), $mc);

        $uc = new \Akeneo\Pim\Enrichment\Component\Product\Connector\ArrayConverter\FlatToStandard\ColumnsMerger($tc, $mc);
        $vc = new \Akeneo\Pim\Enrichment\Component\Product\Connector\ArrayConverter\FlatToStandard\ColumnsMapper();
        $wc = new \Akeneo\Pim\Enrichment\Component\Product\Connector\ArrayConverter\FlatToStandard\ValueConverter\ValueConverterRegistry();
        $wc->register(new \Akeneo\Pim\Enrichment\Component\Product\Connector\ArrayConverter\FlatToStandard\ValueConverter\PriceConverter($qc, [0 => 'pim_catalog_price_collection']));
        $wc->register(new \Akeneo\Pim\Enrichment\Component\Product\Connector\ArrayConverter\FlatToStandard\ValueConverter\MetricConverter($qc, [0 => 'pim_catalog_metric']));
        $wc->register(new \Akeneo\Pim\Enrichment\Component\Product\Connector\ArrayConverter\FlatToStandard\ValueConverter\MultiSelectConverter($qc, [0 => 'pim_catalog_multiselect', 1 => 'pim_reference_data_multiselect']));
        $wc->register(new \Akeneo\Pim\Enrichment\Component\Product\Connector\ArrayConverter\FlatToStandard\ValueConverter\SimpleSelectConverter($qc, [0 => 'pim_catalog_simpleselect', 1 => 'pim_reference_data_simpleselect']));
        $wc->register(new \Akeneo\Pim\Enrichment\Component\Product\Connector\ArrayConverter\FlatToStandard\ValueConverter\TextConverter($qc, [0 => 'pim_catalog_identifier', 1 => 'pim_catalog_text', 2 => 'pim_catalog_textarea']));
        $wc->register(new \Akeneo\Pim\Enrichment\Component\Product\Connector\ArrayConverter\FlatToStandard\ValueConverter\BooleanConverter($qc, [0 => 'pim_catalog_boolean'], ($container->services['translator'] ?? $container->getTranslatorService())));
        $wc->register(new \Akeneo\Pim\Enrichment\Component\Product\Connector\ArrayConverter\FlatToStandard\ValueConverter\MediaConverter($qc, [0 => 'pim_catalog_image', 1 => 'pim_catalog_file']));
        $wc->register(new \Akeneo\Pim\Enrichment\Component\Product\Connector\ArrayConverter\FlatToStandard\ValueConverter\NumberConverter($qc, [0 => 'pim_catalog_number']));
        $wc->register(new \Akeneo\Pim\Enrichment\Component\Product\Connector\ArrayConverter\FlatToStandard\ValueConverter\DateConverter($qc, [0 => 'pim_catalog_date']));

        $xc = new \Akeneo\Pim\Enrichment\Component\Product\Connector\ArrayConverter\FlatToStandard\Value($tc, $wc, $uc);

        $yc = new \Akeneo\Pim\Enrichment\Component\Product\Connector\ArrayConverter\FlatToStandard\Product($mc, $pc, new \Akeneo\Pim\Enrichment\Component\Product\Connector\ArrayConverter\FlatToStandard\FieldConverter($qc, $mc, $rc), $uc, $vc, $g, $nc, $xc);
        $zc = ($container->privates['pim_catalog.localization.localizer.converter'] ?? $container->load('getPimCatalog_Localization_Localizer_ConverterService'));

        $ad = new \Akeneo\Pim\Enrichment\Component\Product\Connector\ArrayConverter\FlatToStandard\EntityWithValuesDelocalized($yc, $zc);
        $bd = new \Akeneo\Tool\Component\Connector\Reader\File\MediaPathTransformer($nc);
        $cd = ($container->privates['pim_catalog.entity_with_family_variant.add_parent_to_product'] ?? $container->load('getPimCatalog_EntityWithFamilyVariant_AddParentToProductService'));
        $dd = ($container->privates['pim_catalog.updater.product'] ?? $container->load('getPimCatalog_Updater_ProductService'));
        $ed = ($container->privates['pim_catalog.validator.product'] ?? $container->load('getPimCatalog_Validator_ProductService'));
        $fd = ($container->privates['pim_catalog.comparator.filter.product'] ?? $container->load('getPimCatalog_Comparator_Filter_ProductService'));
        $gd = ($container->privates['pim_catalog.repository.product_model'] ?? $container->load('getPimCatalog_Repository_ProductModelService'));
        $hd = new \Akeneo\Pim\Enrichment\Component\Product\Connector\Processor\Denormalizer\MediaStorer($pa, $nc);
        $id = ($container->privates['pim_catalog.entity_with_family_variant.remove_parent_from_product'] ?? $container->load('getPimCatalog_EntityWithFamilyVariant_RemoveParentFromProductService'));
        $jd = ($container->privates['akeneo.pim.structure.query.get_attributes'] ?? $container->load('getAkeneo_Pim_Structure_Query_GetAttributesService'));

        $kd = new \Akeneo\Pim\Enrichment\Component\Product\Connector\Processor\CleanLineBreaksInTextAttributes($jd);

        $ld = new \Akeneo\Pim\Enrichment\Component\Product\Connector\Processor\Denormalizer\ProductProcessor($wb, new \Akeneo\Pim\Enrichment\Component\Product\Connector\Processor\Denormalizer\FindProductToImport($wb, ($container->privates['pim_catalog.builder.product'] ?? $container->load('getPimCatalog_Builder_ProductService'))), $cd, $dd, $ed, $e, $fd, new \Akeneo\Pim\Enrichment\Component\Product\ProductModel\Filter\ProductAttributeFilter($gd, ($container->privates['pim_catalog.repository.cached_family'] ?? $container->load('getPimCatalog_Repository_CachedFamilyService')), $wb, $sc), $hd, $id, $kd);
        $md = ($container->privates['pim_versioning.manager.version'] ?? $container->load('getPimVersioning_Manager_VersionService'));

        $nd = new \Akeneo\Pim\Enrichment\Component\Product\Connector\Writer\Database\ProductWriter($md, $xb);

        $od = new \Akeneo\Tool\Component\Batch\Step\ItemStep('import', $a, $b, new \Akeneo\Pim\Enrichment\Component\Product\Connector\Reader\File\Csv\ProductReader($ea, $ad, $bd, []), $ld, $nd, 100, $n);
        $pd = new \Akeneo\Pim\Enrichment\Component\Product\Connector\ArrayConverter\FlatToStandard\ProductAssociation($yc);
        $qd = new \Akeneo\Pim\Enrichment\Component\Product\Comparator\Filter\ProductAssociationFilter(($container->privates['pim_catalog.normalizer.standard.product.associations'] ?? $container->load('getPimCatalog_Normalizer_Standard_Product_AssociationsService')), ($container->privates['pim_catalog.normalizer.standard.product.quantified_associations'] ?? $container->load('getPimCatalog_Normalizer_Standard_Product_QuantifiedAssociationsService')), ($container->privates['pim_catalog.comparator.registry'] ?? $container->load('getPimCatalog_Comparator_RegistryService')));

        $rd = new \Akeneo\Pim\Enrichment\Component\Product\Connector\Processor\Denormalizer\ProductAssociationProcessor($wb, $dd, $ed, $qd, $e);
        $sd = new \Akeneo\Pim\Enrichment\Component\Product\Connector\Writer\Database\ProductAssociationWriter($xb, $e);

        $td = new \Akeneo\Tool\Component\Batch\Step\ItemStep('import_associations', $a, $b, new \Akeneo\Pim\Enrichment\Component\Product\Connector\Reader\File\Csv\ProductAssociationReader($ea, $pd), $rd, $sd, 1, $n);
        $ud = new \Akeneo\Pim\Enrichment\Component\Product\Connector\ArrayConverter\FlatToStandard\ProductModel($vc, new \Akeneo\Pim\Enrichment\Component\Product\Connector\ArrayConverter\FlatToStandard\ProductModel\FieldConverter($qc, $mc), $xc, $uc, $pc, $g, $mc);

        $vd = new \Akeneo\Pim\Enrichment\Component\Product\Connector\ArrayConverter\FlatToStandard\EntityWithValuesDelocalized($ud, $zc);

        $wd = new \Akeneo\Pim\Enrichment\Component\Product\Connector\Reader\File\Csv\ProductModelReader($ea, $vd, $bd, []);
        $xd = ($container->privates['pim_catalog.factory.product_model'] ?? ($container->privates['pim_catalog.factory.product_model'] = new \Akeneo\Tool\Component\StorageUtils\Factory\SimpleFactory('Akeneo\\Pim\\Enrichment\\Component\\Product\\Model\\ProductModel')));
        $yd = ($container->privates['pim_catalog.updater.product_model'] ?? $container->load('getPimCatalog_Updater_ProductModelService'));
        $zd = ($container->privates['pim_catalog.comparator.filter.product_model'] ?? $container->load('getPimCatalog_Comparator_Filter_ProductModelService'));
        $ae = new \Akeneo\Pim\Enrichment\Component\Product\ProductModel\Filter\ProductModelAttributeFilter($zb, $gd, $sc);

        $be = new \Akeneo\Pim\Enrichment\Component\Product\Connector\Processor\Denormalizer\ProductModelProcessor($xd, $yd, $gd, $ed, $zd, $e, $ae, $hd, $kd, 'root_product_model');
        $ce = new \Akeneo\Pim\Enrichment\Component\Product\Connector\Writer\Database\ProductModelWriter($md, $bc);

        $de = new \Akeneo\Tool\Component\Batch\Step\ItemStep('import_root_product_model', $a, $b, $wd, $be, $ce, 100, $n);
        $ee = new \Akeneo\Pim\Enrichment\Component\Product\Connector\Processor\Denormalizer\ProductModelProcessor($xd, $yd, $gd, $ed, $zd, $e, $ae, $hd, $kd, 'sub_product_model');

        $fe = new \Akeneo\Tool\Component\Batch\Step\ItemStep('import_sub_product_model', $a, $b, $wd, $ee, $ce, 100, $n);
        $ge = new \Akeneo\Pim\Enrichment\Component\Product\Connector\ArrayConverter\FlatToStandard\ProductModelAssociation($ud);
        $he = new \Akeneo\Pim\Enrichment\Component\Product\Connector\Processor\Denormalizer\ProductModelAssociationProcessor($gd, $yd, $ed, $qd, $e);
        $ie = new \Akeneo\Pim\Enrichment\Component\Product\Connector\Writer\Database\ProductAssociationWriter($bc, $e);
        $je = ($container->services['akeneo_elasticsearch.client.product_and_product_model'] ?? $container->load('getAkeneoElasticsearch_Client_ProductAndProductModelService'));
        $ke = ($container->privates['pim_catalog.builder.entity_with_values'] ?? $container->load('getPimCatalog_Builder_EntityWithValuesService'));

        $le = new \Akeneo\Pim\Enrichment\Component\Product\Converter\MetricConverter(($container->privates['akeneo_measure.measure_converter'] ?? $container->load('getAkeneoMeasure_MeasureConverterService')), $ke, $sc);

        $me = new \Akeneo\Pim\Enrichment\Component\Product\Connector\Reader\Database\ProductReader(new \Akeneo\Pim\Enrichment\Bundle\Elasticsearch\ProductQueryBuilderFactory('Akeneo\\Pim\\Enrichment\\Component\\Product\\Query\\ProductQueryBuilder', $nc, ($container->privates['pim_catalog.query.filter.product_registry'] ?? $container->load('getPimCatalog_Query_Filter_ProductRegistryService')), ($container->privates['pim_catalog.query.sorter.registry'] ?? $container->load('getPimCatalog_Query_Sorter_RegistryService')), new \Akeneo\Pim\Enrichment\Bundle\Elasticsearch\CursorFactory($je, $wb, $gd, 100), ($container->privates['pim_catalog.query.product_query_builder_resolver'] ?? ($container->privates['pim_catalog.query.product_query_builder_resolver'] = new \Akeneo\Pim\Enrichment\Component\Product\Query\ProductQueryBuilderOptionsResolver()))), $gb, $le);
        $ne = ($container->privates['pim_catalog.normalizer.standard.product'] ?? $container->load('getPimCatalog_Normalizer_Standard_ProductService'));
        $oe = ($container->privates['pim_catalog.product_model.fill_missing_values'] ?? $container->load('getPimCatalog_ProductModel_FillMissingValuesService'));
        $pe = ($container->services['akeneo.pim.automation.data_quality_insights.feature'] ?? ($container->services['akeneo.pim.automation.data_quality_insights.feature'] = new \Akeneo\Platform\Bundle\FeatureFlagBundle\Configuration\EnvVarFeatureFlag($container->getEnv('bool:FLAG_DATA_QUALITY_INSIGHTS_ENABLED'))));

        $qe = new \Akeneo\Pim\Enrichment\Component\Product\Connector\Processor\Normalization\ProductProcessor($ne, $gb, $nc, $oe, $jd, new \Akeneo\Pim\Enrichment\Component\Product\Connector\Processor\Normalization\GetNormalizedProductQualityScores(($container->privates['Akeneo\\Pim\\Automation\\DataQualityInsights\\PublicApi\\Query\\ProductEvaluation\\GetProductScoresQuery'] ?? $container->load('getGetProductScoresQuery2Service')), $pe));
        $re = new \Akeneo\Pim\Enrichment\Component\Product\Connector\ArrayConverter\StandardToFlat\Product\ValueConverter\ValueConverterRegistry();
        $re->register(new \Akeneo\Pim\Enrichment\Component\Product\Connector\ArrayConverter\StandardToFlat\Product\ValueConverter\PriceConverter($pc, [0 => 'pim_catalog_price_collection']), 100);
        $re->register(new \Akeneo\Pim\Enrichment\Component\Product\Connector\ArrayConverter\StandardToFlat\Product\ValueConverter\MetricConverter($pc, [0 => 'pim_catalog_metric']), 100);
        $re->register(new \Akeneo\Pim\Enrichment\Component\Product\Connector\ArrayConverter\StandardToFlat\Product\ValueConverter\MultiSelectConverter($pc, [0 => 'pim_catalog_multiselect', 1 => 'pim_reference_data_multiselect']), 100);
        $re->register(new \Akeneo\Pim\Enrichment\Component\Product\Connector\ArrayConverter\StandardToFlat\Product\ValueConverter\SimpleSelectConverter($pc, [0 => 'pim_catalog_simpleselect', 1 => 'pim_reference_data_simpleselect']), 100);
        $re->register(new \Akeneo\Pim\Enrichment\Component\Product\Connector\ArrayConverter\StandardToFlat\Product\ValueConverter\TextConverter($pc, [0 => 'pim_catalog_identifier', 1 => 'pim_catalog_text', 2 => 'pim_catalog_textarea', 3 => 'pim_catalog_number']), 100);
        $re->register(new \Akeneo\Pim\Enrichment\Component\Product\Connector\ArrayConverter\StandardToFlat\Product\ValueConverter\BooleanConverter($pc, [0 => 'pim_catalog_boolean']), 100);
        $re->register(new \Akeneo\Pim\Enrichment\Component\Product\Connector\ArrayConverter\StandardToFlat\Product\ValueConverter\MediaConverter($pc, [0 => 'pim_catalog_image', 1 => 'pim_catalog_file']), 100);
        $re->register(new \Akeneo\Pim\Enrichment\Component\Product\Connector\ArrayConverter\StandardToFlat\Product\ValueConverter\DateConverter($pc, [0 => 'pim_catalog_date']), 100);

        $se = new \Akeneo\Pim\Enrichment\Component\Product\Connector\ArrayConverter\StandardToFlat\Product\ProductValueConverter($re, $sc);
        $te = new \Akeneo\Pim\Enrichment\Component\Product\Connector\ArrayConverter\StandardToFlat\Product\QualityScoreConverter();

        $ue = new \Akeneo\Pim\Enrichment\Component\Product\Connector\ArrayConverter\StandardToFlat\ProductLocalized(new \Akeneo\Pim\Enrichment\Component\Product\Connector\ArrayConverter\StandardToFlat\Product($se, $te), $zc);
        $ve = new \Akeneo\Pim\Enrichment\Component\Product\Connector\Writer\TranslatedColumnPresenter();

        $we = new \Akeneo\Tool\Component\Connector\Writer\File\FlatItemBufferFlusher($ve, new \Akeneo\Pim\Enrichment\Component\Product\Connector\ProductColumnSorter($qc, $nc, $lc, [0 => 'categories', 1 => 'enabled', 2 => 'family', 3 => 'parent', 4 => 'groups']));
        $xe = new \Akeneo\Pim\Enrichment\Bundle\Storage\Sql\Connector\Writer\File\Flat\GenerateHeadersFromFamilyCodes($m);
        $ye = new \Akeneo\Pim\Enrichment\Bundle\Storage\Sql\Connector\Writer\File\Flat\GenerateHeadersFromAttributeCodes($m);
        $ze = new \Akeneo\Pim\Enrichment\Component\Product\Connector\FlatTranslator\HeaderRegistry();

        $af = ($container->privates['pim_catalog.localization.translator.label'] ?? $container->load('getPimCatalog_Localization_Translator_LabelService'));

        $ze->addTranslator(new \Akeneo\Pim\Enrichment\Component\Product\Connector\FlatTranslator\Header\AssociationTranslator($mc, $af, new \Akeneo\Pim\Structure\Bundle\Query\PublicApi\Association\Sql\SqlGetAssociationTypeTranslations($m)));
        $ze->addTranslator(new \Akeneo\Pim\Enrichment\Component\Product\Connector\FlatTranslator\Header\AttributeTranslator($af, $pc, $tc, new \Akeneo\Pim\Structure\Bundle\Query\PublicApi\Channel\Sql\SqlGetChannelTranslations($m), new \Akeneo\Tool\Component\Localization\LanguageTranslator(), new \Akeneo\Tool\Component\Localization\CurrencyTranslator(), ($container->privates['akeneo.pim.structure.query.get_attribute_translations'] ?? $container->load('getAkeneo_Pim_Structure_Query_GetAttributeTranslationsService'))));
        $ze->addTranslator(new \Akeneo\Pim\Enrichment\Component\Product\Connector\FlatTranslator\Header\PropertyTranslator($af, [0 => 'uuid', 1 => 'categories', 2 => 'family_variant', 3 => 'enabled', 4 => 'family', 5 => 'parent', 6 => 'groups']));
        $bf = new \Akeneo\Pim\Enrichment\Component\Product\Connector\FlatTranslator\PropertyValueRegistry();

        $cf = new \Akeneo\Pim\Structure\Bundle\Query\PublicApi\Group\Sql\SqlGetGroupTranslations($m);
        $df = new \Akeneo\Pim\Enrichment\Bundle\Doctrine\ORM\Query\SqlGetProductModelLabels($m);

        $bf->addTranslator(new \Akeneo\Pim\Enrichment\Component\Product\Connector\FlatTranslator\PropertyValue\CategoryTranslator(new \Akeneo\Pim\Structure\Bundle\Query\PublicApi\Category\Sql\SqlGetCategoryTranslations($m)));
        $bf->addTranslator(new \Akeneo\Pim\Enrichment\Component\Product\Connector\FlatTranslator\PropertyValue\FamilyTranslator(new \Akeneo\Pim\Structure\Bundle\Query\PublicApi\Family\Sql\SqlGetFamilyTranslations($m)));
        $bf->addTranslator(new \Akeneo\Pim\Enrichment\Component\Product\Connector\FlatTranslator\PropertyValue\FamilyVariantTranslator(new \Akeneo\Pim\Structure\Bundle\Query\PublicApi\FamilyVariant\Sql\SqlGetFamilyVariantTranslations($m)));
        $bf->addTranslator(new \Akeneo\Pim\Enrichment\Component\Product\Connector\FlatTranslator\PropertyValue\GroupTranslator($cf));
        $bf->addTranslator(new \Akeneo\Pim\Enrichment\Component\Product\Connector\FlatTranslator\PropertyValue\EnabledTranslator($af));
        $bf->addTranslator(new \Akeneo\Pim\Enrichment\Component\Product\Connector\FlatTranslator\PropertyValue\ParentTranslator($df));
        $ef = new \Akeneo\Pim\Enrichment\Component\Product\Connector\FlatTranslator\AttributeValueRegistry();

        $ff = new \Akeneo\Pim\Structure\Bundle\Query\PublicApi\AttributeOption\Cache\LruCachedGetExistingAttributeOptionsWithValues(new \Akeneo\Pim\Structure\Bundle\Query\PublicApi\AttributeOption\Sql\SqlGetExistingAttributeOptionsWithValues($m));

        $ef->addTranslator(new \Akeneo\Pim\Enrichment\Component\Product\Connector\FlatTranslator\AttributeValue\BooleanTranslator($af));
        $ef->addTranslator(new \Akeneo\Pim\Enrichment\Component\Product\Connector\FlatTranslator\AttributeValue\MetricTranslator(($container->privates['akeneo_measurement.service_api.get_unit_translations'] ?? $container->load('getAkeneoMeasurement_ServiceApi_GetUnitTranslationsService'))));
        $ef->addTranslator(new \Akeneo\Pim\Enrichment\Component\Product\Connector\FlatTranslator\AttributeValue\MultiSelectTranslator($ff));
        $ef->addTranslator(new \Akeneo\Pim\Enrichment\Component\Product\Connector\FlatTranslator\AttributeValue\SimpleSelectTranslator($ff));

        $gf = new \Akeneo\Pim\Enrichment\Component\Product\Connector\FlatTranslator\AttributeValuesFlatTranslator($ef, $tc, $pc);
        $hf = new \Akeneo\Pim\Enrichment\Component\Product\Connector\FlatTranslator\AssociationTranslator($mc, $df, new \Akeneo\Pim\Enrichment\Bundle\Doctrine\ORM\Query\SqlGetProductLabels($m), $cf);

        $if = new \Akeneo\Pim\Enrichment\Component\Product\Connector\FlatTranslator\ProductAndProductModelFlatTranslator($ze, $bf, $gf, $hf);
        $jf = ($container->privates['pim_catalog.query.product_model_query_builder_factory'] ?? $container->load('getPimCatalog_Query_ProductModelQueryBuilderFactoryService'));

        $kf = new \Akeneo\Pim\Enrichment\Component\Product\Connector\Reader\Database\ProductReader($jf, $gb, $le);
        $lf = ($container->privates['pim_catalog.normalizer.standard.product_model'] ?? $container->load('getPimCatalog_Normalizer_Standard_ProductModelService'));

        $mf = new \Akeneo\Pim\Enrichment\Component\Product\Connector\Processor\Normalization\ProductProcessor($lf, $gb, $nc, $oe, $jd, new \Akeneo\Pim\Enrichment\Component\Product\Connector\Processor\Normalization\GetNormalizedProductModelQualityScores(($container->privates['Akeneo\\Pim\\Automation\\DataQualityInsights\\PublicApi\\Query\\ProductEvaluation\\GetProductModelScoresQuery'] ?? $container->load('getGetProductModelScoresQuery2Service')), $pe));
        $nf = new \Akeneo\Pim\Enrichment\Component\Product\Connector\ArrayConverter\StandardToFlat\ProductLocalized(new \Akeneo\Pim\Enrichment\Component\Product\Connector\ArrayConverter\StandardToFlat\ProductModel($se, $te), $zc);
        $of = new \Akeneo\Pim\Enrichment\Component\Product\Connector\Writer\TranslatedColumnPresenter();

        $pf = new \Akeneo\Tool\Component\Connector\Writer\File\FlatItemBufferFlusher($of, new \Akeneo\Pim\Enrichment\Component\Product\Connector\ProductColumnSorter($qc, $nc, $lc, [0 => 'code', 1 => 'family_variant', 2 => 'parent', 3 => 'categories']));
        $qf = new \Akeneo\Pim\Enrichment\Component\Product\Connector\FlatTranslator\ProductAndProductModelFlatTranslator($ze, $bf, $gf, $hf);
        $rf = new \Akeneo\Pim\Enrichment\Component\Product\Connector\Reader\File\Xlsx\ProductModelReader($ka, $vd, $bd, []);
        $sf = new \Akeneo\Category\Infrastructure\Component\Connector\ArrayConverter\FlatToStandard\Category($g);
        $tf = ($container->privates['pim_catalog.repository.category'] ?? $container->getPimCatalog_Repository_CategoryService());

        $uf = new \Akeneo\Tool\Component\Connector\Processor\Denormalization\Processor($tf, ($container->privates['pim_catalog.factory.category'] ?? ($container->privates['pim_catalog.factory.category'] = new \Akeneo\Tool\Component\StorageUtils\Factory\SimpleFactory('Akeneo\\Category\\Infrastructure\\Component\\Model\\Category'))), ($container->privates['pim_catalog.updater.category_translatable'] ?? $container->load('getPimCatalog_Updater_CategoryTranslatableService')), $ha, $e);
        $vf = new \Akeneo\Tool\Component\Connector\Writer\Database\Writer(($container->privates['pim_catalog.saver.category'] ?? $container->load('getPimCatalog_Saver_CategoryService')), $e);

        $wf = new \Akeneo\Tool\Component\Batch\Step\ItemStep('import', $a, $b, new \Akeneo\Tool\Component\Connector\Reader\File\Csv\Reader($ea, $sf), $uf, $vf, 1, $n);
        $xf = new \Akeneo\Category\Infrastructure\Component\Connector\Reader\Database\CategoryReader($tf);
        $yf = new \Akeneo\Tool\Component\Connector\Processor\Normalization\Processor(($container->privates['pim_catalog.normalizer.standard.category'] ?? $container->load('getPimCatalog_Normalizer_Standard_CategoryService')), $e);
        $zf = new \Akeneo\Category\Infrastructure\Component\Connector\ArrayConverter\StandardToFlat\Category();
        $ag = new \Akeneo\Pim\Enrichment\Component\Product\Connector\Reader\Database\MassEdit\FilteredProductReader($ac, $gb, $le);
        $bg = ($container->privates['pim_catalog.product.fill_missing_values'] ?? $container->load('getPimCatalog_Product_FillMissingValuesService'));
        $cg = ($container->privates['pim_user.provider.user'] ?? $container->load('getPimUser_Provider_UserService'));
        $dg = ($container->services['.container.private.security.token_storage'] ?? $container->get_Container_Private_Security_TokenStorageService());

        $eg = new \Akeneo\Pim\Enrichment\Component\Product\Connector\Processor\QuickExport\ProductAndProductModelProcessor($ne, $gb, $nc, $oe, $bg, $e, $cg, $dg);
        $fg = new \Akeneo\Tool\Component\Connector\Writer\File\FlatItemBufferFlusher($ve, new \Akeneo\Pim\Enrichment\Component\Product\Connector\ProductColumnSorter($qc, $nc, $lc, [0 => 'label']));

        $gg = new \Akeneo\Tool\Component\Batch\Step\ItemStep('quick_export', $a, $b, $ag, $eg, new \Akeneo\Pim\Enrichment\Component\Product\Connector\Writer\File\Csv\ProductWriter($ue, $i, $fg, $nc, $ba, $xe, $ye, $if, $z, $aa, [0 => 'pim_catalog_file', 1 => 'pim_catalog_image'], 'filePathProduct'), 100, $n);
        $hg = new \Akeneo\Pim\Enrichment\Component\Product\Connector\Reader\Database\MassEdit\FilteredProductModelReader($ac, $gb, $le);
        $ig = new \Akeneo\Pim\Enrichment\Component\Product\Connector\Processor\QuickExport\ProductAndProductModelProcessor($lf, $gb, $nc, $oe, $bg, $e, $cg, $dg);
        $jg = new \Akeneo\Tool\Component\Connector\Writer\File\FlatItemBufferFlusher($of, new \Akeneo\Pim\Enrichment\Component\Product\Connector\ProductColumnSorter($qc, $nc, $lc, [0 => 'code']));

        $kg = new \Akeneo\Tool\Component\Batch\Step\ItemStep('quick_export_product_model', $a, $b, $hg, $ig, new \Akeneo\Pim\Enrichment\Component\Product\Connector\Writer\File\Csv\ProductModelWriter($nf, $i, $jg, $nc, $ba, $qf, $z, $aa, [0 => 'pim_catalog_file', 1 => 'pim_catalog_image'], 'filePathProductModel'), 100, $n);
        $lg = new \Akeneo\Tool\Component\Batch\Step\ItemStep('quick_export', $a, $b, $ag, $eg, new \Akeneo\Pim\Enrichment\Component\Product\Connector\Writer\File\Xlsx\ProductWriter($ue, $i, $fg, $nc, $ba, $xe, $ye, $if, $z, $aa, [0 => 'pim_catalog_file', 1 => 'pim_catalog_image'], 'filePathProduct'), 100, $n);
        $mg = new \Akeneo\Tool\Component\Batch\Step\ItemStep('quick_export_product_model', $a, $b, $hg, $ig, new \Akeneo\Pim\Enrichment\Component\Product\Connector\Writer\File\Xlsx\ProductModelWriter($nf, $i, $jg, $nc, $ba, $qf, $z, $aa, [0 => 'pim_catalog_file', 1 => 'pim_catalog_image'], 'filePathProductModel'), 100, $n);
        $ng = new \Akeneo\Pim\Enrichment\Component\Product\Connector\Reader\Database\MassEdit\FilteredProductAndProductModelReader($ac, $gb, $le, true);
        $og = new \Akeneo\Pim\Enrichment\Component\Product\Connector\Processor\MassEdit\UpdateProductValueProcessor(($container->privates['pim_catalog.updater.property_setter'] ?? $container->load('getPimCatalog_Updater_PropertySetterService')), $ed);
        $pg = new \Akeneo\Pim\Enrichment\Component\Product\Connector\Reader\Database\MassEdit\FilteredProductAndProductModelReader($ac, $gb, $le, false);
        $qg = new \Akeneo\Pim\Enrichment\Component\Product\Updater\Adder\AdderRegistry($sc);

        $rg = ($container->privates['pim_catalog.repository.cached_category'] ?? $container->load('getPimCatalog_Repository_CachedCategoryService'));

        $qg->register(new \Akeneo\Pim\Enrichment\Component\Product\Updater\Adder\CategoryFieldAdder($rg, [0 => 'categories']));
        $qg->register(new \Akeneo\Pim\Enrichment\Component\Product\Updater\Adder\GroupFieldAdder($ec, [0 => 'groups']));
        $qg->register(new \Akeneo\Pim\Enrichment\Component\Product\Updater\Adder\MultiSelectAttributeAdder($ke, [0 => 'pim_catalog_multiselect', 1 => 'pim_reference_data_multiselect']));
        $qg->register(new \Akeneo\Pim\Enrichment\Component\Product\Updater\Adder\AssociationFieldAdder($wb, $gd, $ec, ($container->privates['pim_catalog.association.missing_association_adder'] ?? $container->load('getPimCatalog_Association_MissingAssociationAdderService')), $lc, ($container->privates['pim_catalog.association.two_way_association_updater'] ?? $container->load('getPimCatalog_Association_TwoWayAssociationUpdaterService')), [0 => 'associations']));
        $qg->register(new \Akeneo\Pim\Enrichment\Component\Product\Updater\Adder\QuantifiedAssociationFieldAdder([0 => 'quantified_associations']));
        $qg->register(new \Akeneo\Pim\Enrichment\Component\Product\Updater\Adder\PriceCollectionAttributeAdder($ke, ($container->privates['pim_standard_format_serializer'] ?? $container->load('getPimStandardFormatSerializerService')), [0 => 'pim_catalog_price_collection']));

        $sg = new \Akeneo\Pim\Enrichment\Component\Product\Updater\PropertyAdder($sc, $qg);

        $tg = new \Akeneo\Pim\Enrichment\Component\Product\Connector\Processor\MassEdit\AddProductValueProcessor($sg, $ed);
        $ug = new \Akeneo\Pim\Enrichment\Component\Product\Updater\Remover\RemoverRegistry($sc);

        $vg = ($container->privates['pim_catalog.validator.helper.attribute'] ?? $container->load('getPimCatalog_Validator_Helper_AttributeService'));

        $ug->register(new \Akeneo\Pim\Enrichment\Component\Product\Updater\Remover\CategoryFieldRemover($rg, [0 => 'categories']));
        $ug->register(new \Akeneo\Pim\Enrichment\Component\Product\Updater\Remover\PriceCollectionAttributeRemover($vg, $oc, $ke, [0 => 'pim_catalog_price_collection']));
        $ug->register(new \Akeneo\Pim\Enrichment\Component\Product\Updater\Remover\GroupFieldRemover($ec, [0 => 'groups']));
        $ug->register(new \Akeneo\Pim\Enrichment\Component\Product\Updater\Remover\MultiSelectAttributeRemover($vg, $ke, [0 => 'pim_catalog_multiselect']));

        $wg = new \Akeneo\Pim\Enrichment\Component\Product\Connector\Processor\MassEdit\RemoveProductValueProcessor(new \Akeneo\Pim\Enrichment\Component\Product\Updater\PropertyRemover($sc, $ug), $ed);
        $xg = new \Akeneo\Pim\Enrichment\Component\Product\Connector\Reader\Database\MassEdit\ProductAndProductModelReader($ac, $gb, false);
        $yg = new \Akeneo\Pim\Enrichment\Component\Product\Connector\Writer\Database\MassEdit\ProductAndProductModelWriter($md, $xb, $bc);
        $zg = new \Akeneo\Pim\Enrichment\Component\Product\Connector\Reader\Database\MassEdit\ProductAndProductModelReader($ac, $gb, true);
        $ah = new \Akeneo\Pim\Enrichment\Component\Product\EntityWithFamilyVariant\CheckAttributeEditable();
        $bh = ($container->privates['pim_catalog.manager.attribute_code_blacklister'] ?? $container->load('getPimCatalog_Manager_AttributeCodeBlacklisterService'));
        $ch = new \Akeneo\Pim\Structure\Component\ArrayConverter\FlatToStandard\Attribute($g, [0 => 'localizable', 1 => 'useable_as_grid_filter', 2 => 'unique', 3 => 'required', 4 => 'scopable', 5 => 'wysiwyg_enabled', 6 => 'decimals_allowed', 7 => 'negative_allowed', 8 => 'auto_option_sorting', 9 => 'is_read_only', 10 => 'default_value']);
        $dh = new \Akeneo\Tool\Component\Connector\Processor\Denormalization\Processor($nc, ($container->privates['pim_catalog.factory.attribute'] ?? $container->load('getPimCatalog_Factory_AttributeService')), ($container->privates['pim_catalog.updater.attribute'] ?? $container->load('getPimCatalog_Updater_AttributeService')), $ha, $e);
        $eh = new \Akeneo\Tool\Component\Connector\Writer\Database\Writer(($container->privates['pim_catalog.saver.attribute'] ?? $container->load('getPimCatalog_Saver_AttributeService')), $e);

        $fh = new \Akeneo\Tool\Component\Batch\Step\ItemStep('import', $a, $b, new \Akeneo\Tool\Component\Connector\Reader\File\Csv\Reader($ea, $ch), $dh, $eh, 100, $n);
        $gh = new \Akeneo\Pim\Structure\Component\ArrayConverter\FlatToStandard\AttributeOption($ya, $g);
        $hh = ($container->privates['pim_catalog.repository.attribute_option'] ?? $container->load('getPimCatalog_Repository_AttributeOptionService'));

        $ih = new \Akeneo\Tool\Component\Connector\Processor\Denormalization\Processor($hh, ($container->privates['pim_catalog.factory.attribute_option'] ?? ($container->privates['pim_catalog.factory.attribute_option'] = new \Akeneo\Tool\Component\StorageUtils\Factory\SimpleFactory('Akeneo\\Pim\\Structure\\Component\\Model\\AttributeOption'))), ($container->privates['pim_catalog.updater.attribute_option'] ?? $container->load('getPimCatalog_Updater_AttributeOptionService')), $ha, $e);
        $jh = new \Akeneo\Tool\Component\Connector\Writer\Database\Writer(($container->privates['pim_catalog.saver.attribute_option'] ?? $container->load('getPimCatalog_Saver_AttributeOptionService')), $e);

        $kh = new \Akeneo\Tool\Component\Batch\Step\ItemStep('import', $a, $b, new \Akeneo\Tool\Component\Connector\Reader\File\Csv\Reader($ea, $gh), $ih, $jh, 100, $n);
        $lh = new \Akeneo\Pim\Structure\Component\ArrayConverter\FlatToStandard\AttributeGroup($g);

        $mh = new \Akeneo\Tool\Component\Connector\Reader\File\Csv\Reader($ea, $lh);
        $nh = ($container->privates['pim_catalog.repository.attribute_group'] ?? $container->load('getPimCatalog_Repository_AttributeGroupService'));

        $oh = new \Akeneo\Tool\Component\Connector\Processor\Denormalization\Processor($nh, ($container->privates['pim_catalog.factory.attribute_group'] ?? ($container->privates['pim_catalog.factory.attribute_group'] = new \Akeneo\Tool\Component\StorageUtils\Factory\SimpleFactory('Akeneo\\Pim\\Structure\\Component\\Model\\AttributeGroup'))), ($container->privates['pim_catalog.updater.attribute_group'] ?? $container->load('getPimCatalog_Updater_AttributeGroupService')), $ha, $e);
        $ph = ($container->privates['pim_catalog.saver.attribute_group'] ?? $container->load('getPimCatalog_Saver_AttributeGroupService'));

        $qh = new \Akeneo\Pim\Structure\Component\Writer\Database\AttributeGroupWriter($ph, $e, $nh);
        $rh = new \Akeneo\Tool\Component\Connector\Reader\Database\Reader($nc);
        $sh = new \Akeneo\Tool\Component\Connector\Processor\Normalization\Processor(($container->privates['pim_catalog.normalizer.standard.attribute'] ?? $container->load('getPimCatalog_Normalizer_Standard_AttributeService')), $e);
        $th = new \Akeneo\Pim\Structure\Component\ArrayConverter\StandardToFlat\Attribute([0 => 'localizable', 1 => 'useable_as_grid_filter', 2 => 'unique', 3 => 'required', 4 => 'scopable', 5 => 'wysiwyg_enabled', 6 => 'decimals_allowed', 7 => 'negative_allowed', 8 => 'auto_option_sorting', 9 => 'is_read_only', 10 => 'default_value']);
        $uh = new \Akeneo\Pim\Structure\Component\Reader\Database\AttributeOptionReader($hh);
        $vh = new \Akeneo\Tool\Component\Connector\Processor\Normalization\Processor(($container->privates['pim_catalog.normalizer.standard.attribute_option'] ?? $container->load('getPimCatalog_Normalizer_Standard_AttributeOptionService')), $e);
        $wh = new \Akeneo\Pim\Structure\Component\ArrayConverter\StandardToFlat\AttributeOption();
        $xh = new \Akeneo\Tool\Component\Connector\Reader\Database\Reader($nh);
        $yh = new \Akeneo\Tool\Component\Connector\Processor\Normalization\Processor(($container->privates['pim_catalog.normalizer.standard.attribute_group'] ?? $container->load('getPimCatalog_Normalizer_Standard_AttributeGroupService')), $e);
        $zh = new \Akeneo\Pim\Structure\Component\ArrayConverter\StandardToFlat\AttributeGroup();
        $ai = new \Akeneo\Pim\Structure\Component\ArrayConverter\FlatToStandard\AssociationType($g);
        $bi = new \Akeneo\Tool\Component\Connector\Processor\Denormalization\Processor($lc, ($container->privates['pim_catalog.factory.association_type'] ?? ($container->privates['pim_catalog.factory.association_type'] = new \Akeneo\Tool\Component\StorageUtils\Factory\SimpleFactory('Akeneo\\Pim\\Structure\\Component\\Model\\AssociationType'))), ($container->privates['pim_catalog.updater.association_type'] ?? $container->load('getPimCatalog_Updater_AssociationTypeService')), $ha, $e);
        $ci = new \Akeneo\Tool\Component\Connector\Writer\Database\Writer(($container->privates['pim_catalog.saver.association_type'] ?? $container->load('getPimCatalog_Saver_AssociationTypeService')), $e);

        $di = new \Akeneo\Tool\Component\Batch\Step\ItemStep('import', $a, $b, new \Akeneo\Tool\Component\Connector\Reader\File\Csv\Reader($ea, $ai), $bi, $ci, 100, $n);
        $ei = new \Akeneo\Tool\Component\Connector\Reader\Database\Reader($lc);
        $fi = new \Akeneo\Tool\Component\Connector\Processor\Normalization\Processor(($container->privates['pim_catalog.normalizer.standard.association_type'] ?? $container->load('getPimCatalog_Normalizer_Standard_AssociationTypeService')), $e);
        $gi = new \Akeneo\Pim\Structure\Component\ArrayConverter\StandardToFlat\AssociationType();
        $hi = new \Akeneo\Pim\Structure\Component\ArrayConverter\FlatToStandard\Family($g);

        $ii = new \Akeneo\Tool\Component\Connector\Reader\File\Csv\Reader($ea, $hi);
        $ji = new \Akeneo\Tool\Component\Connector\Processor\Denormalization\Processor($ub, ($container->privates['pim_catalog.factory.family'] ?? $container->load('getPimCatalog_Factory_FamilyService')), ($container->privates['pim_catalog.updater.family'] ?? $container->load('getPimCatalog_Updater_FamilyService')), $ha, $e);
        $ki = new \Akeneo\Tool\Component\Connector\Writer\Database\Writer(($container->privates['pim_catalog.saver.family'] ?? $container->load('getPimCatalog_Saver_FamilyService')), $e);

        $li = new \Akeneo\Tool\Component\Batch\Step\ItemStep('import', $a, $b, $ii, $ji, $ki, 100, $n);
        $mi = new \Akeneo\Pim\Structure\Component\ArrayConverter\FlatToStandard\FamilyVariant($g);
        $ni = new \Akeneo\Tool\Component\Connector\Processor\Denormalization\Processor($zb, ($container->privates['pim_catalog.factory.family_variant'] ?? ($container->privates['pim_catalog.factory.family_variant'] = new \Akeneo\Tool\Component\StorageUtils\Factory\SimpleFactory('Akeneo\\Pim\\Structure\\Component\\Model\\FamilyVariant'))), ($container->privates['pim_catalog.updater.family_variant'] ?? $container->load('getPimCatalog_Updater_FamilyVariantService')), $ha, $e);
        $oi = new \Akeneo\Tool\Component\Connector\Writer\Database\Writer(($container->privates['pim_catalog.saver.family_variant'] ?? $container->load('getPimCatalog_Saver_FamilyVariantService')), $e);

        $pi = new \Akeneo\Tool\Component\Batch\Step\ItemStep('import', $a, $b, new \Akeneo\Tool\Component\Connector\Reader\File\Csv\Reader($ea, $mi), $ni, $oi, 100, $n);
        $qi = new \Akeneo\Tool\Component\Connector\Reader\Database\Reader($ub);
        $ri = new \Akeneo\Tool\Component\Connector\Processor\Normalization\Processor(($container->privates['pim_catalog.normalizer.standard.family'] ?? $container->load('getPimCatalog_Normalizer_Standard_FamilyService')), $e);
        $si = new \Akeneo\Pim\Structure\Component\ArrayConverter\StandardToFlat\Family();
        $ti = new \Akeneo\Tool\Component\Connector\Reader\Database\Reader($zb);
        $ui = new \Akeneo\Tool\Component\Connector\Processor\Normalization\Processor(($container->privates['pim_catalog.normalizer.standard.family_variant'] ?? $container->load('getPimCatalog_Normalizer_Standard_FamilyVariantService')), $e);
        $vi = new \Akeneo\Pim\Structure\Component\ArrayConverter\StandardToFlat\FamilyVariant\FamilyVariant();
        $wi = new \Akeneo\Tool\Component\Connector\Writer\File\FlatItemBufferFlusher($j, new \Akeneo\Tool\Component\Connector\Writer\File\DefaultColumnSorter(new \Akeneo\Pim\Structure\Component\ArrayConverter\StandardToFlat\FamilyVariant\FieldSplitter(), [0 => 'code', 1 => 'family', 2 => 'label', 3 => 'variant-axes', 4 => 'variant-attributes']));
        $xi = new \Akeneo\Tool\Component\Connector\Reader\File\Xlsx\Reader($ka, $hi);
        $yi = new \Akeneo\Pim\Structure\Component\ArrayConverter\FlatToStandard\GroupType($g);

        $zi = new \Akeneo\Tool\Component\Connector\Reader\File\Csv\Reader($ea, $yi);
        $aj = new \Akeneo\Tool\Component\Connector\Processor\Denormalization\Processor($rc, ($container->privates['pim_catalog.factory.group_type'] ?? ($container->privates['pim_catalog.factory.group_type'] = new \Akeneo\Pim\Structure\Component\Factory\GroupTypeFactory('Akeneo\\Pim\\Structure\\Component\\Model\\GroupType'))), ($container->privates['pim_catalog.updater.group_type'] ?? ($container->privates['pim_catalog.updater.group_type'] = new \Akeneo\Pim\Structure\Component\Updater\GroupTypeUpdater())), $ha, $e);
        $bj = new \Akeneo\Tool\Component\Connector\Writer\Database\Writer(($container->privates['pim_catalog.saver.group_type'] ?? $container->load('getPimCatalog_Saver_GroupTypeService')), $e);
        $cj = new \Akeneo\Tool\Component\Connector\Reader\Database\Reader($rc);
        $dj = new \Akeneo\Tool\Component\Connector\Processor\Normalization\Processor(($container->privates['pim_catalog.normalizer.standard.group_type'] ?? $container->load('getPimCatalog_Normalizer_Standard_GroupTypeService')), $e);
        $ej = new \Akeneo\Pim\Structure\Component\ArrayConverter\StandardToFlat\GroupType();
        $fj = new \Akeneo\Pim\Structure\Component\Reader\Database\MassEdit\FilteredFamilyReader($ub);
        $gj = ($container->privates['pim_enrich.product.query_message_bus'] ?? $container->load('getPimEnrich_Product_QueryMessageBusService'));
        $hj = ($container->privates['monolog.logger'] ?? $container->load('getMonolog_LoggerService'));
        $ij = ($container->services['doctrine.orm.default_entity_manager'] ?? $container->getDoctrine_Orm_DefaultEntityManagerService());

        $jj = new \Akeneo\Tool\Component\Connector\Step\CheckJobUniqueStep('check_job_unique', $a, $b, ($container->privates['pim_framework.lock.factory'] ?? $container->load('getPimFramework_Lock_FactoryService')), $hj, new \Akeneo\Tool\Bundle\BatchBundle\Manager\JobExecutionManager($ij), ($container->privates['pim_enrich.repository.job_execution'] ?? $container->load('getPimEnrich_Repository_JobExecutionService')));
        $kj = ($container->privates['akeneo_batch.job.job_instance_repository'] ?? $container->load('getAkeneoBatch_Job_JobInstanceRepositoryService'));
        $lj = new \Akeneo\Tool\Bundle\VersioningBundle\Job\RefreshVersioning($hj, $md, $e, $ij);
        $mj = new \Akeneo\Tool\Bundle\VersioningBundle\Purger\VersionPurger(new \Akeneo\Tool\Bundle\VersioningBundle\Doctrine\Query\SqlDeleteVersionsByIdsQuery($m), new \Akeneo\Tool\Bundle\VersioningBundle\Doctrine\Query\SqlGetAllResourceNamesQuery($m), new \Akeneo\Tool\Bundle\VersioningBundle\Doctrine\Query\SqlGetPurgeableVersionListQuery($m), $hj);
        $mj->addVersionPurgerAdvisor(new \Akeneo\Tool\Bundle\VersioningBundle\Purger\SkipFirstVersionPurgerAdvisor(new \Akeneo\Tool\Bundle\VersioningBundle\Doctrine\Query\SqlGetFirstVersionIdsByIdsQuery($m)));
        $mj->addVersionPurgerAdvisor(new \Akeneo\Tool\Bundle\VersioningBundle\Purger\KeepLastVersionPurgerAdvisor(new \Akeneo\Tool\Bundle\VersioningBundle\Doctrine\Query\SqlGetAllButLastVersionIdsByIdsQuery($m)));
        $nj = ($container->privates['Akeneo\\Pim\\Automation\\DataQualityInsights\\Application\\ProductUuidFactory'] ?? ($container->privates['Akeneo\\Pim\\Automation\\DataQualityInsights\\Application\\ProductUuidFactory'] = new \Akeneo\Pim\Automation\DataQualityInsights\Application\ProductUuidFactory()));
        $oj = ($container->privates['Akeneo\\Pim\\Automation\\DataQualityInsights\\Application\\ProductModelIdFactory'] ?? ($container->privates['Akeneo\\Pim\\Automation\\DataQualityInsights\\Application\\ProductModelIdFactory'] = new \Akeneo\Pim\Automation\DataQualityInsights\Application\ProductModelIdFactory()));
        $pj = ($container->privates['Akeneo\\Catalogs\\Infrastructure\\Persistence\\Catalog\\DisableCatalogQuery'] ?? $container->load('getDisableCatalogQueryService'));
        $qj = ($container->privates['Akeneo\\Catalogs\\Infrastructure\\Service\\DispatchInvalidCatalogDisabledEvent'] ?? $container->load('getDispatchInvalidCatalogDisabledEventService'));

        $instance->register(new \Akeneo\Tool\Component\Batch\Job\Job('csv_user_group_export', $a, $b, [0 => new \Akeneo\Tool\Component\Batch\Step\ItemStep('export', $a, $b, $d, $f, new \Akeneo\Tool\Component\Connector\Writer\File\Csv\Writer($h, $i, $l), 100, $n), 1 => $o], true), 'export', 'Akeneo CSV Connector', NULL);
        $instance->register(new \Akeneo\Tool\Component\Batch\Job\Job('xlsx_user_group_export', $a, $b, [0 => new \Akeneo\Tool\Component\Batch\Step\ItemStep('export', $a, $b, $d, $f, new \Akeneo\Tool\Component\Connector\Writer\File\Xlsx\Writer($h, $i, $l), 100, $n), 1 => $o], true), 'export', 'Akeneo XLSX Connector', NULL);
        $instance->register(new \Akeneo\Tool\Component\Batch\Job\Job('csv_user_role_export', $a, $b, [0 => new \Akeneo\Tool\Component\Batch\Step\ItemStep('export', $a, $b, $q, $r, new \Akeneo\Tool\Component\Connector\Writer\File\Csv\Writer($s, $i, $t), 100, $n), 1 => $o], true), 'export', 'Akeneo CSV Connector', NULL);
        $instance->register(new \Akeneo\Tool\Component\Batch\Job\Job('xlsx_user_role_export', $a, $b, [0 => new \Akeneo\Tool\Component\Batch\Step\ItemStep('export', $a, $b, $q, $r, new \Akeneo\Tool\Component\Connector\Writer\File\Xlsx\Writer($s, $i, $t), 100, $n), 1 => $o], true), 'export', 'Akeneo XLSX Connector', NULL);
        $instance->register(new \Akeneo\Tool\Component\Batch\Job\Job('csv_user_export', $a, $b, [0 => new \Akeneo\Tool\Component\Batch\Step\ItemStep('export', $a, $b, $v, $w, new \Akeneo\UserManagement\Component\Connector\Writer\File\CsvUserWriter($x, $i, $y, $z, $aa, $ba), 100, $n), 1 => $o], true), 'export', 'Akeneo CSV Connector', NULL);
        $instance->register(new \Akeneo\Tool\Component\Batch\Job\Job('xlsx_user_export', $a, $b, [0 => new \Akeneo\Tool\Component\Batch\Step\ItemStep('export', $a, $b, $v, $w, new \Akeneo\UserManagement\Component\Connector\Writer\File\XlsxUserWriter($x, $i, $y, $z, $aa, $ba), 100, $n), 1 => $o], true), 'export', 'Akeneo XLSX Connector', NULL);
        $instance->register(new \Akeneo\Tool\Component\Batch\Job\Job('csv_user_group_import', $a, $b, [0 => $ca, 1 => $da, 2 => new \Akeneo\Tool\Component\Batch\Step\ItemStep('import', $a, $b, $ga, $ia, $ja, 100, $n)], true), 'import', 'Akeneo CSV Connector', NULL);
        $instance->register(new \Akeneo\Tool\Component\Batch\Job\Job('xlsx_user_group_import', $a, $b, [0 => $ca, 1 => $da, 2 => new \Akeneo\Tool\Component\Batch\Step\ItemStep('import', $a, $b, new \Akeneo\Tool\Component\Connector\Reader\File\Xlsx\Reader($ka, $fa), $ia, $ja, 100, $n)], true), 'import', 'Akeneo XLSX Connector', NULL);
        $instance->register(new \Akeneo\Tool\Component\Batch\Job\Job('csv_user_import', $a, $b, [0 => $ca, 1 => $da, 2 => new \Akeneo\Tool\Component\Batch\Step\ItemStep('import', $a, $b, $ma, $qa, $ra, 100, $n)], true), 'import', 'Akeneo CSV Connector', NULL);
        $instance->register(new \Akeneo\Tool\Component\Batch\Job\Job('csv_user_role_import', $a, $b, [0 => $ca, 1 => $da, 2 => new \Akeneo\Tool\Component\Batch\Step\ItemStep('import', $a, $b, new \Akeneo\Tool\Component\Connector\Reader\File\Csv\Reader($ea, $sa), $ua, $va, 1, $n)], true), 'import', 'Akeneo CSV Connector', NULL);
        $instance->register(new \Akeneo\Tool\Component\Batch\Job\Job('xlsx_user_import', $a, $b, [0 => $ca, 1 => $da, 2 => new \Akeneo\Tool\Component\Batch\Step\ItemStep('import', $a, $b, new \Akeneo\UserManagement\Component\Connector\Reader\File\XlsxUserReader($ka, $la), $qa, $ra, 100, $n)], true), 'import', 'Akeneo XLSX Connector', NULL);
        $instance->register(new \Akeneo\Tool\Component\Batch\Job\Job('xlsx_user_role_import', $a, $b, [0 => $ca, 1 => $da, 2 => new \Akeneo\Tool\Component\Batch\Step\ItemStep('import', $a, $b, new \Akeneo\Tool\Component\Connector\Reader\File\Xlsx\Reader($ka, $sa), $ua, $va, 1, $n)], true), 'import', 'Akeneo XLSX Connector', NULL);
        $instance->register(new \Akeneo\Tool\Component\Batch\Job\Job('csv_locale_import', $a, $b, [0 => $ca, 1 => $da, 2 => new \Akeneo\Tool\Component\Batch\Step\ItemStep('import', $a, $b, $xa, $za, $ab, 100, $n)], true), 'import', 'Akeneo CSV Connector', NULL);
        $instance->register(new \Akeneo\Tool\Component\Batch\Job\Job('csv_locale_export', $a, $b, [0 => new \Akeneo\Tool\Component\Batch\Step\ItemStep('export', $a, $b, $bb, $cb, new \Akeneo\Tool\Component\Connector\Writer\File\Csv\Writer($db, $i, $l), 100, $n), 1 => $o], true), 'export', 'Akeneo CSV Connector', NULL);
        $instance->register(new \Akeneo\Tool\Component\Batch\Job\Job('xlsx_locale_import', $a, $b, [0 => $ca, 1 => $da, 2 => new \Akeneo\Tool\Component\Batch\Step\ItemStep('import', $a, $b, new \Akeneo\Tool\Component\Connector\Reader\File\Xlsx\Reader($ka, $wa), $za, $ab, 100, $n)], true), 'import', 'Akeneo XLSX Connector', NULL);
        $instance->register(new \Akeneo\Tool\Component\Batch\Job\Job('xlsx_locale_export', $a, $b, [0 => new \Akeneo\Tool\Component\Batch\Step\ItemStep('export', $a, $b, $bb, $cb, new \Akeneo\Tool\Component\Connector\Writer\File\Xlsx\Writer($db, $i, $l), 10, $n), 1 => $o], true), 'export', 'Akeneo XLSX Connector', NULL);
        $instance->register(new \Akeneo\Tool\Component\Batch\Job\Job('csv_channel_import', $a, $b, [0 => $ca, 1 => $da, 2 => new \Akeneo\Tool\Component\Batch\Step\ItemStep('import', $a, $b, $fb, $hb, $ib, 100, $n)], true), 'import', 'Akeneo CSV Connector', NULL);
        $instance->register(new \Akeneo\Tool\Component\Batch\Job\Job('csv_channel_export', $a, $b, [0 => new \Akeneo\Tool\Component\Batch\Step\ItemStep('export', $a, $b, $jb, $kb, new \Akeneo\Tool\Component\Connector\Writer\File\Csv\Writer($lb, $i, $l), 100, $n), 1 => $o], true), 'export', 'Akeneo CSV Connector', NULL);
        $instance->register(new \Akeneo\Tool\Component\Batch\Job\Job('xlsx_channel_import', $a, $b, [0 => $ca, 1 => $da, 2 => new \Akeneo\Tool\Component\Batch\Step\ItemStep('import', $a, $b, new \Akeneo\Tool\Component\Connector\Reader\File\Xlsx\Reader($ka, $eb), $hb, $ib, 100, $n)], true), 'import', 'Akeneo XLSX Connector', NULL);
        $instance->register(new \Akeneo\Tool\Component\Batch\Job\Job('xlsx_channel_export', $a, $b, [0 => new \Akeneo\Tool\Component\Batch\Step\ItemStep('export', $a, $b, $jb, $kb, new \Akeneo\Tool\Component\Connector\Writer\File\Xlsx\Writer($lb, $i, $l), 10, $n), 1 => $o], true), 'export', 'Akeneo XLSX Connector', NULL);
        $instance->register(new \Akeneo\Tool\Component\Batch\Job\Job('csv_currency_import', $a, $b, [0 => $ca, 1 => $da, 2 => new \Akeneo\Tool\Component\Batch\Step\ItemStep('import', $a, $b, $nb, $pb, $qb, 100, $n)], true), 'import', 'Akeneo CSV Connector', NULL);
        $instance->register(new \Akeneo\Tool\Component\Batch\Job\Job('csv_currency_export', $a, $b, [0 => new \Akeneo\Tool\Component\Batch\Step\ItemStep('export', $a, $b, $rb, $sb, new \Akeneo\Tool\Component\Connector\Writer\File\Csv\Writer($tb, $i, $l), 100, $n), 1 => $o], true), 'export', 'Akeneo CSV Connector', NULL);
        $instance->register(new \Akeneo\Tool\Component\Batch\Job\Job('xlsx_currency_import', $a, $b, [0 => $ca, 1 => $da, 2 => new \Akeneo\Tool\Component\Batch\Step\ItemStep('import', $a, $b, new \Akeneo\Tool\Component\Connector\Reader\File\Xlsx\Reader($ka, $mb), $pb, $qb, 100, $n)], true), 'import', 'Akeneo XLSX Connector', NULL);
        $instance->register(new \Akeneo\Tool\Component\Batch\Job\Job('xlsx_currency_export', $a, $b, [0 => new \Akeneo\Tool\Component\Batch\Step\ItemStep('export', $a, $b, $rb, $sb, new \Akeneo\Tool\Component\Connector\Writer\File\Xlsx\Writer($tb, $i, $l), 10, $n), 1 => $o], true), 'export', 'Akeneo XLSX Connector', NULL);
        $instance->register(new \Akeneo\Tool\Component\Batch\Job\Job('compute_completeness_of_products_family', $a, $b, [0 => new \Akeneo\Tool\Component\Connector\Step\TaskletStep('compute_completeness_of_products_family', $a, $b, new \Akeneo\Pim\Enrichment\Component\Product\Job\ComputeCompletenessOfProductsFamilyTasklet($ub, $vb, $wb, $xb, $yb))], true, false), 'compute_completeness_of_products_family', 'compute completeness of products family', NULL);
        $instance->register(new \Akeneo\Tool\Component\Batch\Job\Job('remove_completeness_for_channel_and_locale', $a, $b, [0 => new \Akeneo\Tool\Component\Connector\Step\TaskletStep('remove_completeness_for_channel_and_locale', $a, $b, new \Akeneo\Pim\Enrichment\Component\Product\Job\RemoveCompletenessForChannelAndLocaleTasklet($yb, ($container->privates['pim_notification.notifier'] ?? $container->load('getPimNotification_NotifierService')), new \Akeneo\Tool\Component\StorageUtils\Factory\SimpleFactory('Akeneo\\Platform\\Bundle\\NotificationBundle\\Entity\\Notification'), $vb, $wb, $gb, $xb, 100))], false, false), 'remove_completeness_for_channel_and_locale', 'remove completeness for channel and locale', NULL);
        $instance->register(new \Akeneo\Tool\Component\Batch\Job\Job('compute_family_variant_structure_changes', $a, $b, [0 => new \Akeneo\Tool\Component\Connector\Step\TaskletStep('compute_family_variant_structure_changes', $a, $b, new \Akeneo\Pim\Enrichment\Component\Product\Job\ComputeFamilyVariantStructureChangesTasklet($zb, $ac, $xb, $bc, $cc, $ha, $a, 100))], true, false), 'compute_family_variant_structure_changes', 'compute_family_variant_structure_changes', NULL);
        $instance->register(new \Akeneo\Tool\Component\Batch\Job\Job('csv_group_import', $a, $b, [0 => $ca, 1 => $da, 2 => $hc], true), 'import', 'Akeneo CSV Connector', NULL);
        $instance->register(new \Akeneo\Tool\Component\Batch\Job\Job('csv_group_export', $a, $b, [0 => new \Akeneo\Tool\Component\Batch\Step\ItemStep('export', $a, $b, $ic, $jc, new \Akeneo\Tool\Component\Connector\Writer\File\Csv\Writer($kc, $i, $l), 100, $n), 1 => $o], true), 'export', 'Akeneo CSV Connector', NULL);
        $instance->register(new \Akeneo\Tool\Component\Batch\Job\Job('csv_product_import', $a, $b, [0 => $ca, 1 => $da, 2 => $od, 3 => $td], true), 'import', 'Akeneo CSV Connector', NULL);
        $instance->register(new \Akeneo\Tool\Component\Batch\Job\Job('csv_product_model_import', $a, $b, [0 => $ca, 1 => $da, 2 => $de, 3 => $fe, 4 => new \Akeneo\Tool\Component\Batch\Step\ItemStep('import_model_associations', $a, $b, new \Akeneo\Pim\Enrichment\Component\Product\Connector\Reader\File\Csv\ProductModelAssociationReader($ea, $ge), $he, $ie, 1, $n)], true), 'import', 'Akeneo CSV Connector', NULL);
        $instance->register(new \Akeneo\Tool\Component\Batch\Job\Job('csv_product_export', $a, $b, [0 => new \Akeneo\Tool\Component\Batch\Step\ItemStep('export', $a, $b, $me, $qe, new \Akeneo\Pim\Enrichment\Component\Product\Connector\Writer\File\Csv\ProductWriter($ue, $i, $we, $nc, $ba, $xe, $ye, $if, $z, $aa, [0 => 'pim_catalog_file', 1 => 'pim_catalog_image']), 100, $n), 1 => $o], true), 'export', 'Akeneo CSV Connector', NULL);
        $instance->register(new \Akeneo\Tool\Component\Batch\Job\Job('csv_product_model_export', $a, $b, [0 => new \Akeneo\Tool\Component\Batch\Step\ItemStep('export', $a, $b, $kf, $mf, new \Akeneo\Pim\Enrichment\Component\Product\Connector\Writer\File\Csv\ProductModelWriter($nf, $i, $pf, $nc, $ba, $qf, $z, $aa, [0 => 'pim_catalog_file', 1 => 'pim_catalog_image']), 100, $n), 1 => $o], true), 'export', 'Akeneo CSV Connector', NULL);
        $instance->register(new \Akeneo\Tool\Component\Batch\Job\Job('xlsx_product_import', $a, $b, [0 => $ca, 1 => $da, 2 => new \Akeneo\Tool\Component\Batch\Step\ItemStep('import', $a, $b, new \Akeneo\Pim\Enrichment\Component\Product\Connector\Reader\File\Xlsx\ProductReader($ka, $ad, $bd, []), $ld, $nd, 100, $n), 3 => new \Akeneo\Tool\Component\Batch\Step\ItemStep('import_associations', $a, $b, new \Akeneo\Pim\Enrichment\Component\Product\Connector\Reader\File\Xlsx\ProductAssociationReader($ka, $pd), $rd, $sd, 1, $n)], true), 'import', 'Akeneo XLSX Connector', NULL);
        $instance->register(new \Akeneo\Tool\Component\Batch\Job\Job('xlsx_product_model_import', $a, $b, [0 => $ca, 1 => $da, 2 => new \Akeneo\Tool\Component\Batch\Step\ItemStep('import_root_product_model', $a, $b, $rf, $be, $ce, 100, $n), 3 => new \Akeneo\Tool\Component\Batch\Step\ItemStep('import_sub_product_model', $a, $b, $rf, $ee, $ce, 100, $n), 4 => new \Akeneo\Tool\Component\Batch\Step\ItemStep('import_associations', $a, $b, new \Akeneo\Pim\Enrichment\Component\Product\Connector\Reader\File\Xlsx\ProductModelAssociationReader($ka, $ge), $he, $ie, 1, $n)], true), 'import', 'Akeneo XLSX Connector', NULL);
        $instance->register(new \Akeneo\Tool\Component\Batch\Job\Job('xlsx_product_export', $a, $b, [0 => new \Akeneo\Tool\Component\Batch\Step\ItemStep('export', $a, $b, $me, $qe, new \Akeneo\Pim\Enrichment\Component\Product\Connector\Writer\File\Xlsx\ProductWriter($ue, $i, $we, $nc, $ba, $xe, $ye, $if, $z, $aa, [0 => 'pim_catalog_file', 1 => 'pim_catalog_image']), 100, $n), 1 => $o], true), 'export', 'Akeneo XLSX Connector', NULL);
        $instance->register(new \Akeneo\Tool\Component\Batch\Job\Job('xlsx_product_model_export', $a, $b, [0 => new \Akeneo\Tool\Component\Batch\Step\ItemStep('export', $a, $b, $kf, $mf, new \Akeneo\Pim\Enrichment\Component\Product\Connector\Writer\File\Xlsx\ProductModelWriter($nf, $i, $pf, $nc, $ba, $qf, $z, $aa, [0 => 'pim_catalog_file', 1 => 'pim_catalog_image']), 100, $n), 1 => $o], true), 'export', 'Akeneo XLSX Connector', NULL);
        $instance->register(new \Akeneo\Tool\Component\Batch\Job\Job('csv_category_import', $a, $b, [0 => $ca, 1 => $da, 2 => $wf], true), 'import', 'Akeneo CSV Connector', NULL);
        $instance->register(new \Akeneo\Tool\Component\Batch\Job\Job('csv_category_export', $a, $b, [0 => new \Akeneo\Tool\Component\Batch\Step\ItemStep('export', $a, $b, $xf, $yf, new \Akeneo\Tool\Component\Connector\Writer\File\Csv\Writer($zf, $i, $l), 100, $n), 1 => $o], true), 'export', 'Akeneo CSV Connector', NULL);
        $instance->register(new \Akeneo\Tool\Component\Batch\Job\Job('xlsx_category_import', $a, $b, [0 => $ca, 1 => $da, 2 => new \Akeneo\Tool\Component\Batch\Step\ItemStep('import', $a, $b, new \Akeneo\Tool\Component\Connector\Reader\File\Xlsx\Reader($ka, $sf), $uf, $vf, 1, $n)], true), 'import', 'Akeneo XLSX Connector', NULL);
        $instance->register(new \Akeneo\Tool\Component\Batch\Job\Job('xlsx_category_export', $a, $b, [0 => new \Akeneo\Tool\Component\Batch\Step\ItemStep('export', $a, $b, $xf, $yf, new \Akeneo\Tool\Component\Connector\Writer\File\Xlsx\Writer($zf, $i, $l), 10, $n), 1 => $o], true), 'export', 'Akeneo XLSX Connector', NULL);
        $instance->register(new \Akeneo\Tool\Component\Batch\Job\Job('xlsx_group_import', $a, $b, [0 => $ca, 1 => $da, 2 => new \Akeneo\Tool\Component\Batch\Step\ItemStep('import', $a, $b, new \Akeneo\Tool\Component\Connector\Reader\File\Xlsx\Reader($ka, $dc), $fc, $gc, 100, $n)], true), 'import', 'Akeneo XLSX Connector', NULL);
        $instance->register(new \Akeneo\Tool\Component\Batch\Job\Job('xlsx_group_export', $a, $b, [0 => new \Akeneo\Tool\Component\Batch\Step\ItemStep('export', $a, $b, $ic, $jc, new \Akeneo\Tool\Component\Connector\Writer\File\Xlsx\Writer($kc, $i, $l), 10, $n), 1 => $o], true), 'export', 'Akeneo XLSX Connector', NULL);
        $instance->register(new \Akeneo\Tool\Component\Batch\Job\Job('csv_product_quick_export', $a, $b, [0 => $gg, 1 => $kg], true), 'quick_export', 'Akeneo CSV Connector', NULL);
        $instance->register(new \Akeneo\Tool\Component\Batch\Job\Job('csv_product_grid_context_quick_export', $a, $b, [0 => $gg, 1 => $kg], true), 'quick_export', 'Akeneo CSV Connector', NULL);
        $instance->register(new \Akeneo\Tool\Component\Batch\Job\Job('xlsx_product_quick_export', $a, $b, [0 => $lg, 1 => $mg], true), 'quick_export', 'Akeneo XLSX Connector', NULL);
        $instance->register(new \Akeneo\Tool\Component\Batch\Job\Job('xlsx_product_grid_context_quick_export', $a, $b, [0 => $lg, 1 => $mg], true), 'quick_export', 'Akeneo XLSX Connector', NULL);
        $instance->register(new \Akeneo\Tool\Component\Batch\Job\Job('update_product_value', $a, $b, [0 => new \Akeneo\Tool\Component\Batch\Step\ItemStep('perform', $a, $b, $ng, $og, $nd, 100, $n)], true), 'mass_edit', 'Akeneo Mass Edit Connector', NULL);
        $instance->register(new \Akeneo\Tool\Component\Batch\Job\Job('add_product_value', $a, $b, [0 => new \Akeneo\Tool\Component\Batch\Step\ItemStep('perform', $a, $b, $pg, $tg, $nd, 100, $n)], true), 'mass_edit', 'Akeneo Mass Edit Connector', NULL);
        $instance->register(new \Akeneo\Tool\Component\Batch\Job\Job('add_to_group', $a, $b, [0 => new \Akeneo\Tool\Component\Batch\Step\ItemStep('perform', $a, $b, $ng, $tg, $nd, 100, $n)], true), 'mass_edit', 'Akeneo Mass Edit Connector', NULL);
        $instance->register(new \Akeneo\Tool\Component\Batch\Job\Job('remove_product_value', $a, $b, [0 => new \Akeneo\Tool\Component\Batch\Step\ItemStep('perform', $a, $b, $pg, $wg, $nd, 100, $n)], true), 'mass_edit', 'Akeneo Mass Edit Connector', NULL);
        $instance->register(new \Akeneo\Tool\Component\Batch\Job\Job('move_to_category', $a, $b, [0 => new \Akeneo\Tool\Component\Batch\Step\ItemStep('perform', $a, $b, $xg, $og, $yg, 100, $n)], true), 'mass_edit', 'Akeneo Mass Edit Connector', NULL);
        $instance->register(new \Akeneo\Tool\Component\Batch\Job\Job('add_to_category', $a, $b, [0 => new \Akeneo\Tool\Component\Batch\Step\ItemStep('perform', $a, $b, $xg, $tg, $yg, 100, $n)], true), 'mass_edit', 'Akeneo Mass Edit Connector', NULL);
        $instance->register(new \Akeneo\Tool\Component\Batch\Job\Job('remove_from_category', $a, $b, [0 => new \Akeneo\Tool\Component\Batch\Step\ItemStep('perform', $a, $b, $xg, $wg, $yg, 100, $n)], true), 'mass_edit', 'Akeneo Mass Edit Connector', NULL);
        $instance->register(new \Akeneo\Tool\Component\Batch\Job\Job('add_association', $a, $b, [0 => new \Akeneo\Tool\Component\Batch\Step\ItemStep('perform', $a, $b, $xg, $tg, $yg, 100, $n)], true), 'mass_edit', 'Akeneo Mass Edit Connector', NULL);
        $instance->register(new \Akeneo\Tool\Component\Batch\Job\Job('edit_common_attributes', $a, $b, [0 => new \Akeneo\Tool\Component\Batch\Step\ItemStep('perform', $a, $b, $zg, new \Akeneo\Pim\Enrichment\Component\Product\Connector\Processor\MassEdit\EditAttributesProcessor($ed, $ed, $dd, $yd, $sc, $ah, $fd, $zd), $yg, 100, $n), 1 => new \Akeneo\Pim\Enrichment\Component\Product\Connector\Step\MassEditStep('cleaner', $a, $b, new \Akeneo\Pim\Enrichment\Component\Product\Connector\Item\MassEdit\TemporaryFileCleaner($dd, $ed, ($container->privates['pim_catalog.repository.product_mass_action'] ?? $container->load('getPimCatalog_Repository_ProductMassActionService')), $nc))], true), 'mass_edit', 'Akeneo Mass Edit Connector', NULL);
        $instance->register(new \Akeneo\Tool\Component\Batch\Job\Job('add_attribute_value', $a, $b, [0 => new \Akeneo\Tool\Component\Batch\Step\ItemStep('perform', $a, $b, $zg, new \Akeneo\Pim\Enrichment\Component\Product\Connector\Processor\MassEdit\AddAttributeValueProcessor($ed, $ed, $sg, $sc, $ah, [0 => 'pim_catalog_multiselect', 1 => 'pim_reference_data_multiselect']), $yg, 100, $n)], true), 'mass_edit', 'Akeneo Mass Edit Connector', NULL);
        $instance->register(new \Akeneo\Tool\Component\Batch\Job\Job('add_to_existing_product_model', $a, $b, [0 => new \Akeneo\Tool\Component\Batch\Step\ItemStep('perform', $a, $b, $ag, new \Akeneo\Pim\Enrichment\Component\Product\Connector\Processor\MassEdit\AddToExistingProductModelProcessor($cd, $ha), $yg, 100, $n)], true), 'mass_edit', 'Akeneo Mass Edit Connector', NULL);
        $instance->register(new \Akeneo\Tool\Component\Batch\Job\Job('convert_to_simple_products', $a, $b, [0 => new \Akeneo\Tool\Component\Batch\Step\ItemStep('perform', $a, $b, $ng, new \Akeneo\Pim\Enrichment\Component\Product\Connector\Processor\MassEdit\ConvertToSimpleProductProcessor($id, $ha), $yg, 100, $n)], true), 'mass_edit', 'Akeneo Mass Edit Connector', NULL);
        $instance->register(new \Akeneo\Tool\Component\Batch\Job\Job('delete_products_and_product_models', $a, $b, [0 => new \Akeneo\Tool\Component\Connector\Step\TaskletStep('delete_products_and_product_models', $a, $b, new \Akeneo\Pim\Enrichment\Component\Product\Job\DeleteProductsAndProductModelsTasklet($ac, ($container->privates['pim_catalog.remover.product'] ?? $container->load('getPimCatalog_Remover_ProductService')), new \Akeneo\Pim\Enrichment\Component\Product\Command\ProductModel\RemoveProductModelsHandler($gd, ($container->privates['pim_catalog.remover.product_model'] ?? $container->load('getPimCatalog_Remover_ProductModelService')), 100), $yb, ($container->privates['pim_catalog.filter.chained'] ?? $container->load('getPimCatalog_Filter_ChainedService')), 100, new \Akeneo\Pim\Enrichment\Bundle\Storage\Sql\ProductModel\CountProductModelsAndChildrenProductModels($m), new \Akeneo\Pim\Enrichment\Bundle\Storage\Sql\ProductModel\CountVariantProducts($m), $n, $b, $ha, ($container->privates['oro_security.security_facade'] ?? $container->getOroSecurity_SecurityFacadeService())))], true), 'mass_edit', 'Akeneo Mass Edit Connector', NULL);
        $instance->register(new \Akeneo\Tool\Component\Batch\Job\Job('change_parent_product', $a, $b, [0 => new \Akeneo\Tool\Component\Batch\Step\ItemStep('perform', $a, $b, $xg, new \Akeneo\Pim\Enrichment\Component\Product\Connector\Processor\MassEdit\ChangeParentProcessor($ed, $ed, $dd, $yd), $yg, 100, $n)], true), 'mass_edit', 'Akeneo Mass Edit Connector', NULL);
        $instance->register(new \Akeneo\Tool\Component\Batch\Job\Job('remove_non_existing_product_values', $a, $b, [0 => new \Akeneo\Tool\Component\Connector\Step\TaskletStep('remove_non_existing_product_values', $a, $b, new \Akeneo\Pim\Enrichment\Component\Product\Job\RemoveNonExistingProductValuesTasklet(new \Akeneo\Pim\Enrichment\Bundle\Storage\ElasticsearchAndSql\ProductAndProductModel\ESGetProductAndProductModelIdentifiersWithValuesIgnoringLocaleAndScope($je, 100), $jd, $wb, $gd, $xb, $bc, $yb, 100, $n))], true, false), 'remove_non_existing_product_values', 'remove_non_existing_product_values', NULL);
        $instance->register(new \Akeneo\Tool\Component\Batch\Job\Job('clean_removed_attribute_job', $a, $b, [0 => new \Akeneo\Tool\Component\Connector\Step\TaskletStep('clean_attribute.register_clean_job', $a, $b, new \Akeneo\Pim\Structure\Bundle\Job\CleanRemovedAttribute\RegisterCleanJobTasklet($bh)), 1 => new \Akeneo\Tool\Component\Connector\Step\TaskletStep('clean_attribute.clean_product_model', $a, $b, new \Akeneo\Pim\Enrichment\Bundle\Job\CleanRemovedAttribute\CleanProductModelTasklet(new \Akeneo\Pim\Enrichment\Bundle\Storage\ElasticsearchAndSql\ProductAndProductModel\GetProductModelIdentifiersWithRemovedAttribute($je), ($container->privates['akeneo.pim.enrichment.product.query.count_product_models_with_removed_attribute'] ?? $container->load('getAkeneo_Pim_Enrichment_Product_Query_CountProductModelsWithRemovedAttributeService')), ($container->services['pim_catalog.product_values.remove_values_from_product_models'] ?? $container->load('getPimCatalog_ProductValues_RemoveValuesFromProductModelsService')), $b)), 2 => new \Akeneo\Tool\Component\Connector\Step\TaskletStep('clean_attribute.clean_product', $a, $b, new \Akeneo\Pim\Enrichment\Bundle\Job\CleanRemovedAttribute\CleanProductTasklet(new \Akeneo\Pim\Enrichment\Bundle\Storage\ElasticsearchAndSql\ProductAndProductModel\GetProductIdentifiersWithRemovedAttribute($je), ($container->privates['akeneo.pim.enrichment.product.query.count_products_with_removed_attribute'] ?? $container->load('getAkeneo_Pim_Enrichment_Product_Query_CountProductsWithRemovedAttributeService')), ($container->services['pim_catalog.product_values.remove_values_from_products'] ?? $container->load('getPimCatalog_ProductValues_RemoveValuesFromProductsService')), $b)), 3 => new \Akeneo\Tool\Component\Connector\Step\TaskletStep('clean_attribute.remove_attribute_codes_from_blacklist', $a, $b, new \Akeneo\Pim\Structure\Bundle\Job\CleanRemovedAttribute\RemoveAttributeCodesFromBlacklistTasklet($bh))], false), 'clean_removed_attribute_job', 'Cleaning removed attribute values', NULL);
        $instance->register(new \Akeneo\Tool\Component\Batch\Job\Job('csv_attribute_import', $a, $b, [0 => $ca, 1 => $da, 2 => $fh], true), 'import', 'Akeneo CSV Connector', NULL);
        $instance->register(new \Akeneo\Tool\Component\Batch\Job\Job('csv_attribute_option_import', $a, $b, [0 => $ca, 1 => $da, 2 => $kh], true), 'import', 'Akeneo CSV Connector', NULL);
        $instance->register(new \Akeneo\Tool\Component\Batch\Job\Job('csv_attribute_group_import', $a, $b, [0 => $ca, 1 => $da, 2 => new \Akeneo\Tool\Component\Batch\Step\ItemStep('import', $a, $b, $mh, $oh, $qh, 100, $n), 3 => new \Akeneo\Tool\Component\Connector\Step\TaskletStep('ensure_attribute_group_order', $a, $b, new \Akeneo\Pim\Enrichment\Component\Product\Connector\Job\EnsureConsistentAttributeGroupOrderTasklet($nh, $mh, $ph, new \Akeneo\Pim\Structure\Bundle\Storage\Sql\SqlFindAttributeGroupOrdersEqualOrSuperiorTo($m), $ha, $b))], true), 'import', 'Akeneo CSV Connector', NULL);
        $instance->register(new \Akeneo\Tool\Component\Batch\Job\Job('csv_attribute_export', $a, $b, [0 => new \Akeneo\Tool\Component\Batch\Step\ItemStep('export', $a, $b, $rh, $sh, new \Akeneo\Tool\Component\Connector\Writer\File\Csv\Writer($th, $i, $l), 100, $n), 1 => $o], true), 'export', 'Akeneo CSV Connector', NULL);
        $instance->register(new \Akeneo\Tool\Component\Batch\Job\Job('csv_attribute_option_export', $a, $b, [0 => new \Akeneo\Tool\Component\Batch\Step\ItemStep('export', $a, $b, $uh, $vh, new \Akeneo\Tool\Component\Connector\Writer\File\Csv\Writer($wh, $i, $l), 100, $n), 1 => $o], true), 'export', 'Akeneo CSV Connector', NULL);
        $instance->register(new \Akeneo\Tool\Component\Batch\Job\Job('csv_attribute_group_export', $a, $b, [0 => new \Akeneo\Tool\Component\Batch\Step\ItemStep('export', $a, $b, $xh, $yh, new \Akeneo\Tool\Component\Connector\Writer\File\Csv\Writer($zh, $i, $l), 100, $n), 1 => $o], true), 'export', 'Akeneo CSV Connector', NULL);
        $instance->register(new \Akeneo\Tool\Component\Batch\Job\Job('xlsx_attribute_import', $a, $b, [0 => $ca, 1 => $da, 2 => new \Akeneo\Tool\Component\Batch\Step\ItemStep('import', $a, $b, new \Akeneo\Tool\Component\Connector\Reader\File\Xlsx\Reader($ka, $ch), $dh, $eh, 100, $n)], true), 'import', 'Akeneo XLSX Connector', NULL);
        $instance->register(new \Akeneo\Tool\Component\Batch\Job\Job('xlsx_attribute_option_import', $a, $b, [0 => $ca, 1 => $da, 2 => new \Akeneo\Tool\Component\Batch\Step\ItemStep('import', $a, $b, new \Akeneo\Tool\Component\Connector\Reader\File\Xlsx\Reader($ka, $gh), $ih, $jh, 100, $n)], true), 'import', 'Akeneo XLSX Connector', NULL);
        $instance->register(new \Akeneo\Tool\Component\Batch\Job\Job('xlsx_attribute_group_import', $a, $b, [0 => $ca, 1 => $da, 2 => new \Akeneo\Tool\Component\Batch\Step\ItemStep('import', $a, $b, new \Akeneo\Tool\Component\Connector\Reader\File\Xlsx\Reader($ka, $lh), $oh, $qh, 100, $n)], true), 'import', 'Akeneo XLSX Connector', NULL);
        $instance->register(new \Akeneo\Tool\Component\Batch\Job\Job('xlsx_attribute_export', $a, $b, [0 => new \Akeneo\Tool\Component\Batch\Step\ItemStep('export', $a, $b, $rh, $sh, new \Akeneo\Tool\Component\Connector\Writer\File\Xlsx\Writer($th, $i, $l), 10, $n), 1 => $o], true), 'export', 'Akeneo XLSX Connector', NULL);
        $instance->register(new \Akeneo\Tool\Component\Batch\Job\Job('xlsx_attribute_option_export', $a, $b, [0 => new \Akeneo\Tool\Component\Batch\Step\ItemStep('export', $a, $b, $uh, $vh, new \Akeneo\Tool\Component\Connector\Writer\File\Xlsx\Writer($wh, $i, $l), 10, $n), 1 => $o], true), 'export', 'Akeneo XLSX Connector', NULL);
        $instance->register(new \Akeneo\Tool\Component\Batch\Job\Job('xlsx_attribute_group_export', $a, $b, [0 => new \Akeneo\Tool\Component\Batch\Step\ItemStep('export', $a, $b, $xh, $yh, new \Akeneo\Tool\Component\Connector\Writer\File\Xlsx\Writer($zh, $i, $l), 10, $n), 1 => $o], true), 'export', 'Akeneo XLSX Connector', NULL);
        $instance->register(new \Akeneo\Tool\Component\Batch\Job\Job('csv_association_type_import', $a, $b, [0 => $ca, 1 => $da, 2 => $di], true), 'import', 'Akeneo CSV Connector', NULL);
        $instance->register(new \Akeneo\Tool\Component\Batch\Job\Job('csv_association_type_export', $a, $b, [0 => new \Akeneo\Tool\Component\Batch\Step\ItemStep('export', $a, $b, $ei, $fi, new \Akeneo\Tool\Component\Connector\Writer\File\Csv\Writer($gi, $i, $l), 100, $n), 1 => $o], true), 'export', 'Akeneo CSV Connector', NULL);
        $instance->register(new \Akeneo\Tool\Component\Batch\Job\Job('xlsx_association_type_import', $a, $b, [0 => $ca, 1 => $da, 2 => new \Akeneo\Tool\Component\Batch\Step\ItemStep('import', $a, $b, new \Akeneo\Tool\Component\Connector\Reader\File\Xlsx\Reader($ka, $ai), $bi, $ci, 100, $n)], true), 'import', 'Akeneo XLSX Connector', NULL);
        $instance->register(new \Akeneo\Tool\Component\Batch\Job\Job('xlsx_association_type_export', $a, $b, [0 => new \Akeneo\Tool\Component\Batch\Step\ItemStep('export', $a, $b, $ei, $fi, new \Akeneo\Tool\Component\Connector\Writer\File\Xlsx\Writer($gi, $i, $l), 10, $n), 1 => $o], true), 'export', 'Akeneo XLSX Connector', NULL);
        $instance->register(new \Akeneo\Tool\Component\Batch\Job\Job('csv_family_import', $a, $b, [0 => $ca, 1 => $da, 2 => $li, 3 => new \Akeneo\Tool\Component\Connector\Step\TaskletStep('compute_data_related_to_family_root_product_models', $a, $b, new \Akeneo\Pim\Enrichment\Component\Product\Connector\Job\ComputeDataRelatedToFamilyRootProductModelsTasklet($ub, $jf, $ii, $cc, $ha, $bc, $yb, $b, 100)), 4 => new \Akeneo\Tool\Component\Connector\Step\TaskletStep('compute_data_related_to_family_sub_product_models', $a, $b, new \Akeneo\Pim\Enrichment\Component\Product\Connector\Job\ComputeDataRelatedToFamilySubProductModelsTasklet($ub, $jf, $ii, $cc, $ha, $bc, $yb, $b, 100)), 5 => new \Akeneo\Tool\Component\Connector\Step\TaskletStep('compute_data_related_to_family_products', $a, $b, new \Akeneo\Pim\Enrichment\Component\Product\Connector\Job\ComputeDataRelatedToFamilyProductsTasklet($ub, $vb, $ii, $xb, $yb, $b, $cc, $ha, $wb, 100))]), 'import', 'Akeneo CSV Connector', NULL);
        $instance->register(new \Akeneo\Tool\Component\Batch\Job\Job('csv_family_variant_import', $a, $b, [0 => $ca, 1 => $da, 2 => $pi]), 'import', 'Akeneo CSV Connector', NULL);
        $instance->register(new \Akeneo\Tool\Component\Batch\Job\Job('csv_family_export', $a, $b, [0 => new \Akeneo\Tool\Component\Batch\Step\ItemStep('export', $a, $b, $qi, $ri, new \Akeneo\Tool\Component\Connector\Writer\File\Csv\Writer($si, $i, $l), 100, $n), 1 => $o], true), 'export', 'Akeneo CSV Connector', NULL);
        $instance->register(new \Akeneo\Tool\Component\Batch\Job\Job('csv_family_variant_export', $a, $b, [0 => new \Akeneo\Tool\Component\Batch\Step\ItemStep('export', $a, $b, $ti, $ui, new \Akeneo\Tool\Component\Connector\Writer\File\Csv\Writer($vi, $i, $wi), 100, $n), 1 => $o], true), 'export', 'Akeneo CSV Connector', NULL);
        $instance->register(new \Akeneo\Tool\Component\Batch\Job\Job('xlsx_family_import', $a, $b, [0 => $ca, 1 => $da, 2 => new \Akeneo\Tool\Component\Batch\Step\ItemStep('import', $a, $b, $xi, $ji, $ki, 100, $n), 3 => new \Akeneo\Tool\Component\Connector\Step\TaskletStep('compute_data_related_to_family_root_product_models', $a, $b, new \Akeneo\Pim\Enrichment\Component\Product\Connector\Job\ComputeDataRelatedToFamilyRootProductModelsTasklet($ub, $jf, $xi, $cc, $ha, $bc, $yb, $b, 100)), 4 => new \Akeneo\Tool\Component\Connector\Step\TaskletStep('compute_data_related_to_family_sub_product_models', $a, $b, new \Akeneo\Pim\Enrichment\Component\Product\Connector\Job\ComputeDataRelatedToFamilySubProductModelsTasklet($ub, $jf, $xi, $cc, $ha, $bc, $yb, $b, 100)), 5 => new \Akeneo\Tool\Component\Connector\Step\TaskletStep('compute_data_related_to_family_products', $a, $b, new \Akeneo\Pim\Enrichment\Component\Product\Connector\Job\ComputeDataRelatedToFamilyProductsTasklet($ub, $vb, $xi, $xb, $yb, $b, $cc, $ha, $wb, 100))]), 'import', 'Akeneo XLSX Connector', NULL);
        $instance->register(new \Akeneo\Tool\Component\Batch\Job\Job('xlsx_family_variant_import', $a, $b, [0 => $ca, 1 => $da, 2 => new \Akeneo\Tool\Component\Batch\Step\ItemStep('import', $a, $b, new \Akeneo\Tool\Component\Connector\Reader\File\Xlsx\Reader($ka, $mi), $ni, $oi, 100, $n)]), 'import', 'Akeneo XLSX Connector', NULL);
        $instance->register(new \Akeneo\Tool\Component\Batch\Job\Job('xlsx_family_export', $a, $b, [0 => new \Akeneo\Tool\Component\Batch\Step\ItemStep('export', $a, $b, $qi, $ri, new \Akeneo\Tool\Component\Connector\Writer\File\Xlsx\Writer($si, $i, $l), 10, $n), 1 => $o], true), 'export', 'Akeneo XLSX Connector', NULL);
        $instance->register(new \Akeneo\Tool\Component\Batch\Job\Job('xlsx_family_variant_export', $a, $b, [0 => new \Akeneo\Tool\Component\Batch\Step\ItemStep('export', $a, $b, $ti, $ui, new \Akeneo\Tool\Component\Connector\Writer\File\Xlsx\Writer($vi, $i, $wi), 10, $n), 1 => $o], true), 'export', 'Akeneo XLSX Connector', NULL);
        $instance->register(new \Akeneo\Tool\Component\Batch\Job\Job('csv_group_type_import', $a, $b, [0 => $ca, 1 => $da, 2 => new \Akeneo\Tool\Component\Batch\Step\ItemStep('import', $a, $b, $zi, $aj, $bj, 100, $n)], true), 'import', 'Akeneo CSV Connector', NULL);
        $instance->register(new \Akeneo\Tool\Component\Batch\Job\Job('csv_group_type_export', $a, $b, [0 => new \Akeneo\Tool\Component\Batch\Step\ItemStep('export', $a, $b, $cj, $dj, new \Akeneo\Tool\Component\Connector\Writer\File\Csv\Writer($ej, $i, $l), 100, $n), 1 => $o], true), 'export', 'Akeneo CSV Connector', NULL);
        $instance->register(new \Akeneo\Tool\Component\Batch\Job\Job('xlsx_group_type_import', $a, $b, [0 => $ca, 1 => $da, 2 => new \Akeneo\Tool\Component\Batch\Step\ItemStep('import', $a, $b, new \Akeneo\Tool\Component\Connector\Reader\File\Xlsx\Reader($ka, $yi), $aj, $bj, 100, $n)], true), 'import', 'Akeneo XLSX Connector', NULL);
        $instance->register(new \Akeneo\Tool\Component\Batch\Job\Job('xlsx_group_type_export', $a, $b, [0 => new \Akeneo\Tool\Component\Batch\Step\ItemStep('export', $a, $b, $cj, $dj, new \Akeneo\Tool\Component\Connector\Writer\File\Xlsx\Writer($ej, $i, $l), 10, $n), 1 => $o], true), 'export', 'Akeneo XLSX Connector', NULL);
        $instance->register(new \Akeneo\Tool\Component\Batch\Job\Job('set_attribute_requirements', $a, $b, [0 => new \Akeneo\Tool\Component\Batch\Step\ItemStep('perform', $a, $b, $fj, new \Akeneo\Pim\Structure\Component\Processor\MassEdit\SetAttributeRequirements($nc, $gb, ($container->privates['pim_catalog.factory.attribute_requirement'] ?? ($container->privates['pim_catalog.factory.attribute_requirement'] = new \Akeneo\Pim\Structure\Component\Factory\AttributeRequirementFactory('Akeneo\\Pim\\Structure\\Component\\Model\\AttributeRequirement'))), $ha, $e), $ki, 100, $n), 1 => new \Akeneo\Tool\Component\Connector\Step\TaskletStep('compute_data_related_to_family_products', $a, $b, new \Akeneo\Pim\Enrichment\Component\Product\Connector\Job\ComputeCompletenessOfFamilyProductsTasklet($fj, $yb, $b, ($container->privates['pim_catalog.completeness.calculator'] ?? $container->load('getPimCatalog_Completeness_CalculatorService')), ($container->privates['akeneo.pim.enrichment.product.query.save_product_completenesses'] ?? $container->load('getAkeneo_Pim_Enrichment_Product_Query_SaveProductCompletenessesService')), $gj)), 2 => new \Akeneo\Tool\Component\Connector\Step\TaskletStep('index_family_products_and_product_models', $a, $b, new \Akeneo\Pim\Enrichment\Bundle\Job\IndexFamilyProductsAndProductModelsTasklet($b, $fj, $jf, ($container->privates['akeneo.pim.enrichment.elasticsearch.indexer.product_and_ancestors'] ?? $container->load('getAkeneo_Pim_Enrichment_Elasticsearch_Indexer_ProductAndAncestorsService')), ($container->services['pim_catalog.elasticsearch.indexer.product_model_descendants_and_ancestors'] ?? $container->load('getPimCatalog_Elasticsearch_Indexer_ProductModelDescendantsAndAncestorsService')), $yb, $gj, 100))], true), 'mass_edit', 'Akeneo Mass Edit Connector', NULL);
        $instance->register(new \Akeneo\Tool\Component\Batch\Job\Job('aggregate_volume_queries', $a, $b, [0 => $jj, 1 => new \Akeneo\Tool\Component\Connector\Step\TaskletStep('aggregate_volume_queries', $a, $b, new \Akeneo\Platform\Bundle\CatalogVolumeMonitoringBundle\Job\AggregateVolumeQueries(($container->privates['pim_volume_monitoring.volume.aggregation'] ?? $container->load('getPimVolumeMonitoring_Volume_AggregationService'))))], false, false), 'scheduled_job', 'internal', NULL);
        $instance->register(new \Akeneo\Tool\Component\Batch\Job\Job('job_executions_purge', $a, $b, [0 => $jj, 1 => new \Akeneo\Tool\Component\Connector\Step\TaskletStep('job_executions_purge', $a, $b, new \Akeneo\Platform\Bundle\ImportExportBundle\Job\PurgeJobExecutions(($container->privates['akeneo.platform.import_export.purge_job_execution'] ?? $container->load('getAkeneo_Platform_ImportExport_PurgeJobExecutionService')), $hj))], false, false), 'scheduled_job', 'internal', NULL);
        $instance->register(new \Akeneo\Tool\Component\Batch\Job\Job('fixtures_category_csv', $a, $b, [0 => $da, 1 => $wf]), 'fixtures', 'Data fixtures', NULL);
        $instance->register(new \Akeneo\Tool\Component\Batch\Job\Job('fixtures_attribute_group_csv', $a, $b, [0 => $da, 1 => new \Akeneo\Tool\Component\Batch\Step\ItemStep('import', $a, $b, $mh, $oh, $qh, 100, $n)]), 'fixtures', 'Data fixtures', NULL);
        $instance->register(new \Akeneo\Tool\Component\Batch\Job\Job('fixtures_channel_csv', $a, $b, [0 => $da, 1 => new \Akeneo\Tool\Component\Batch\Step\ItemStep('import', $a, $b, $fb, $hb, $ib, 100, $n)]), 'fixtures', 'Data fixtures', NULL);
        $instance->register(new \Akeneo\Tool\Component\Batch\Job\Job('fixtures_locale_csv', $a, $b, [0 => $da, 1 => new \Akeneo\Tool\Component\Batch\Step\ItemStep('import', $a, $b, $xa, $za, $ab, 100, $n)]), 'fixtures', 'Data fixtures', NULL);
        $instance->register(new \Akeneo\Tool\Component\Batch\Job\Job('fixtures_currency_csv', $a, $b, [0 => $da, 1 => new \Akeneo\Tool\Component\Batch\Step\ItemStep('import', $a, $b, $nb, $pb, $qb, 100, $n)]), 'fixtures', 'Data fixtures', NULL);
        $instance->register(new \Akeneo\Tool\Component\Batch\Job\Job('fixtures_group_type_csv', $a, $b, [0 => $da, 1 => new \Akeneo\Tool\Component\Batch\Step\ItemStep('import', $a, $b, $zi, $aj, $bj, 100, $n)]), 'fixtures', 'Data fixtures', NULL);
        $instance->register(new \Akeneo\Tool\Component\Batch\Job\Job('fixtures_association_type_csv', $a, $b, [0 => $da, 1 => $di]), 'fixtures', 'Data fixtures', NULL);
        $instance->register(new \Akeneo\Tool\Component\Batch\Job\Job('fixtures_attribute_csv', $a, $b, [0 => $da, 1 => $fh]), 'fixtures', 'Data fixtures', NULL);
        $instance->register(new \Akeneo\Tool\Component\Batch\Job\Job('fixtures_attribute_options_csv', $a, $b, [0 => $da, 1 => $kh]), 'fixtures', 'Data fixtures', NULL);
        $instance->register(new \Akeneo\Tool\Component\Batch\Job\Job('fixtures_family_csv', $a, $b, [0 => $da, 1 => $li]), 'fixtures', 'Data fixtures', NULL);
        $instance->register(new \Akeneo\Tool\Component\Batch\Job\Job('fixtures_family_variant_csv', $a, $b, [0 => $da, 1 => $pi]), 'fixtures', 'Data fixtures', NULL);
        $instance->register(new \Akeneo\Tool\Component\Batch\Job\Job('fixtures_product_model_csv', $a, $b, [0 => $da, 1 => $de, 2 => $fe]), 'fixtures', 'Data fixtures', NULL);
        $instance->register(new \Akeneo\Tool\Component\Batch\Job\Job('fixtures_product_csv', $a, $b, [0 => $da, 1 => $od, 2 => $td]), 'fixtures', 'Data fixtures', NULL);
        $instance->register(new \Akeneo\Tool\Component\Batch\Job\Job('fixtures_user_csv', $a, $b, [0 => $da, 1 => new \Akeneo\Tool\Component\Batch\Step\ItemStep('import', $a, $b, $ma, new \Akeneo\Tool\Component\Connector\Processor\Denormalization\Processor($u, $na, $oa, $ha, $e), $ra, 100, $n)]), 'fixtures', 'Data fixtures', NULL);
        $instance->register(new \Akeneo\Tool\Component\Batch\Job\Job('fixtures_user_role_csv', $a, $b, [0 => $da, 1 => new \Akeneo\Tool\Component\Batch\Step\ItemStep('import', $a, $b, new \Akeneo\Tool\Component\Connector\Reader\File\Csv\Reader($ea, new \Akeneo\Tool\Component\Connector\ArrayConverter\DummyConverter($g, [0 => 'role', 1 => 'label'], [0 => 'role', 1 => 'label'])), new \Akeneo\Tool\Component\Connector\Processor\Denormalization\Processor($p, ($container->privates['pim_user.factory.role'] ?? ($container->privates['pim_user.factory.role'] = new \Akeneo\Tool\Component\StorageUtils\Factory\SimpleFactory('Akeneo\\UserManagement\\Component\\Model\\Role'))), $ta, $ha, $e), new \Akeneo\Tool\Component\Connector\Writer\Database\Writer(($container->privates['pim_user.saver.role'] ?? $container->load('getPimUser_Saver_RoleService')), $e), 100, $n)]), 'fixtures', 'Data fixtures', NULL);
        $instance->register(new \Akeneo\Tool\Component\Batch\Job\Job('fixtures_user_group_csv', $a, $b, [0 => $da, 1 => new \Akeneo\Tool\Component\Batch\Step\ItemStep('import', $a, $b, $ga, $ia, $ja, 100, $n)]), 'fixtures', 'Data fixtures', NULL);
        $instance->register(new \Akeneo\Tool\Component\Batch\Job\Job('fixtures_group_csv', $a, $b, [0 => $da, 1 => $hc]), 'fixtures', 'Data fixtures', NULL);
        $instance->register(new \Akeneo\Tool\Component\Batch\Job\Job('fixtures_job_yml', $a, $b, [0 => $da, 1 => new \Akeneo\Tool\Component\Batch\Step\ItemStep('import', $a, $b, ($container->privates['pim_connector.reader.file.yaml_job_instance'] ?? $container->load('getPimConnector_Reader_File_YamlJobInstanceService')), new \Akeneo\Tool\Component\Connector\Processor\Denormalization\JobInstanceProcessor($kj, ($container->privates['pim_connector.factory.job_instance'] ?? ($container->privates['pim_connector.factory.job_instance'] = new \Akeneo\Tool\Component\StorageUtils\Factory\SimpleFactory('Akeneo\\Tool\\Component\\Batch\\Model\\JobInstance'))), ($container->privates['akeneo_batch.updater.job_instance'] ?? $container->load('getAkeneoBatch_Updater_JobInstanceService')), $ha, $e, ($container->privates['akeneo_batch.job.job_parameters_validator'] ?? $container->load('getAkeneoBatch_Job_JobParametersValidatorService')), ($container->privates['akeneo_batch.job_parameters_factory'] ?? $container->load('getAkeneoBatch_JobParametersFactoryService')), $instance), new \Akeneo\Tool\Component\Connector\Writer\Database\JobInstanceWriter(($container->privates['akeneo_batch.saver.job_instance'] ?? $container->load('getAkeneoBatch_Saver_JobInstanceService')), $e), 100, $n)]), 'fixtures', 'Data fixtures', NULL);
        $instance->register(new \Akeneo\Tool\Component\Batch\Job\Job('versioning_refresh', $a, $b, [0 => new \Akeneo\Tool\Component\Connector\Step\TaskletStep('versioning_refresh', $a, $b, $lj)], false, false), 'scheduled_job', 'internal', NULL);
        $instance->register(new \Akeneo\Tool\Component\Batch\Job\Job('versioning_purge', $a, $b, [0 => $jj, 1 => new \Akeneo\Tool\Component\Connector\Step\TaskletStep('versioning_purge', $a, $b, new \Akeneo\Tool\Bundle\VersioningBundle\Job\PurgeVersioning($mj))], false, false), 'scheduled_job', 'internal', NULL);
        $instance->register(new \Akeneo\Tool\Component\Batch\Job\Job('update_connectivity_audit_data', $a, $b, [0 => $jj, 1 => new \Akeneo\Tool\Component\Connector\Step\TaskletStep('update_connectivity_audit_data', $a, $b, $lj)], false, false), 'scheduled_job', 'internal', NULL);
        $instance->register(new \Akeneo\Tool\Component\Batch\Job\Job('connectivity_audit_purge_error', $a, $b, [0 => $jj, 1 => new \Akeneo\Tool\Component\Connector\Step\TaskletStep('connectivity_audit_purge_error', $a, $b, new \Akeneo\Connectivity\Connection\Infrastructure\Audit\Job\PurgeAuditErrorTasklet(($container->privates['Akeneo\\Connectivity\\Connection\\Infrastructure\\Audit\\Persistence\\PurgeAuditErrorQuery'] ?? $container->load('getPurgeAuditErrorQueryService'))))], false, false), 'scheduled_job', 'internal', NULL);
        $instance->register(new \Akeneo\Tool\Component\Batch\Job\Job('connectivity_create_openid_keys', $a, $b, [0 => $jj, 1 => new \Akeneo\Tool\Component\Connector\Step\TaskletStep('connectivity_create_openid_keys', $a, $b, new \Akeneo\Connectivity\Connection\Infrastructure\Apps\Job\CreateOpenIdKeysTasklet(($container->privates['Akeneo\\Connectivity\\Connection\\Application\\Apps\\Command\\GenerateAsymmetricKeysHandler'] ?? $container->load('getGenerateAsymmetricKeysHandlerService'))))], false, false), 'scheduled_job', 'internal', NULL);
        $instance->register(new \Akeneo\Tool\Component\Batch\Job\Job('purge_connection_error', $a, $b, [0 => $jj, 1 => new \Akeneo\Tool\Component\Connector\Step\TaskletStep('purge_connection_error', $a, $b, new \Akeneo\Connectivity\Connection\Infrastructure\ErrorManagement\Job\PurgeConnectionErrorsTasklet(($container->privates['Akeneo\\Connectivity\\Connection\\Infrastructure\\ErrorManagement\\Persistence\\SelectAllAuditableConnectionCodeQuery'] ?? $container->load('getSelectAllAuditableConnectionCodeQueryService')), ($container->privates['Akeneo\\Connectivity\\Connection\\Infrastructure\\ErrorManagement\\Persistence\\PurgeConnectionErrorsQuery'] ?? $container->load('getPurgeConnectionErrorsQueryService')), $hj))], false, false), 'scheduled_job', 'internal', NULL);
        $instance->register(new \Akeneo\Tool\Component\Batch\Job\Job('events_api_purge', $a, $b, [0 => $jj, 1 => new \Akeneo\Tool\Component\Connector\Step\TaskletStep('events_api_purge', $a, $b, new \Akeneo\Connectivity\Connection\Infrastructure\Webhook\EventsApiDebug\Job\PurgeEventsApiLogs($hj, ($container->privates['Akeneo\\Connectivity\\Connection\\Infrastructure\\Webhook\\EventsApiDebug\\Persistence\\PurgeEventsApiSuccessLogsQuery'] ?? $container->load('getPurgeEventsApiSuccessLogsQueryService')), ($container->privates['Akeneo\\Connectivity\\Connection\\Infrastructure\\Webhook\\EventsApiDebug\\Persistence\\PurgeEventsApiErrorLogsQuery'] ?? $container->load('getPurgeEventsApiErrorLogsQueryService'))))], false, false), 'scheduled_job', 'internal', NULL);
        $instance->register(new \Akeneo\Tool\Component\Batch\Job\Job('data_quality_insights_prepare_evaluations', $a, $b, [0 => new \Akeneo\Tool\Component\Connector\Step\TaskletStep('prepare_products_criteria_evaluation', $a, $b, new \Akeneo\Pim\Automation\DataQualityInsights\Infrastructure\Connector\Tasklet\PrepareProductsCriteriaEvaluationTasklet(new \Akeneo\Pim\Automation\DataQualityInsights\Application\ProductEvaluation\MarkCriteriaToEvaluate(new \Akeneo\Pim\Automation\DataQualityInsights\Infrastructure\Elasticsearch\Query\GetUpdatedEntityIdsQuery($je, 'Akeneo\\Pim\\Enrichment\\Component\\Product\\Model\\ProductInterface', $nj), new \Akeneo\Pim\Automation\DataQualityInsights\Infrastructure\Persistence\Query\ProductEvaluation\GetProductIdsImpactedByAttributeGroupActivationQuery($m, $nj), ($container->services['akeneo.pim.automation.data_quality_insights.create_products_criteria_evaluations'] ?? $container->load('getAkeneo_Pim_Automation_DataQualityInsights_CreateProductsCriteriaEvaluationsService'))), $hj)), 1 => new \Akeneo\Tool\Component\Connector\Step\TaskletStep('prepare_product_models_criteria_evaluation', $a, $b, new \Akeneo\Pim\Automation\DataQualityInsights\Infrastructure\Connector\Tasklet\PrepareProductModelsCriteriaEvaluationTasklet(new \Akeneo\Pim\Automation\DataQualityInsights\Application\ProductEvaluation\MarkCriteriaToEvaluate(new \Akeneo\Pim\Automation\DataQualityInsights\Infrastructure\Elasticsearch\Query\GetUpdatedEntityIdsQuery($je, 'Akeneo\\Pim\\Enrichment\\Component\\Product\\Model\\ProductModelInterface', $oj), new \Akeneo\Pim\Automation\DataQualityInsights\Infrastructure\Persistence\Query\ProductEvaluation\GetProductModelIdsImpactedByAttributeGroupActivationQuery($m, $oj), ($container->services['akeneo.pim.automation.data_quality_insights.create_product_models_criteria_evaluations'] ?? $container->load('getAkeneo_Pim_Automation_DataQualityInsights_CreateProductModelsCriteriaEvaluationsService'))), $hj))], true, false), 'data_quality_insights', 'Data Quality Insights Connector', NULL);
        $instance->register(new \Akeneo\Tool\Component\Batch\Job\Job('data_quality_insights_evaluations', $a, $b, [0 => new \Akeneo\Tool\Component\Connector\Step\TaskletStep('evaluate_products_and_product_models_criteria', $a, $b, new \Akeneo\Pim\Automation\DataQualityInsights\Infrastructure\Connector\Tasklet\EvaluateProductsAndProductModelsCriteriaTasklet(($container->privates['akeneo.pim.automation.data_quality_insights.query.get_product_ids_to_evaluate'] ?? $container->load('getAkeneo_Pim_Automation_DataQualityInsights_Query_GetProductIdsToEvaluateService')), ($container->privates['akeneo.pim.automation.data_quality_insights.query.get_product_model_ids_to_evaluate'] ?? $container->load('getAkeneo_Pim_Automation_DataQualityInsights_Query_GetProductModelIdsToEvaluateService')), ($container->privates['Akeneo\\Pim\\Automation\\DataQualityInsights\\Application\\ProductEvaluation\\EvaluateProducts'] ?? $container->load('getEvaluateProductsService')), ($container->privates['Akeneo\\Pim\\Automation\\DataQualityInsights\\Application\\ProductEvaluation\\EvaluateProductModels'] ?? $container->load('getEvaluateProductModelsService'))))], true, false), 'data_quality_insights', 'Data Quality Insights Connector', NULL);
        $instance->register(new \Akeneo\Tool\Component\Batch\Job\Job('data_quality_insights_periodic_tasks', $a, $b, [0 => new \Akeneo\Tool\Component\Connector\Step\TaskletStep('purge_outdated_data', $a, $b, new \Akeneo\Pim\Automation\DataQualityInsights\Infrastructure\Connector\Tasklet\PurgeOutdatedDataTasklet(($container->privates['Akeneo\\Pim\\Automation\\DataQualityInsights\\Application\\Consolidation\\PurgeOutdatedData'] ?? $container->load('getPurgeOutdatedDataService')), $hj)), 1 => new \Akeneo\Tool\Component\Connector\Step\TaskletStep('consolidate_dashboard_rates', $a, $b, new \Akeneo\Pim\Automation\DataQualityInsights\Infrastructure\Connector\Tasklet\ConsolidateDashboardRatesTasklet(($container->privates['Akeneo\\Pim\\Automation\\DataQualityInsights\\Application\\Consolidation\\ConsolidateDashboardRates'] ?? $container->load('getConsolidateDashboardRatesService')), $hj))], true, false), 'data_quality_insights', 'Data Quality Insights Connector', NULL);
        $instance->register(new \Akeneo\Tool\Component\Batch\Job\Job('data_quality_insights_recompute_products_scores', $a, $b, [0 => new \Akeneo\Tool\Component\Connector\Step\TaskletStep('recompute_product_scores', $a, $b, new \Akeneo\Pim\Automation\DataQualityInsights\Infrastructure\Connector\Tasklet\RecomputeProductScoresTasklet(($container->privates['Akeneo\\Pim\\Automation\\DataQualityInsights\\Application\\Consolidation\\ConsolidateProductScores'] ?? $container->load('getConsolidateProductScoresService')), $m, ($container->privates['akeneo_batch_queue.launcher.queue_job_launcher'] ?? $container->load('getAkeneoBatchQueue_Launcher_QueueJobLauncherService')), $kj, $hj, $nj))], true, false), 'data_quality_insights', 'Data Quality Insights Connector', NULL);
        $instance->register(new \Akeneo\Tool\Component\Batch\Job\Job('schedule_dqi_periodic_tasks', $a, $b, [0 => $jj, 1 => new \Akeneo\Tool\Component\Connector\Step\TaskletStep('schedule_dqi_periodic_tasks', $a, $b, new \Akeneo\Pim\Automation\DataQualityInsights\Infrastructure\Connector\Tasklet\SchedulePeriodicTasksTasklet(($container->privates['Akeneo\\Pim\\Automation\\DataQualityInsights\\Infrastructure\\Connector\\JobLauncher\\SchedulePeriodicTasks'] ?? $container->load('getSchedulePeriodicTasksService')), $pe))], false, false), 'scheduled_job', 'internal', NULL);
        $instance->register(new \Akeneo\Tool\Component\Batch\Job\Job('disable_catalogs_on_currency_deactivation', $a, $b, [0 => new \Akeneo\Tool\Component\Connector\Step\TaskletStep('disable_catalogs_on_currency_deactivation', $a, $b, new \Akeneo\Catalogs\Infrastructure\Job\DisableCatalogsOnCurrencyDeactivationTasklet(new \Akeneo\Catalogs\Infrastructure\Persistence\Catalog\GetCatalogIdsUsingCurrenciesAsFilterQuery($m), $pj, $qj))], false, false), 'disable_catalogs_on_currency_deactivation', 'Disable catalogs on currency deactivation', NULL);
        $instance->register(new \Akeneo\Tool\Component\Batch\Job\Job('disable_catalogs_on_channel_removal', $a, $b, [0 => new \Akeneo\Tool\Component\Connector\Step\TaskletStep('disable_catalogs_on_channel_removal', $a, $b, new \Akeneo\Catalogs\Infrastructure\Job\DisableCatalogsOnChannelRemovalTasklet(new \Akeneo\Catalogs\Infrastructure\Persistence\Catalog\GetCatalogIdsUsingChannelsAsFilterQuery($m), $pj, $qj))], false, false), 'disable_catalogs_on_channel_removal', 'Disable catalogs on channel removal', NULL);
        $instance->register(new \Akeneo\Tool\Component\Batch\Job\Job('disable_catalogs_on_locale_deactivation', $a, $b, [0 => new \Akeneo\Tool\Component\Connector\Step\TaskletStep('disable_catalogs_on_locale_deactivation', $a, $b, new \Akeneo\Catalogs\Infrastructure\Job\DisableCatalogsOnLocaleDeactivationTasklet(new \Akeneo\Catalogs\Infrastructure\Persistence\Catalog\GetCatalogIdsUsingLocalesAsFilterQuery($m), $pj, $qj))], false, false), 'disable_catalogs_on_locale_deactivation', 'Disable catalogs on locale deactivation', NULL);

        return $instance;
    }
}
