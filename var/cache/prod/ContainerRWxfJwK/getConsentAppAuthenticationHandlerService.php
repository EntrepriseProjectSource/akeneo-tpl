<?php

namespace ContainerRWxfJwK;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/*
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getConsentAppAuthenticationHandlerService extends KernelProdContainer
{
    /*
     * Gets the private 'Akeneo\Connectivity\Connection\Application\Apps\Command\ConsentAppAuthenticationHandler' shared service.
     *
     * @return \Akeneo\Connectivity\Connection\Application\Apps\Command\ConsentAppAuthenticationHandler
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Connectivity/Connection/back/Application/Apps/Command/ConsentAppAuthenticationHandler.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Connectivity/Connection/back/Domain/ClockInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Connectivity/Connection/back/Infrastructure/Service/Clock/SystemClock.php';

        return $container->privates['Akeneo\\Connectivity\\Connection\\Application\\Apps\\Command\\ConsentAppAuthenticationHandler'] = new \Akeneo\Connectivity\Connection\Application\Apps\Command\ConsentAppAuthenticationHandler(($container->privates['Akeneo\\Connectivity\\Connection\\Infrastructure\\Apps\\Persistence\\GetAppConfirmationQuery'] ?? $container->load('getGetAppConfirmationQueryService')), ($container->privates['Akeneo\\Connectivity\\Connection\\Infrastructure\\Apps\\Session\\AppAuthorizationSession'] ?? $container->load('getAppAuthorizationSessionService')), ($container->privates['Akeneo\\Connectivity\\Connection\\Infrastructure\\Apps\\Persistence\\CreateUserConsentQuery'] ?? $container->load('getCreateUserConsentQueryService')), ($container->privates['Akeneo\\Connectivity\\Connection\\Infrastructure\\Service\\Clock\\SystemClock'] ?? ($container->privates['Akeneo\\Connectivity\\Connection\\Infrastructure\\Service\\Clock\\SystemClock'] = new \Akeneo\Connectivity\Connection\Infrastructure\Service\Clock\SystemClock())), ($container->services['.container.private.validator'] ?? $container->load('get_Container_Private_ValidatorService')));
    }
}
