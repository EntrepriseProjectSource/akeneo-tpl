<?php

namespace ContainerRWxfJwK;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/*
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getPimUser_Updater_UserService extends KernelProdContainer
{
    /*
     * Gets the private 'pim_user.updater.user' shared service.
     *
     * @return \Akeneo\UserManagement\Component\Updater\UserUpdater
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Tool/Component/StorageUtils/Updater/ObjectUpdaterInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/UserManagement/Component/Updater/UserUpdater.php';

        $a = ($container->privates['pim_user.manager'] ?? $container->load('getPimUser_ManagerService'));

        if (isset($container->privates['pim_user.updater.user'])) {
            return $container->privates['pim_user.updater.user'];
        }
        $b = ($container->privates['akeneo_file_storage.file_storage.file.file_storer'] ?? $container->load('getAkeneoFileStorage_FileStorage_File_FileStorerService'));

        if (isset($container->privates['pim_user.updater.user'])) {
            return $container->privates['pim_user.updater.user'];
        }

        return $container->privates['pim_user.updater.user'] = new \Akeneo\UserManagement\Component\Updater\UserUpdater($a, ($container->privates['pim_catalog.repository.category'] ?? $container->getPimCatalog_Repository_CategoryService()), ($container->privates['pim_catalog.repository.locale'] ?? $container->getPimCatalog_Repository_LocaleService()), ($container->services['pim_catalog.repository.channel'] ?? $container->getPimCatalog_Repository_ChannelService()), ($container->services['pim_user.repository.role'] ?? $container->load('getPimUser_Repository_RoleService')), ($container->privates['pim_user.repository.group'] ?? $container->load('getPimUser_Repository_GroupService')), ($container->privates['pim_datagrid.repository.datagrid_view'] ?? $container->load('getPimDatagrid_Repository_DatagridViewService')), ($container->privates['akeneo_file_storage.repository.file_info'] ?? $container->load('getAkeneoFileStorage_Repository_FileInfoService')), $b, '/tmp/pim/file_storage');
    }
}
