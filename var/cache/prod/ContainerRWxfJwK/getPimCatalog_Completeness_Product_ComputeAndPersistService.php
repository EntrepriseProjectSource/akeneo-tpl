<?php

namespace ContainerRWxfJwK;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/*
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getPimCatalog_Completeness_Product_ComputeAndPersistService extends KernelProdContainer
{
    /*
     * Gets the public 'pim_catalog.completeness.product.compute_and_persist' shared service.
     *
     * @return \Akeneo\Pim\Enrichment\Bundle\Product\ComputeAndPersistProductCompletenesses
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Enrichment/Bundle/Product/ComputeAndPersistProductCompletenesses.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Enrichment/Product/back/Domain/Clock.php';
        include_once \dirname(__DIR__, 4).'/vendor/akeneo/pim-community-dev/src/Akeneo/Pim/Enrichment/Product/back/Infrastructure/SystemClock.php';

        $a = ($container->privates['pim_catalog.completeness.calculator'] ?? $container->load('getPimCatalog_Completeness_CalculatorService'));

        if (isset($container->services['pim_catalog.completeness.product.compute_and_persist'])) {
            return $container->services['pim_catalog.completeness.product.compute_and_persist'];
        }
        $b = ($container->privates['akeneo.pim.enrichment.product.query.save_product_completenesses'] ?? $container->load('getAkeneo_Pim_Enrichment_Product_Query_SaveProductCompletenessesService'));

        if (isset($container->services['pim_catalog.completeness.product.compute_and_persist'])) {
            return $container->services['pim_catalog.completeness.product.compute_and_persist'];
        }
        $c = ($container->privates['akeneo.pim.enrichment.product.query.get_product_completenesses'] ?? $container->load('getAkeneo_Pim_Enrichment_Product_Query_GetProductCompletenessesService'));

        if (isset($container->services['pim_catalog.completeness.product.compute_and_persist'])) {
            return $container->services['pim_catalog.completeness.product.compute_and_persist'];
        }
        $d = ($container->services['event_dispatcher'] ?? $container->getEventDispatcherService());

        if (isset($container->services['pim_catalog.completeness.product.compute_and_persist'])) {
            return $container->services['pim_catalog.completeness.product.compute_and_persist'];
        }

        return $container->services['pim_catalog.completeness.product.compute_and_persist'] = new \Akeneo\Pim\Enrichment\Bundle\Product\ComputeAndPersistProductCompletenesses($a, $b, $c, $d, new \Akeneo\Pim\Enrichment\Product\Infrastructure\SystemClock(), ($container->services['.container.private.security.token_storage'] ?? $container->get_Container_Private_Security_TokenStorageService()), ($container->privates['monolog.logger'] ?? $container->load('getMonolog_LoggerService')));
    }
}
